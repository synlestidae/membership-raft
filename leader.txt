2020-03-29 20:14:38,573 INFO  [test] Loading config from config.main.toml
2020-03-29 20:14:38,574 TRACE [mio::poll] registering with poller
2020-03-29 20:14:38,574 INFO  [test] This node's ID is 1
2020-03-29 20:14:38,575 INFO  [test] Server will run on port 5001
2020-03-29 20:14:38,575 INFO  [test] Waiting for 5 seconds before adding config
2020-03-29 20:14:38,575 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:38,575 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:38,575 DEBUG [test::storage] Handling GetInitialState
2020-03-29 20:14:38,575 DEBUG [test::storage] Members in initial state: MembershipConfig { is_in_joint_consensus: false, members: [1], non_voters: [], removing: [] }
2020-03-29 20:14:38,575 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:38,575 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:38,575 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:38,575 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:38,575 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:42,675 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:43,568 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:43,575 INFO  [test] Adding config
2020-03-29 20:14:43,576 INFO  [test] Successfully added config
2020-03-29 20:14:43,576 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:43,576 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:43,576 INFO  [launch] Configured for staging.
2020-03-29 20:14:43,576 INFO  [launch_] address: 0.0.0.0
2020-03-29 20:14:43,576 INFO  [launch_] port: 5001
2020-03-29 20:14:43,576 INFO  [launch_] log: normal
2020-03-29 20:14:43,576 INFO  [launch_] workers: 24
2020-03-29 20:14:43,576 INFO  [launch_] secret key: generated
2020-03-29 20:14:43,576 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:43,576 INFO  [launch_] limits: forms = 32KiB
2020-03-29 20:14:43,577 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:43,577 INFO  [launch_] keep-alive: 5s
2020-03-29 20:14:43,577 INFO  [launch_] tls: disabled
2020-03-29 20:14:43,577 DEBUG [test::storage] Handling SaveHardState
2020-03-29 20:14:43,577 DEBUG [test::storage] Handling AppendEntryToLog
2020-03-29 20:14:43,577 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:43,577 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:43,577 INFO  [rocket::rocket] Mounting /:
2020-03-29 20:14:43,577 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:43,577 INFO  [_] POST /client/clientPayload
2020-03-29 20:14:43,577 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:43,578 INFO  [_] POST /rpc/appendEntriesRequest
2020-03-29 20:14:43,578 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:43,578 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:43,578 INFO  [_] POST /rpc/voteRequest
2020-03-29 20:14:43,578 DEBUG [test::storage] Handling ApplyEntryToStateMachine
2020-03-29 20:14:43,578 TRACE [test::storage] Applying msg ConfigChange(EntryConfigChange { membership: MembershipConfig { is_in_joint_consensus: false, members: [1], non_voters: [], removing: [] } })
2020-03-29 20:14:43,578 INFO  [_] POST /rpc/installSnapshotRequest
2020-03-29 20:14:43,578 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:43,578 INFO  [launch] Rocket has launched from http://0.0.0.0:5001
2020-03-29 20:14:43,578 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:43,578 DEBUG [hyper::server] threads = 24
2020-03-29 20:14:43,578 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:43,649 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:43,650 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:43,650 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:43,650 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:43,650 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:43,650 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:43,650 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:43,650 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:43,650 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:43,650 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:43,650 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:43,651 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:43,651 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:43,651 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:43,651 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:43,651 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:43,651 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:43,651 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:43,651 TRACE [_] NetStream::read()
2020-03-29 20:14:43,651 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:43,651 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:43,651 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:43,651 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:43,651 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:43,651 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:43,651 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:43,651 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:43,651 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:43,651 TRACE [_] DataStream::read()
2020-03-29 20:14:43,651 TRACE [_] DataStream::read()
2020-03-29 20:14:43,651 TRACE [_] DataStream::read()
2020-03-29 20:14:43,651 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:43,651 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46818 and port 5002
2020-03-29 20:14:43,651 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:43,651 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:43,652 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:43,652 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:43,652 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:43,652 INFO  [_] Outcome: Success
2020-03-29 20:14:43,652 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:43,652 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:43,652 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:43,652 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:43,652 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:43,652 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:43,652 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:43,652 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 43, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 652689322 })) )
2020-03-29 20:14:43,652 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:43 GMT
, }]
2020-03-29 20:14:43,652 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:43,652 TRACE [hyper::server::response] ending
2020-03-29 20:14:43,652 INFO  [_] Response succeeded.
2020-03-29 20:14:43,652 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:43,653 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46818
2020-03-29 20:14:43,653 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:43,653 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:43,653 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:43,653 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:43,653 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:43,653 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:43,653 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46818
2020-03-29 20:14:43,909 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:43,909 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:43,909 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:43,910 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:43,910 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:43,911 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:43,911 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:43,911 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:43,911 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:43,911 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:43,911 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:43,911 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:43,911 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:43,911 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:43,911 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:43,912 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:43,912 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:43,912 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:43,912 TRACE [_] NetStream::read()
2020-03-29 20:14:43,912 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:43,912 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:43,912 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:43,912 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:43,912 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:43,912 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:43,912 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:43,913 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:43,913 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:43,913 TRACE [_] DataStream::read()
2020-03-29 20:14:43,913 TRACE [_] DataStream::read()
2020-03-29 20:14:43,913 TRACE [_] DataStream::read()
2020-03-29 20:14:43,913 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:43,913 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46820 and port 5002
2020-03-29 20:14:43,913 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:43,913 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:43,913 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:43,914 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:43,914 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:43,914 INFO  [_] Outcome: Success
2020-03-29 20:14:43,914 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:43,914 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:43,914 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:43,914 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:43,914 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:43,914 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:43,914 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:43,914 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 43, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 914972354 })) )
2020-03-29 20:14:43,915 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:43 GMT
, }]
2020-03-29 20:14:43,915 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:43,915 TRACE [hyper::server::response] ending
2020-03-29 20:14:43,915 INFO  [_] Response succeeded.
2020-03-29 20:14:43,915 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:43,915 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46820
2020-03-29 20:14:43,915 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:43,915 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:43,915 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:43,915 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:43,915 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:43,915 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:43,915 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46820
2020-03-29 20:14:44,171 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:44,171 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:44,171 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:44,172 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:44,172 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:44,172 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:44,172 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:44,172 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:44,172 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:44,172 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:44,172 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:44,172 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:44,172 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:44,172 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:44,172 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:44,173 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:44,173 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:44,173 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:44,173 TRACE [_] NetStream::read()
2020-03-29 20:14:44,173 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:44,173 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:44,173 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:44,173 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:44,173 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:44,173 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:44,174 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:44,174 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:44,174 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:44,174 TRACE [_] DataStream::read()
2020-03-29 20:14:44,174 TRACE [_] DataStream::read()
2020-03-29 20:14:44,174 TRACE [_] DataStream::read()
2020-03-29 20:14:44,174 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:44,174 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46822 and port 5002
2020-03-29 20:14:44,174 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:44,174 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:44,174 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:44,175 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:44,175 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:44,175 INFO  [_] Outcome: Success
2020-03-29 20:14:44,175 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:44,175 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:44,175 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:44,175 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:44,175 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:44,175 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:44,175 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:44,176 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 44, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 176046121 })) )
2020-03-29 20:14:44,176 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:44 GMT
, }]
2020-03-29 20:14:44,176 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:44,176 TRACE [hyper::server::response] ending
2020-03-29 20:14:44,176 INFO  [_] Response succeeded.
2020-03-29 20:14:44,176 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:44,176 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46822
2020-03-29 20:14:44,176 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:44,176 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:44,176 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:44,176 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:44,177 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:44,177 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:44,177 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46822
2020-03-29 20:14:44,434 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:44,434 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:44,434 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:44,435 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:44,435 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:44,435 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:44,435 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:44,436 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:44,436 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:44,436 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:44,436 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:44,436 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:44,436 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:44,436 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:44,436 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:44,436 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:44,437 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:44,437 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:44,437 TRACE [_] NetStream::read()
2020-03-29 20:14:44,437 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:44,437 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:44,437 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:44,437 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:44,437 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:44,437 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:44,437 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:44,437 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:44,437 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:44,437 TRACE [_] DataStream::read()
2020-03-29 20:14:44,437 TRACE [_] DataStream::read()
2020-03-29 20:14:44,437 TRACE [_] DataStream::read()
2020-03-29 20:14:44,438 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:44,438 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46824 and port 5002
2020-03-29 20:14:44,438 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:44,438 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:44,438 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:44,438 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:44,438 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:44,438 INFO  [_] Outcome: Success
2020-03-29 20:14:44,439 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:44,439 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:44,439 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:44,439 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:44,439 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:44,439 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:44,439 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:44,439 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 44, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 439561543 })) )
2020-03-29 20:14:44,439 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:44 GMT
, }]
2020-03-29 20:14:44,439 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:44,439 TRACE [hyper::server::response] ending
2020-03-29 20:14:44,440 INFO  [_] Response succeeded.
2020-03-29 20:14:44,440 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:44,440 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46824
2020-03-29 20:14:44,440 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:44,440 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:44,440 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:44,440 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:44,440 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:44,440 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:44,440 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46824
2020-03-29 20:14:44,695 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:44,695 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:44,695 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:44,695 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:44,696 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:44,696 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:44,696 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:44,696 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:44,696 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:44,696 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:44,696 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:44,696 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:44,696 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:44,696 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:44,696 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:44,697 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:44,697 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:44,697 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:44,697 TRACE [_] NetStream::read()
2020-03-29 20:14:44,697 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:44,697 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:44,697 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:44,697 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:44,697 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:44,697 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:44,697 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:44,698 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:44,698 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:44,698 TRACE [_] DataStream::read()
2020-03-29 20:14:44,698 TRACE [_] DataStream::read()
2020-03-29 20:14:44,698 TRACE [_] DataStream::read()
2020-03-29 20:14:44,698 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:44,698 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46826 and port 5002
2020-03-29 20:14:44,698 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:44,698 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:44,699 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:44,699 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:44,699 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:44,699 INFO  [_] Outcome: Success
2020-03-29 20:14:44,699 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:44,699 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:44,699 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:44,699 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:44,699 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:44,699 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:44,700 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:44,700 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 44, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 700143992 })) )
2020-03-29 20:14:44,700 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:44 GMT
, }]
2020-03-29 20:14:44,700 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:44,700 TRACE [hyper::server::response] ending
2020-03-29 20:14:44,700 INFO  [_] Response succeeded.
2020-03-29 20:14:44,700 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:44,700 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46826
2020-03-29 20:14:44,700 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:44,700 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:44,701 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:44,701 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:44,701 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:44,701 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:44,701 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46826
2020-03-29 20:14:44,958 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:44,958 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:44,958 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:44,959 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:44,959 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:44,959 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:44,959 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:44,959 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:44,959 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:44,959 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:44,959 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:44,959 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:44,959 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:44,959 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:44,960 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:44,960 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:44,960 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:44,960 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:44,960 TRACE [_] NetStream::read()
2020-03-29 20:14:44,960 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:44,960 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:44,960 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:44,960 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:44,960 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:44,960 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:44,961 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:44,961 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:44,961 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:44,961 TRACE [_] DataStream::read()
2020-03-29 20:14:44,961 TRACE [_] DataStream::read()
2020-03-29 20:14:44,961 TRACE [_] DataStream::read()
2020-03-29 20:14:44,961 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:44,961 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46828 and port 5002
2020-03-29 20:14:44,961 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:44,961 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:44,962 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:44,962 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:44,962 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:44,962 INFO  [_] Outcome: Success
2020-03-29 20:14:44,962 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:44,962 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:44,962 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:44,962 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:44,962 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:44,962 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:44,963 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:44,963 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 44, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 963140797 })) )
2020-03-29 20:14:44,963 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:44 GMT
, }]
2020-03-29 20:14:44,963 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:44,963 TRACE [hyper::server::response] ending
2020-03-29 20:14:44,963 INFO  [_] Response succeeded.
2020-03-29 20:14:44,963 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:44,963 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46828
2020-03-29 20:14:44,963 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:44,963 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:44,964 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:44,964 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:44,964 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:44,964 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:44,964 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46828
2020-03-29 20:14:45,221 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:45,221 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:45,221 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:45,222 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:45,222 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:45,222 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:45,222 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:45,222 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:45,222 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:45,222 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:45,223 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:45,223 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:45,223 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:45,223 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:45,223 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:45,223 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:45,223 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:45,223 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:45,223 TRACE [_] NetStream::read()
2020-03-29 20:14:45,223 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:45,223 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:45,224 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:45,224 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:45,224 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:45,224 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:45,224 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:45,224 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:45,224 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:45,224 TRACE [_] DataStream::read()
2020-03-29 20:14:45,224 TRACE [_] DataStream::read()
2020-03-29 20:14:45,224 TRACE [_] DataStream::read()
2020-03-29 20:14:45,224 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:45,224 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46830 and port 5002
2020-03-29 20:14:45,224 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:45,225 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:45,225 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:45,225 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:45,225 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:45,225 INFO  [_] Outcome: Success
2020-03-29 20:14:45,225 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:45,225 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:45,226 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:45,226 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:45,226 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:45,226 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:45,226 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:45,226 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 45, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 226402316 })) )
2020-03-29 20:14:45,226 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:45 GMT
, }]
2020-03-29 20:14:45,226 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:45,226 TRACE [hyper::server::response] ending
2020-03-29 20:14:45,226 INFO  [_] Response succeeded.
2020-03-29 20:14:45,226 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:45,226 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46830
2020-03-29 20:14:45,227 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:45,227 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:45,227 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:45,227 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:45,227 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:45,227 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:45,227 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46830
2020-03-29 20:14:45,483 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:45,483 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:45,483 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:45,484 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:45,484 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:45,484 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:45,484 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:45,484 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:45,484 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:45,484 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:45,484 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:45,484 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:45,484 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:45,485 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:45,485 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:45,485 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:45,485 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:45,485 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:45,485 TRACE [_] NetStream::read()
2020-03-29 20:14:45,485 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:45,485 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:45,485 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:45,486 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:45,486 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:45,486 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:45,486 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:45,486 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:45,486 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:45,486 TRACE [_] DataStream::read()
2020-03-29 20:14:45,486 TRACE [_] DataStream::read()
2020-03-29 20:14:45,486 TRACE [_] DataStream::read()
2020-03-29 20:14:45,486 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:45,486 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46832 and port 5002
2020-03-29 20:14:45,486 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:45,487 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:45,487 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:45,487 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:45,487 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:45,487 INFO  [_] Outcome: Success
2020-03-29 20:14:45,487 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:45,487 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:45,487 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:45,488 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:45,488 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:45,488 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:45,488 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:45,488 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 45, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 488372295 })) )
2020-03-29 20:14:45,488 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:45 GMT
, }]
2020-03-29 20:14:45,488 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:45,488 TRACE [hyper::server::response] ending
2020-03-29 20:14:45,488 INFO  [_] Response succeeded.
2020-03-29 20:14:45,488 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:45,489 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46832
2020-03-29 20:14:45,489 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:45,489 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:45,489 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:45,489 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:45,489 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:45,489 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:45,489 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46832
2020-03-29 20:14:45,746 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:45,746 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:45,746 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:45,746 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:45,746 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:45,746 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:45,746 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:45,746 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:45,747 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:45,747 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:45,747 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:45,747 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:45,747 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:45,747 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:45,747 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:45,747 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:45,748 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:45,748 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:45,748 TRACE [_] NetStream::read()
2020-03-29 20:14:45,748 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:45,748 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:45,748 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:45,748 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:45,748 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:45,748 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:45,748 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:45,748 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:45,748 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:45,748 TRACE [_] DataStream::read()
2020-03-29 20:14:45,748 TRACE [_] DataStream::read()
2020-03-29 20:14:45,749 TRACE [_] DataStream::read()
2020-03-29 20:14:45,749 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:45,749 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46834 and port 5002
2020-03-29 20:14:45,749 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:45,749 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:45,749 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:45,749 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:45,749 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:45,749 INFO  [_] Outcome: Success
2020-03-29 20:14:45,750 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:45,750 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:45,750 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:45,750 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:45,750 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:45,750 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:45,750 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:45,750 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 45, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 750371177 })) )
2020-03-29 20:14:45,750 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:45 GMT
, }]
2020-03-29 20:14:45,750 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:45,750 TRACE [hyper::server::response] ending
2020-03-29 20:14:45,750 INFO  [_] Response succeeded.
2020-03-29 20:14:45,750 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:45,750 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46834
2020-03-29 20:14:45,750 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:45,750 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:45,750 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:45,750 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:45,750 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:45,751 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:45,751 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46834
2020-03-29 20:14:46,008 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:46,008 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:46,008 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:46,008 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:46,008 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:46,008 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:46,008 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:46,008 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:46,009 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:46,009 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:46,009 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:46,009 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:46,009 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:46,009 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:46,009 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:46,009 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:46,010 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:46,010 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:46,010 TRACE [_] NetStream::read()
2020-03-29 20:14:46,010 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:46,010 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:46,010 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:46,010 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:46,010 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:46,010 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:46,010 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:46,010 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:46,010 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:46,010 TRACE [_] DataStream::read()
2020-03-29 20:14:46,011 TRACE [_] DataStream::read()
2020-03-29 20:14:46,011 TRACE [_] DataStream::read()
2020-03-29 20:14:46,011 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:46,011 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46836 and port 5002
2020-03-29 20:14:46,011 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:46,011 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:46,011 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:46,012 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:46,012 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:46,012 INFO  [_] Outcome: Success
2020-03-29 20:14:46,012 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:46,012 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:46,012 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:46,012 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:46,012 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:46,012 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:46,012 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:46,013 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 46, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 12998173 })) )
2020-03-29 20:14:46,013 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:46 GMT
, }]
2020-03-29 20:14:46,013 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:46,013 TRACE [hyper::server::response] ending
2020-03-29 20:14:46,013 INFO  [_] Response succeeded.
2020-03-29 20:14:46,013 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:46,013 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46836
2020-03-29 20:14:46,013 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:46,013 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:46,013 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:46,013 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:46,013 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:46,014 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:46,014 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46836
2020-03-29 20:14:46,271 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:46,271 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:46,271 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:46,271 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:46,271 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:46,272 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:46,272 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:46,272 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:46,272 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:46,272 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:46,272 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:46,272 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:46,272 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:46,272 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:46,272 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:46,272 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:46,273 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:46,273 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:46,273 TRACE [_] NetStream::read()
2020-03-29 20:14:46,273 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:46,273 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:46,273 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:46,273 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:46,273 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:46,273 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:46,273 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:46,274 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:46,274 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:46,274 TRACE [_] DataStream::read()
2020-03-29 20:14:46,274 TRACE [_] DataStream::read()
2020-03-29 20:14:46,274 TRACE [_] DataStream::read()
2020-03-29 20:14:46,274 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:46,274 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46838 and port 5002
2020-03-29 20:14:46,274 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:46,274 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:46,274 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:46,275 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:46,275 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:46,275 INFO  [_] Outcome: Success
2020-03-29 20:14:46,275 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:46,275 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:46,275 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:46,275 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:46,275 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:46,275 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:46,275 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:46,275 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 46, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 275971223 })) )
2020-03-29 20:14:46,276 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:46 GMT
, }]
2020-03-29 20:14:46,276 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:46,276 TRACE [hyper::server::response] ending
2020-03-29 20:14:46,276 INFO  [_] Response succeeded.
2020-03-29 20:14:46,276 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:46,276 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46838
2020-03-29 20:14:46,276 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:46,276 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:46,276 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:46,276 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:46,276 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:46,277 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:46,277 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46838
2020-03-29 20:14:46,534 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:46,534 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:46,534 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:46,535 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:46,535 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:46,535 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:46,535 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:46,535 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:46,535 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:46,535 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:46,535 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:46,535 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:46,536 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:46,536 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:46,536 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:46,536 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:46,536 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:46,536 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:46,536 TRACE [_] NetStream::read()
2020-03-29 20:14:46,536 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:46,536 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:46,536 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:46,537 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:46,537 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:46,537 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:46,537 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:46,537 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:46,537 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:46,537 TRACE [_] DataStream::read()
2020-03-29 20:14:46,537 TRACE [_] DataStream::read()
2020-03-29 20:14:46,537 TRACE [_] DataStream::read()
2020-03-29 20:14:46,537 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:46,537 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46840 and port 5002
2020-03-29 20:14:46,537 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:46,538 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:46,538 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:46,538 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:46,538 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:46,538 INFO  [_] Outcome: Success
2020-03-29 20:14:46,538 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:46,538 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:46,538 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:46,538 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:46,539 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:46,539 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:46,539 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:46,539 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 46, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 539320576 })) )
2020-03-29 20:14:46,539 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:46 GMT
, }]
2020-03-29 20:14:46,539 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:46,539 TRACE [hyper::server::response] ending
2020-03-29 20:14:46,539 INFO  [_] Response succeeded.
2020-03-29 20:14:46,539 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:46,539 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46840
2020-03-29 20:14:46,540 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:46,540 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:46,540 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:46,540 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:46,540 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:46,540 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:46,540 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46840
2020-03-29 20:14:46,767 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:46,797 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:46,797 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:46,797 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:46,798 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:46,798 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:46,798 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:46,798 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:46,798 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:46,798 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:46,798 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:46,798 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:46,798 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:46,799 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:46,799 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:46,799 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:46,799 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:46,799 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:46,799 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:46,799 TRACE [_] NetStream::read()
2020-03-29 20:14:46,799 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:46,799 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:46,799 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:46,799 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:46,799 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:46,800 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:46,800 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:46,800 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:46,800 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:46,800 TRACE [_] DataStream::read()
2020-03-29 20:14:46,800 TRACE [_] DataStream::read()
2020-03-29 20:14:46,800 TRACE [_] DataStream::read()
2020-03-29 20:14:46,800 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:46,800 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46842 and port 5002
2020-03-29 20:14:46,800 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:46,800 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:46,801 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:46,801 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:46,801 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:46,801 INFO  [_] Outcome: Success
2020-03-29 20:14:46,801 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:46,801 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:46,801 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:46,801 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:46,801 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:46,801 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:46,802 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:46,802 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 46, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 802092142 })) )
2020-03-29 20:14:46,802 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:46 GMT
, }]
2020-03-29 20:14:46,802 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:46,802 TRACE [hyper::server::response] ending
2020-03-29 20:14:46,802 INFO  [_] Response succeeded.
2020-03-29 20:14:46,802 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:46,802 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46842
2020-03-29 20:14:46,802 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:46,802 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:46,802 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:46,802 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:46,802 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:46,803 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:46,803 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46842
2020-03-29 20:14:47,057 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:47,057 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:47,057 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:47,057 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:47,058 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:47,058 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:47,058 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:47,058 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:47,058 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:47,058 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:47,058 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:47,058 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:47,058 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:47,059 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:47,059 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:47,059 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:47,059 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:47,059 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:47,059 TRACE [_] NetStream::read()
2020-03-29 20:14:47,059 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:47,059 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:47,060 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:47,060 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:47,060 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:47,060 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:47,060 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:47,060 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:47,060 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:47,060 TRACE [_] DataStream::read()
2020-03-29 20:14:47,060 TRACE [_] DataStream::read()
2020-03-29 20:14:47,060 TRACE [_] DataStream::read()
2020-03-29 20:14:47,060 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:47,061 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46844 and port 5002
2020-03-29 20:14:47,061 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:47,061 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:47,061 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:47,061 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:47,061 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:47,061 INFO  [_] Outcome: Success
2020-03-29 20:14:47,062 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:47,062 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:47,062 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:47,062 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:47,062 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:47,062 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:47,062 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:47,062 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 47, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 62866880 })) )
2020-03-29 20:14:47,062 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:47 GMT
, }]
2020-03-29 20:14:47,063 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:47,063 TRACE [hyper::server::response] ending
2020-03-29 20:14:47,063 INFO  [_] Response succeeded.
2020-03-29 20:14:47,063 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:47,063 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46844
2020-03-29 20:14:47,063 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:47,063 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:47,064 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:47,064 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:47,064 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:47,064 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:47,064 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46844
2020-03-29 20:14:47,321 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:47,321 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:47,321 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:47,322 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:47,322 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:47,322 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:47,322 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:47,322 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:47,322 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:47,322 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:47,322 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:47,323 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:47,323 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:47,323 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:47,323 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:47,323 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:47,323 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:47,323 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:47,323 TRACE [_] NetStream::read()
2020-03-29 20:14:47,323 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:47,323 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:47,323 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:47,323 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:47,324 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:47,324 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:47,324 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:47,324 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:47,324 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:47,324 TRACE [_] DataStream::read()
2020-03-29 20:14:47,324 TRACE [_] DataStream::read()
2020-03-29 20:14:47,324 TRACE [_] DataStream::read()
2020-03-29 20:14:47,324 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:47,324 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46846 and port 5002
2020-03-29 20:14:47,324 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:47,324 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:47,325 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:47,325 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:47,325 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:47,325 INFO  [_] Outcome: Success
2020-03-29 20:14:47,325 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:47,325 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:47,325 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:47,325 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:47,325 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:47,326 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:47,326 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:47,326 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 47, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 326137216 })) )
2020-03-29 20:14:47,326 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:47 GMT
, }]
2020-03-29 20:14:47,326 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:47,326 TRACE [hyper::server::response] ending
2020-03-29 20:14:47,326 INFO  [_] Response succeeded.
2020-03-29 20:14:47,326 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:47,326 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46846
2020-03-29 20:14:47,326 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:47,326 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:47,326 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:47,326 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:47,327 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:47,327 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:47,327 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46846
2020-03-29 20:14:47,583 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:47,583 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:47,583 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:47,584 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:47,584 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:47,584 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:47,584 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:47,584 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:47,584 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:47,584 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:47,584 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:47,584 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:47,584 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:47,585 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:47,585 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:47,585 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:47,585 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:47,585 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:47,585 TRACE [_] NetStream::read()
2020-03-29 20:14:47,585 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:47,585 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:47,585 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:47,586 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:47,586 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:47,586 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:47,586 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:47,586 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:47,586 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:47,586 TRACE [_] DataStream::read()
2020-03-29 20:14:47,586 TRACE [_] DataStream::read()
2020-03-29 20:14:47,586 TRACE [_] DataStream::read()
2020-03-29 20:14:47,586 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:47,586 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46848 and port 5002
2020-03-29 20:14:47,586 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:47,587 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:47,587 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:47,587 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:47,587 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:47,587 INFO  [_] Outcome: Success
2020-03-29 20:14:47,587 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:47,587 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:47,587 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:47,587 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:47,588 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:47,588 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:47,588 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:47,588 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 47, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 588289617 })) )
2020-03-29 20:14:47,588 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:47 GMT
, }]
2020-03-29 20:14:47,588 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:47,588 TRACE [hyper::server::response] ending
2020-03-29 20:14:47,588 INFO  [_] Response succeeded.
2020-03-29 20:14:47,588 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:47,588 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46848
2020-03-29 20:14:47,589 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:47,589 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:47,589 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:47,589 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:47,589 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:47,589 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:47,589 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46848
2020-03-29 20:14:47,846 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:47,846 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:47,846 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:47,847 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:47,848 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:47,848 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:47,848 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:47,848 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:47,848 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:47,848 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:47,848 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:47,848 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:47,848 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:47,848 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:47,848 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:47,849 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:47,849 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:47,849 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:47,849 TRACE [_] NetStream::read()
2020-03-29 20:14:47,849 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:47,849 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:47,849 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:47,849 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:47,849 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:47,849 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:47,849 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:47,850 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:47,850 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:47,850 TRACE [_] DataStream::read()
2020-03-29 20:14:47,850 TRACE [_] DataStream::read()
2020-03-29 20:14:47,850 TRACE [_] DataStream::read()
2020-03-29 20:14:47,850 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:47,850 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46850 and port 5002
2020-03-29 20:14:47,850 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:47,850 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:47,850 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:47,850 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:47,850 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:47,851 INFO  [_] Outcome: Success
2020-03-29 20:14:47,851 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:47,851 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:47,851 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:47,851 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:47,851 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:47,851 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:47,851 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:47,851 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 47, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 851771076 })) )
2020-03-29 20:14:47,851 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:47 GMT
, }]
2020-03-29 20:14:47,851 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:47,852 TRACE [hyper::server::response] ending
2020-03-29 20:14:47,852 INFO  [_] Response succeeded.
2020-03-29 20:14:47,852 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:47,852 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46850
2020-03-29 20:14:47,852 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:47,852 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:47,852 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:47,852 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:47,852 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:47,852 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:47,852 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46850
2020-03-29 20:14:48,110 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:48,110 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:48,110 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:48,111 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:48,111 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:48,111 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:48,111 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:48,111 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:48,111 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:48,112 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:48,112 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:48,112 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:48,112 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:48,112 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:48,112 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:48,112 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:48,112 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:48,112 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:48,112 TRACE [_] NetStream::read()
2020-03-29 20:14:48,113 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:48,113 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:48,113 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:48,113 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:48,113 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:48,113 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:48,113 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:48,113 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:48,113 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:48,113 TRACE [_] DataStream::read()
2020-03-29 20:14:48,113 TRACE [_] DataStream::read()
2020-03-29 20:14:48,113 TRACE [_] DataStream::read()
2020-03-29 20:14:48,113 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:48,113 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46852 and port 5002
2020-03-29 20:14:48,114 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:48,114 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:48,114 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:48,114 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:48,114 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:48,114 INFO  [_] Outcome: Success
2020-03-29 20:14:48,114 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:48,114 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:48,114 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:48,115 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:48,115 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:48,115 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:48,115 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:48,115 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 48, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 115373543 })) )
2020-03-29 20:14:48,115 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:48 GMT
, }]
2020-03-29 20:14:48,115 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:48,115 TRACE [hyper::server::response] ending
2020-03-29 20:14:48,115 INFO  [_] Response succeeded.
2020-03-29 20:14:48,115 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:48,115 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46852
2020-03-29 20:14:48,116 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:48,116 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:48,116 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:48,116 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:48,116 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:48,116 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:48,116 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46852
2020-03-29 20:14:48,371 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:48,371 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:48,371 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:48,371 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:48,371 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:48,371 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:48,371 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:48,371 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:48,371 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:48,372 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:48,372 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:48,372 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:48,372 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:48,372 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:48,372 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:48,372 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:48,372 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:48,372 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:48,373 TRACE [_] NetStream::read()
2020-03-29 20:14:48,373 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:48,373 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:48,373 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:48,373 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:48,373 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:48,373 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:48,373 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:48,373 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:48,373 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:48,373 TRACE [_] DataStream::read()
2020-03-29 20:14:48,373 TRACE [_] DataStream::read()
2020-03-29 20:14:48,373 TRACE [_] DataStream::read()
2020-03-29 20:14:48,374 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:48,374 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46854 and port 5002
2020-03-29 20:14:48,374 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:48,374 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:48,374 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:48,374 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:48,374 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:48,374 INFO  [_] Outcome: Success
2020-03-29 20:14:48,375 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:48,375 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:48,375 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:48,375 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:48,375 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:48,375 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:48,375 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:48,375 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 48, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 375616931 })) )
2020-03-29 20:14:48,375 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:48 GMT
, }]
2020-03-29 20:14:48,375 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:48,375 TRACE [hyper::server::response] ending
2020-03-29 20:14:48,376 INFO  [_] Response succeeded.
2020-03-29 20:14:48,376 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:48,376 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46854
2020-03-29 20:14:48,376 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:48,376 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:48,376 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:48,376 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:48,376 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:48,376 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:48,376 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46854
2020-03-29 20:14:48,559 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:48,577 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:48,577 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:48,577 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:48,578 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:48,634 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:48,634 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:48,634 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:48,635 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:48,635 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:48,635 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:48,635 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:48,635 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:48,636 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:48,636 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:48,636 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:48,636 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:48,636 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:48,636 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:48,636 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:48,636 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:48,636 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:48,637 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:48,637 TRACE [_] NetStream::read()
2020-03-29 20:14:48,637 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:48,637 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:48,637 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:48,637 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:48,637 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:48,637 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:48,637 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:48,637 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:48,637 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:48,637 TRACE [_] DataStream::read()
2020-03-29 20:14:48,637 TRACE [_] DataStream::read()
2020-03-29 20:14:48,637 TRACE [_] DataStream::read()
2020-03-29 20:14:48,637 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:48,638 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46856 and port 5002
2020-03-29 20:14:48,638 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:48,638 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:48,638 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:48,638 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:48,638 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:48,638 INFO  [_] Outcome: Success
2020-03-29 20:14:48,638 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:48,639 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:48,639 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:48,639 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:48,639 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:48,639 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:48,639 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:48,639 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 48, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 639469744 })) )
2020-03-29 20:14:48,639 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:48 GMT
, }]
2020-03-29 20:14:48,639 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:48,639 TRACE [hyper::server::response] ending
2020-03-29 20:14:48,639 INFO  [_] Response succeeded.
2020-03-29 20:14:48,640 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:48,640 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46856
2020-03-29 20:14:48,640 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:48,640 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:48,640 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:48,640 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:48,640 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:48,640 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:48,640 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46856
2020-03-29 20:14:48,895 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:48,895 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:48,895 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:48,896 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:48,896 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:48,896 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:48,896 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:48,896 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:48,896 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:48,896 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:48,896 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:48,896 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:48,896 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:48,897 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:48,897 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:48,897 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:48,897 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:48,897 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:48,897 TRACE [_] NetStream::read()
2020-03-29 20:14:48,897 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:48,898 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:48,898 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:48,898 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:48,898 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:48,898 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:48,898 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:48,898 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:48,898 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:48,898 TRACE [_] DataStream::read()
2020-03-29 20:14:48,898 TRACE [_] DataStream::read()
2020-03-29 20:14:48,898 TRACE [_] DataStream::read()
2020-03-29 20:14:48,898 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:48,899 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46858 and port 5002
2020-03-29 20:14:48,899 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:48,899 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:48,899 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:48,899 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:48,899 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:48,899 INFO  [_] Outcome: Success
2020-03-29 20:14:48,900 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:48,900 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:48,900 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:48,900 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:48,900 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:48,900 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:48,900 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:48,900 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 48, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 900699442 })) )
2020-03-29 20:14:48,900 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:48 GMT
, }]
2020-03-29 20:14:48,901 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:48,901 TRACE [hyper::server::response] ending
2020-03-29 20:14:48,901 INFO  [_] Response succeeded.
2020-03-29 20:14:48,901 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:48,901 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46858
2020-03-29 20:14:48,901 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:48,901 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:48,901 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:48,901 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:48,901 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:48,901 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:48,902 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46858
2020-03-29 20:14:49,158 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:49,158 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:49,158 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:49,159 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:49,159 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:49,159 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:49,159 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:49,159 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:49,159 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:49,159 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:49,159 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:49,160 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:49,160 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:49,160 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:49,160 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:49,160 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:49,160 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:49,160 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:49,160 TRACE [_] NetStream::read()
2020-03-29 20:14:49,161 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:49,161 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:49,161 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:49,161 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:49,161 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:49,161 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:49,161 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:49,161 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:49,161 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:49,161 TRACE [_] DataStream::read()
2020-03-29 20:14:49,161 TRACE [_] DataStream::read()
2020-03-29 20:14:49,161 TRACE [_] DataStream::read()
2020-03-29 20:14:49,162 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:49,162 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46860 and port 5002
2020-03-29 20:14:49,162 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:49,162 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:49,162 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:49,162 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:49,162 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:49,163 INFO  [_] Outcome: Success
2020-03-29 20:14:49,163 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:49,163 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:49,163 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:49,163 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:49,163 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:49,163 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:49,163 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:49,163 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 49, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 163901091 })) )
2020-03-29 20:14:49,164 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:49 GMT
, }]
2020-03-29 20:14:49,164 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:49,164 TRACE [hyper::server::response] ending
2020-03-29 20:14:49,164 INFO  [_] Response succeeded.
2020-03-29 20:14:49,164 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:49,164 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46860
2020-03-29 20:14:49,164 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:49,164 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:49,164 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:49,164 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:49,165 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:49,165 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:49,165 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46860
2020-03-29 20:14:49,419 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:49,419 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:49,419 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:49,420 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:49,420 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:49,420 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:49,420 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:49,420 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:49,420 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:49,420 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:49,420 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:49,420 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:49,420 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:49,421 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:49,421 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:49,421 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:49,421 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:49,421 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:49,421 TRACE [_] NetStream::read()
2020-03-29 20:14:49,421 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:49,421 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:49,421 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:49,422 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:49,422 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:49,422 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:49,422 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:49,422 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:49,422 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:49,422 TRACE [_] DataStream::read()
2020-03-29 20:14:49,422 TRACE [_] DataStream::read()
2020-03-29 20:14:49,422 TRACE [_] DataStream::read()
2020-03-29 20:14:49,422 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:49,422 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46862 and port 5002
2020-03-29 20:14:49,422 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:49,423 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:49,423 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:49,423 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:49,423 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:49,423 INFO  [_] Outcome: Success
2020-03-29 20:14:49,423 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:49,423 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:49,423 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:49,424 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:49,424 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:49,424 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:49,424 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:49,424 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 49, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 424354712 })) )
2020-03-29 20:14:49,424 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:49 GMT
, }]
2020-03-29 20:14:49,424 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:49,424 TRACE [hyper::server::response] ending
2020-03-29 20:14:49,424 INFO  [_] Response succeeded.
2020-03-29 20:14:49,424 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:49,425 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46862
2020-03-29 20:14:49,425 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:49,425 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:49,425 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:49,425 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:49,425 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:49,425 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:49,425 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46862
2020-03-29 20:14:49,683 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:49,683 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:49,684 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:49,684 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:49,684 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:49,684 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:49,684 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:49,684 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:49,684 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:49,684 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:49,685 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:49,685 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:49,685 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:49,685 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:49,685 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:49,685 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:49,685 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:49,686 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:49,686 TRACE [_] NetStream::read()
2020-03-29 20:14:49,686 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:49,686 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:49,686 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:49,686 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:49,686 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:49,686 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:49,686 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:49,686 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:49,686 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:49,686 TRACE [_] DataStream::read()
2020-03-29 20:14:49,687 TRACE [_] DataStream::read()
2020-03-29 20:14:49,687 TRACE [_] DataStream::read()
2020-03-29 20:14:49,687 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:49,687 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46864 and port 5002
2020-03-29 20:14:49,687 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:49,687 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:49,687 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:49,688 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:49,688 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:49,688 INFO  [_] Outcome: Success
2020-03-29 20:14:49,688 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:49,688 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:49,688 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:49,688 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:49,688 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:49,688 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:49,688 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:49,688 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 49, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 688744277 })) )
2020-03-29 20:14:49,688 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:49 GMT
, }]
2020-03-29 20:14:49,688 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:49,688 TRACE [hyper::server::response] ending
2020-03-29 20:14:49,689 INFO  [_] Response succeeded.
2020-03-29 20:14:49,689 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:49,689 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46864
2020-03-29 20:14:49,689 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:49,689 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:49,689 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:49,689 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:49,689 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:49,689 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:49,689 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46864
2020-03-29 20:14:49,946 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:49,946 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:49,946 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:49,948 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:49,948 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:49,948 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:49,948 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:49,948 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:49,948 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:49,948 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:49,948 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:49,948 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:49,949 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:49,949 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:49,949 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:49,949 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:49,949 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:49,949 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:49,949 TRACE [_] NetStream::read()
2020-03-29 20:14:49,949 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:49,949 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:49,950 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:49,950 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:49,950 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:49,950 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:49,950 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:49,950 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:49,950 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:49,950 TRACE [_] DataStream::read()
2020-03-29 20:14:49,950 TRACE [_] DataStream::read()
2020-03-29 20:14:49,950 TRACE [_] DataStream::read()
2020-03-29 20:14:49,950 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:49,950 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46866 and port 5002
2020-03-29 20:14:49,950 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:49,951 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:49,951 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:49,951 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:49,951 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:49,951 INFO  [_] Outcome: Success
2020-03-29 20:14:49,951 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:49,951 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:49,952 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:49,952 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:49,952 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:49,952 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:49,952 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:49,952 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 49, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 952607200 })) )
2020-03-29 20:14:49,952 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:49 GMT
, }]
2020-03-29 20:14:49,952 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:49,952 TRACE [hyper::server::response] ending
2020-03-29 20:14:49,953 INFO  [_] Response succeeded.
2020-03-29 20:14:49,953 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:49,953 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46866
2020-03-29 20:14:49,953 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:49,953 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:49,953 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:49,953 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:49,953 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:49,953 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:49,953 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46866
2020-03-29 20:14:50,208 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:50,209 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:50,209 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:50,210 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:50,210 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:50,210 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:50,210 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:50,210 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:50,210 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:50,210 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:50,210 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:50,210 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:50,211 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:50,211 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:50,211 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:50,211 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:50,211 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:50,211 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:50,211 TRACE [_] NetStream::read()
2020-03-29 20:14:50,211 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:50,211 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:50,211 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:50,212 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:50,212 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:50,212 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:50,212 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:50,212 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:50,212 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:50,212 TRACE [_] DataStream::read()
2020-03-29 20:14:50,212 TRACE [_] DataStream::read()
2020-03-29 20:14:50,212 TRACE [_] DataStream::read()
2020-03-29 20:14:50,212 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:50,212 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46868 and port 5002
2020-03-29 20:14:50,212 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:50,213 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:50,213 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:50,213 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:50,213 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:50,213 INFO  [_] Outcome: Success
2020-03-29 20:14:50,213 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:50,213 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:50,213 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:50,213 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:50,213 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:50,214 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:50,214 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:50,214 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 50, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 214188725 })) )
2020-03-29 20:14:50,214 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:50 GMT
, }]
2020-03-29 20:14:50,214 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:50,214 TRACE [hyper::server::response] ending
2020-03-29 20:14:50,214 INFO  [_] Response succeeded.
2020-03-29 20:14:50,214 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:50,214 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46868
2020-03-29 20:14:50,214 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:50,215 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:50,215 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:50,215 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:50,215 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:50,215 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:50,215 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46868
2020-03-29 20:14:50,471 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:50,471 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:50,471 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:50,471 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:50,471 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:50,471 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:50,471 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:50,472 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:50,472 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:50,472 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:50,472 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:50,472 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:50,472 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:50,472 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:50,472 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:50,472 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:50,473 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:50,473 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:50,473 TRACE [_] NetStream::read()
2020-03-29 20:14:50,473 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:50,473 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:50,473 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:50,473 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:50,473 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:50,473 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:50,473 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:50,473 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:50,473 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:50,473 TRACE [_] DataStream::read()
2020-03-29 20:14:50,474 TRACE [_] DataStream::read()
2020-03-29 20:14:50,474 TRACE [_] DataStream::read()
2020-03-29 20:14:50,474 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:50,474 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46870 and port 5002
2020-03-29 20:14:50,474 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:50,474 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:50,474 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:50,474 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:50,474 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:50,474 INFO  [_] Outcome: Success
2020-03-29 20:14:50,474 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:50,475 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:50,475 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:50,475 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:50,475 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:50,475 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:50,475 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:50,475 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 50, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 475511979 })) )
2020-03-29 20:14:50,475 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:50 GMT
, }]
2020-03-29 20:14:50,475 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:50,475 TRACE [hyper::server::response] ending
2020-03-29 20:14:50,476 INFO  [_] Response succeeded.
2020-03-29 20:14:50,476 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:50,476 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46870
2020-03-29 20:14:50,476 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:50,476 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:50,476 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:50,476 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:50,476 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:50,476 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:50,476 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46870
2020-03-29 20:14:50,734 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:50,734 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:50,734 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:50,735 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:50,735 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:50,735 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:50,735 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:50,735 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:50,735 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:50,735 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:50,735 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:50,735 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:50,735 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:50,735 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:50,735 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:50,735 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:50,735 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:50,735 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:50,735 TRACE [_] NetStream::read()
2020-03-29 20:14:50,735 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:50,735 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:50,735 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:50,735 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:50,735 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:50,735 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:50,736 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:50,736 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:50,736 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:50,736 TRACE [_] DataStream::read()
2020-03-29 20:14:50,736 TRACE [_] DataStream::read()
2020-03-29 20:14:50,736 TRACE [_] DataStream::read()
2020-03-29 20:14:50,736 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:50,736 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46872 and port 5002
2020-03-29 20:14:50,736 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:50,736 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:50,736 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:50,736 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:50,736 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:50,737 INFO  [_] Outcome: Success
2020-03-29 20:14:50,737 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:50,737 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:50,737 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:50,737 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:50,737 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:50,737 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:50,738 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:50,738 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 50, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 738132784 })) )
2020-03-29 20:14:50,738 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:50 GMT
, }]
2020-03-29 20:14:50,738 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:50,738 TRACE [hyper::server::response] ending
2020-03-29 20:14:50,738 INFO  [_] Response succeeded.
2020-03-29 20:14:50,738 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:50,738 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46872
2020-03-29 20:14:50,739 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:50,739 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:50,739 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:50,739 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:50,739 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:50,739 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:50,739 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46872
2020-03-29 20:14:50,863 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:50,998 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:50,998 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:50,998 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:50,999 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:50,999 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:50,999 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:50,999 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:50,999 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:51,000 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:51,000 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:51,000 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:51,000 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:51,000 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:51,000 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:51,000 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:51,000 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:51,000 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:51,001 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:51,001 TRACE [_] NetStream::read()
2020-03-29 20:14:51,001 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:51,001 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:51,001 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:51,001 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:51,001 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:51,001 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:51,001 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:51,001 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:51,001 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:51,001 TRACE [_] DataStream::read()
2020-03-29 20:14:51,001 TRACE [_] DataStream::read()
2020-03-29 20:14:51,001 TRACE [_] DataStream::read()
2020-03-29 20:14:51,002 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:51,002 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46874 and port 5002
2020-03-29 20:14:51,002 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:51,002 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:51,002 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:51,002 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:51,002 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:51,002 INFO  [_] Outcome: Success
2020-03-29 20:14:51,003 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:51,003 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:51,003 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:51,003 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:51,003 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:51,003 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:51,003 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:51,003 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 51, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 3409525 })) )
2020-03-29 20:14:51,003 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:51 GMT
, }]
2020-03-29 20:14:51,003 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:51,003 TRACE [hyper::server::response] ending
2020-03-29 20:14:51,003 INFO  [_] Response succeeded.
2020-03-29 20:14:51,003 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:51,003 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46874
2020-03-29 20:14:51,003 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:51,003 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:51,003 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:51,003 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:51,004 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:51,004 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:51,004 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46874
2020-03-29 20:14:51,259 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:51,259 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:51,259 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:51,260 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:51,260 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:51,260 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:51,260 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:51,260 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:51,260 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:51,260 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:51,260 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:51,260 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:51,260 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:51,261 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:51,261 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:51,261 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:51,261 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:51,261 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:51,261 TRACE [_] NetStream::read()
2020-03-29 20:14:51,261 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:51,261 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:51,261 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:51,261 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:51,262 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:51,262 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:51,262 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:51,262 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:51,262 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:51,262 TRACE [_] DataStream::read()
2020-03-29 20:14:51,262 TRACE [_] DataStream::read()
2020-03-29 20:14:51,262 TRACE [_] DataStream::read()
2020-03-29 20:14:51,262 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:51,262 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46876 and port 5002
2020-03-29 20:14:51,262 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:51,263 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:51,263 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:51,263 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:51,263 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:51,263 INFO  [_] Outcome: Success
2020-03-29 20:14:51,263 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:51,263 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:51,263 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:51,263 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:51,264 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:51,264 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:51,264 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:51,264 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 51, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 264286276 })) )
2020-03-29 20:14:51,264 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:51 GMT
, }]
2020-03-29 20:14:51,264 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:51,264 TRACE [hyper::server::response] ending
2020-03-29 20:14:51,264 INFO  [_] Response succeeded.
2020-03-29 20:14:51,264 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:51,264 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46876
2020-03-29 20:14:51,265 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:51,265 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:51,265 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:51,265 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:51,265 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:51,265 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:51,265 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46876
2020-03-29 20:14:51,521 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:51,521 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:51,521 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:51,523 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:51,523 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:51,523 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:51,523 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:51,523 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:51,523 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:51,523 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:51,523 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:51,523 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:51,524 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:51,524 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:51,524 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:51,524 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:51,524 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:51,524 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:51,524 TRACE [_] NetStream::read()
2020-03-29 20:14:51,524 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:51,524 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:51,524 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:51,525 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:51,525 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:51,525 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:51,525 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:51,525 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:51,525 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:51,525 TRACE [_] DataStream::read()
2020-03-29 20:14:51,525 TRACE [_] DataStream::read()
2020-03-29 20:14:51,525 TRACE [_] DataStream::read()
2020-03-29 20:14:51,525 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:51,525 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46878 and port 5002
2020-03-29 20:14:51,525 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:51,526 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:51,526 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:51,526 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:51,526 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:51,526 INFO  [_] Outcome: Success
2020-03-29 20:14:51,526 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:51,526 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:51,526 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:51,526 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:51,527 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:51,527 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:51,527 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:51,527 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 51, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 527233100 })) )
2020-03-29 20:14:51,527 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:51 GMT
, }]
2020-03-29 20:14:51,527 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:51,527 TRACE [hyper::server::response] ending
2020-03-29 20:14:51,527 INFO  [_] Response succeeded.
2020-03-29 20:14:51,527 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:51,527 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46878
2020-03-29 20:14:51,527 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:51,527 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:51,528 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:51,528 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:51,528 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:51,528 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:51,528 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46878
2020-03-29 20:14:51,783 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:51,783 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:51,783 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:51,784 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:51,784 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:51,784 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:51,784 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:51,784 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:51,784 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:51,784 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:51,784 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:51,784 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:51,784 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:51,785 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:51,785 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:51,785 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:51,785 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:51,785 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:51,785 TRACE [_] NetStream::read()
2020-03-29 20:14:51,785 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:51,785 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:51,785 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:51,785 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:51,785 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:51,786 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:51,786 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:51,786 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:51,786 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:51,786 TRACE [_] DataStream::read()
2020-03-29 20:14:51,786 TRACE [_] DataStream::read()
2020-03-29 20:14:51,786 TRACE [_] DataStream::read()
2020-03-29 20:14:51,786 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:51,786 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46880 and port 5002
2020-03-29 20:14:51,786 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:51,787 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:51,787 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:51,787 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:51,787 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:51,787 INFO  [_] Outcome: Success
2020-03-29 20:14:51,787 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:51,787 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:51,787 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:51,787 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:51,788 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:51,788 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:51,788 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:51,788 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 51, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 788314813 })) )
2020-03-29 20:14:51,788 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:51 GMT
, }]
2020-03-29 20:14:51,788 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:51,788 TRACE [hyper::server::response] ending
2020-03-29 20:14:51,788 INFO  [_] Response succeeded.
2020-03-29 20:14:51,788 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:51,788 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46880
2020-03-29 20:14:51,789 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:51,789 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:51,789 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:51,789 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:51,789 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:51,789 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:51,789 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46880
2020-03-29 20:14:52,046 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:52,046 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:52,046 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:52,047 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:52,047 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:52,048 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:52,048 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:52,048 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:52,048 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:52,048 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:52,048 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:52,048 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:52,048 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:52,048 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:52,048 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:52,048 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:52,049 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:52,049 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:52,049 TRACE [_] NetStream::read()
2020-03-29 20:14:52,049 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:52,049 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:52,049 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:52,049 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:52,049 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:52,049 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:52,049 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:52,049 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:52,049 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:52,050 TRACE [_] DataStream::read()
2020-03-29 20:14:52,050 TRACE [_] DataStream::read()
2020-03-29 20:14:52,050 TRACE [_] DataStream::read()
2020-03-29 20:14:52,050 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:52,050 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46882 and port 5002
2020-03-29 20:14:52,050 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:52,050 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:52,050 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:52,050 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:52,050 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:52,050 INFO  [_] Outcome: Success
2020-03-29 20:14:52,050 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:52,051 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:52,051 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:52,051 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:52,051 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:52,051 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:52,051 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:52,051 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 52, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 51508257 })) )
2020-03-29 20:14:52,051 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:52 GMT
, }]
2020-03-29 20:14:52,051 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:52,051 TRACE [hyper::server::response] ending
2020-03-29 20:14:52,051 INFO  [_] Response succeeded.
2020-03-29 20:14:52,052 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:52,052 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46882
2020-03-29 20:14:52,052 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:52,052 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:52,052 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:52,052 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:52,052 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:52,052 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:52,052 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46882
2020-03-29 20:14:52,308 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:52,308 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:52,308 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:52,309 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:52,309 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:52,309 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:52,309 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:52,309 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:52,309 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:52,309 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:52,309 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:52,309 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:52,309 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:52,309 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:52,310 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:52,310 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:52,310 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:52,310 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:52,310 TRACE [_] NetStream::read()
2020-03-29 20:14:52,310 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:52,310 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:52,310 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:52,310 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:52,310 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:52,311 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:52,311 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:52,311 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:52,311 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:52,311 TRACE [_] DataStream::read()
2020-03-29 20:14:52,311 TRACE [_] DataStream::read()
2020-03-29 20:14:52,311 TRACE [_] DataStream::read()
2020-03-29 20:14:52,311 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:52,311 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46884 and port 5002
2020-03-29 20:14:52,311 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:52,312 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:52,312 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:52,312 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:52,312 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:52,312 INFO  [_] Outcome: Success
2020-03-29 20:14:52,312 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:52,312 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:52,312 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:52,313 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:52,313 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:52,313 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:52,313 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:52,313 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 52, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 313414730 })) )
2020-03-29 20:14:52,313 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:52 GMT
, }]
2020-03-29 20:14:52,313 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:52,313 TRACE [hyper::server::response] ending
2020-03-29 20:14:52,313 INFO  [_] Response succeeded.
2020-03-29 20:14:52,314 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:52,314 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46884
2020-03-29 20:14:52,314 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:52,314 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:52,314 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:52,314 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:52,314 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:52,314 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:52,314 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46884
2020-03-29 20:14:52,570 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:52,571 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:52,571 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:52,572 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:52,572 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:52,572 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:52,572 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:52,572 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:52,572 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:52,572 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:52,573 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:52,573 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:52,573 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:52,573 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:52,573 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:52,573 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:52,573 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:52,573 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:52,573 TRACE [_] NetStream::read()
2020-03-29 20:14:52,574 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:52,574 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:52,574 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:52,574 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:52,574 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:52,574 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:52,574 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:52,574 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:52,574 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:52,574 TRACE [_] DataStream::read()
2020-03-29 20:14:52,574 TRACE [_] DataStream::read()
2020-03-29 20:14:52,574 TRACE [_] DataStream::read()
2020-03-29 20:14:52,574 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:52,574 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46886 and port 5002
2020-03-29 20:14:52,574 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:52,575 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:52,575 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:52,575 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:52,575 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:52,575 INFO  [_] Outcome: Success
2020-03-29 20:14:52,575 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:52,575 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:52,575 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:52,575 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:52,575 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:52,575 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:52,576 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:52,576 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 52, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 576078636 })) )
2020-03-29 20:14:52,576 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:52 GMT
, }]
2020-03-29 20:14:52,576 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:52,576 TRACE [hyper::server::response] ending
2020-03-29 20:14:52,576 INFO  [_] Response succeeded.
2020-03-29 20:14:52,576 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:52,576 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46886
2020-03-29 20:14:52,576 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:52,576 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:52,576 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:52,576 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:52,576 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:52,577 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:52,577 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46886
2020-03-29 20:14:52,833 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:52,833 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:52,833 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:52,834 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:52,834 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:52,834 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:52,834 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:52,834 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:52,834 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:52,835 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:52,835 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:52,835 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:52,835 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:52,835 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:52,835 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:52,835 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:52,835 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:52,835 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:52,835 TRACE [_] NetStream::read()
2020-03-29 20:14:52,836 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:52,836 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:52,836 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:52,836 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:52,836 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:52,836 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:52,836 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:52,836 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:52,836 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:52,836 TRACE [_] DataStream::read()
2020-03-29 20:14:52,836 TRACE [_] DataStream::read()
2020-03-29 20:14:52,836 TRACE [_] DataStream::read()
2020-03-29 20:14:52,836 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:52,836 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46888 and port 5002
2020-03-29 20:14:52,836 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:52,837 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:52,837 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:52,837 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:52,837 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:52,837 INFO  [_] Outcome: Success
2020-03-29 20:14:52,838 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:52,838 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:52,838 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:52,838 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:52,838 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:52,838 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:52,838 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:52,838 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 52, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 838547799 })) )
2020-03-29 20:14:52,838 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:52 GMT
, }]
2020-03-29 20:14:52,838 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:52,838 TRACE [hyper::server::response] ending
2020-03-29 20:14:52,839 INFO  [_] Response succeeded.
2020-03-29 20:14:52,839 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:52,839 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46888
2020-03-29 20:14:52,839 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:52,839 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:52,839 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:52,839 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:52,839 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:52,839 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:52,839 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46888
2020-03-29 20:14:53,096 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:53,096 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:53,096 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:53,096 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:53,096 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:53,096 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:53,096 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:53,096 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:53,096 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:53,097 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:53,097 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:53,097 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:53,097 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:53,097 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:53,097 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:53,097 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:53,097 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:53,098 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:53,098 TRACE [_] NetStream::read()
2020-03-29 20:14:53,098 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:53,098 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:53,098 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:53,098 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:53,098 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:53,098 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:53,098 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:53,098 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:53,098 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:53,098 TRACE [_] DataStream::read()
2020-03-29 20:14:53,098 TRACE [_] DataStream::read()
2020-03-29 20:14:53,098 TRACE [_] DataStream::read()
2020-03-29 20:14:53,099 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:53,099 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46890 and port 5002
2020-03-29 20:14:53,099 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:53,099 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:53,099 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:53,099 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:53,099 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:53,100 INFO  [_] Outcome: Success
2020-03-29 20:14:53,100 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:53,100 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:53,100 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:53,100 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:53,100 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:53,100 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:53,100 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:53,100 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 53, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 100746908 })) )
2020-03-29 20:14:53,100 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:53 GMT
, }]
2020-03-29 20:14:53,101 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:53,101 TRACE [hyper::server::response] ending
2020-03-29 20:14:53,101 INFO  [_] Response succeeded.
2020-03-29 20:14:53,101 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:53,101 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46890
2020-03-29 20:14:53,101 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:53,101 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:53,101 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:53,101 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:53,101 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:53,101 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:53,101 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46890
2020-03-29 20:14:53,358 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:53,358 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:53,358 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:53,359 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:53,359 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:53,359 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:53,359 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:53,359 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:53,359 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:53,360 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:53,360 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:53,360 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:53,360 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:53,360 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:53,360 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:53,360 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:53,360 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:53,360 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:53,361 TRACE [_] NetStream::read()
2020-03-29 20:14:53,361 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:53,361 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:53,361 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:53,361 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:53,361 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:53,361 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:53,361 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:53,361 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:53,361 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:53,361 TRACE [_] DataStream::read()
2020-03-29 20:14:53,361 TRACE [_] DataStream::read()
2020-03-29 20:14:53,361 TRACE [_] DataStream::read()
2020-03-29 20:14:53,362 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:53,362 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46892 and port 5002
2020-03-29 20:14:53,362 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:53,362 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:53,362 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:53,362 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:53,362 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:53,362 INFO  [_] Outcome: Success
2020-03-29 20:14:53,363 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:53,363 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:53,363 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:53,363 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:53,363 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:53,363 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:53,363 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:53,363 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 53, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 363639822 })) )
2020-03-29 20:14:53,363 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:53 GMT
, }]
2020-03-29 20:14:53,363 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:53,364 TRACE [hyper::server::response] ending
2020-03-29 20:14:53,364 INFO  [_] Response succeeded.
2020-03-29 20:14:53,364 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:53,364 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46892
2020-03-29 20:14:53,364 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:53,364 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:53,364 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:53,364 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:53,364 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:53,364 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:53,364 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46892
2020-03-29 20:14:53,551 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:53,577 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:53,577 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:53,577 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:53,577 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:53,619 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:53,620 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:53,620 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:53,620 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:53,620 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:53,620 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:53,620 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:53,620 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:53,620 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:53,621 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:53,621 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:53,621 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:53,621 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:53,621 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:53,621 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:53,621 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:53,621 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:53,621 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:53,621 TRACE [_] NetStream::read()
2020-03-29 20:14:53,622 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:53,622 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:53,622 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:53,622 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:53,622 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:53,622 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:53,622 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:53,622 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:53,622 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:53,622 TRACE [_] DataStream::read()
2020-03-29 20:14:53,622 TRACE [_] DataStream::read()
2020-03-29 20:14:53,622 TRACE [_] DataStream::read()
2020-03-29 20:14:53,622 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:53,622 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46894 and port 5002
2020-03-29 20:14:53,622 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:53,623 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:53,623 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:53,623 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:53,623 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:53,623 INFO  [_] Outcome: Success
2020-03-29 20:14:53,623 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:53,623 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:53,623 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:53,623 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:53,624 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:53,624 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:53,624 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:53,624 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 53, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 624243624 })) )
2020-03-29 20:14:53,624 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:53 GMT
, }]
2020-03-29 20:14:53,624 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:53,624 TRACE [hyper::server::response] ending
2020-03-29 20:14:53,624 INFO  [_] Response succeeded.
2020-03-29 20:14:53,624 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:53,624 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46894
2020-03-29 20:14:53,624 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:53,624 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:53,625 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:53,625 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:53,625 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:53,625 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:53,625 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46894
2020-03-29 20:14:53,881 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:53,881 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:53,881 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:53,882 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:53,882 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:53,882 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:53,882 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:53,882 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:53,882 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:53,882 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:53,882 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:53,882 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:53,883 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:53,883 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:53,883 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:53,883 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:53,883 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:53,883 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:53,883 TRACE [_] NetStream::read()
2020-03-29 20:14:53,883 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:53,883 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:53,884 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:53,884 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:53,884 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:53,884 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:53,884 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:53,884 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:53,884 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:53,884 TRACE [_] DataStream::read()
2020-03-29 20:14:53,884 TRACE [_] DataStream::read()
2020-03-29 20:14:53,884 TRACE [_] DataStream::read()
2020-03-29 20:14:53,884 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:53,884 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46896 and port 5002
2020-03-29 20:14:53,884 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:53,885 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:53,885 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:53,885 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:53,885 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:53,885 INFO  [_] Outcome: Success
2020-03-29 20:14:53,885 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:53,885 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:53,885 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:53,886 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:53,886 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:53,886 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:53,886 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:53,886 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 53, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 886402038 })) )
2020-03-29 20:14:53,886 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:53 GMT
, }]
2020-03-29 20:14:53,886 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:53,886 TRACE [hyper::server::response] ending
2020-03-29 20:14:53,886 INFO  [_] Response succeeded.
2020-03-29 20:14:53,887 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:53,887 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46896
2020-03-29 20:14:53,887 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:53,887 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:53,887 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:53,887 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:53,887 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:53,887 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:53,887 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46896
2020-03-29 20:14:54,144 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:54,144 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:54,144 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:54,144 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:54,144 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:54,144 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:54,145 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:54,145 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:54,145 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:54,145 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:54,145 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:54,145 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:54,145 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:54,145 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:54,145 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:54,145 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:54,146 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:54,146 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:54,146 TRACE [_] NetStream::read()
2020-03-29 20:14:54,146 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:54,146 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:54,146 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:54,146 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:54,146 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:54,146 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:54,147 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:54,147 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:54,147 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:54,147 TRACE [_] DataStream::read()
2020-03-29 20:14:54,147 TRACE [_] DataStream::read()
2020-03-29 20:14:54,147 TRACE [_] DataStream::read()
2020-03-29 20:14:54,147 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:54,147 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46898 and port 5002
2020-03-29 20:14:54,147 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:54,148 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:54,148 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:54,148 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:54,148 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:54,148 INFO  [_] Outcome: Success
2020-03-29 20:14:54,148 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:54,148 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:54,149 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:54,149 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:54,149 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:54,149 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:54,149 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:54,149 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 54, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 149516855 })) )
2020-03-29 20:14:54,149 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:54 GMT
, }]
2020-03-29 20:14:54,149 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:54,149 TRACE [hyper::server::response] ending
2020-03-29 20:14:54,150 INFO  [_] Response succeeded.
2020-03-29 20:14:54,150 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:54,150 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46898
2020-03-29 20:14:54,150 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:54,150 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:54,150 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:54,150 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:54,150 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:54,150 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:54,150 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46898
2020-03-29 20:14:54,407 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:54,407 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:54,407 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:54,408 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:54,408 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:54,408 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:54,408 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:54,408 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:54,408 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:54,409 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:54,409 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:54,409 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:54,409 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:54,409 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:54,409 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:54,409 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:54,409 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:54,409 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:54,410 TRACE [_] NetStream::read()
2020-03-29 20:14:54,410 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:54,410 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:54,410 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:54,410 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:54,410 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:54,410 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:54,410 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:54,410 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:54,410 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:54,410 TRACE [_] DataStream::read()
2020-03-29 20:14:54,410 TRACE [_] DataStream::read()
2020-03-29 20:14:54,410 TRACE [_] DataStream::read()
2020-03-29 20:14:54,410 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:54,410 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46900 and port 5002
2020-03-29 20:14:54,411 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:54,411 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:54,411 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:54,411 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:54,411 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:54,412 INFO  [_] Outcome: Success
2020-03-29 20:14:54,412 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:54,412 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:54,412 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:54,412 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:54,412 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:54,412 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:54,412 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:54,413 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 54, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 412996895 })) )
2020-03-29 20:14:54,413 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:54 GMT
, }]
2020-03-29 20:14:54,413 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:54,413 TRACE [hyper::server::response] ending
2020-03-29 20:14:54,413 INFO  [_] Response succeeded.
2020-03-29 20:14:54,413 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:54,413 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46900
2020-03-29 20:14:54,413 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:54,413 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:54,414 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:54,414 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:54,414 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:54,414 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:54,414 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46900
2020-03-29 20:14:54,669 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:54,670 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:54,670 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:54,671 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:54,671 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:54,671 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:54,671 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:54,671 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:54,671 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:54,671 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:54,671 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:54,672 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:54,672 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:54,672 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:54,672 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:54,672 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:54,672 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:54,672 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:54,672 TRACE [_] NetStream::read()
2020-03-29 20:14:54,672 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:54,672 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:54,673 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:54,673 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:54,673 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:54,673 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:54,673 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:54,673 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:54,673 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:54,673 TRACE [_] DataStream::read()
2020-03-29 20:14:54,673 TRACE [_] DataStream::read()
2020-03-29 20:14:54,673 TRACE [_] DataStream::read()
2020-03-29 20:14:54,673 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:54,673 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46902 and port 5002
2020-03-29 20:14:54,673 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:54,674 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:54,674 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:54,674 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:54,674 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:54,674 INFO  [_] Outcome: Success
2020-03-29 20:14:54,674 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:54,674 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:54,674 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:54,675 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:54,675 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:54,675 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:54,675 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:54,675 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 54, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 675330897 })) )
2020-03-29 20:14:54,675 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:54 GMT
, }]
2020-03-29 20:14:54,675 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:54,675 TRACE [hyper::server::response] ending
2020-03-29 20:14:54,675 INFO  [_] Response succeeded.
2020-03-29 20:14:54,675 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:54,675 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46902
2020-03-29 20:14:54,676 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:54,676 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:54,676 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:54,676 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:54,676 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:54,676 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:54,676 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46902
2020-03-29 20:14:54,931 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:54,931 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:54,931 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:54,932 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:54,932 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:54,932 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:54,932 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:54,932 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:54,932 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:54,932 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:54,932 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:54,932 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:54,932 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:54,932 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:54,932 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:54,932 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:54,932 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:54,932 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:54,933 TRACE [_] NetStream::read()
2020-03-29 20:14:54,933 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:54,933 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:54,933 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:54,933 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:54,933 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:54,933 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:54,933 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:54,933 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:54,933 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:54,933 TRACE [_] DataStream::read()
2020-03-29 20:14:54,933 TRACE [_] DataStream::read()
2020-03-29 20:14:54,933 TRACE [_] DataStream::read()
2020-03-29 20:14:54,933 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:54,933 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46904 and port 5002
2020-03-29 20:14:54,933 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:54,933 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:54,933 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:54,934 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:54,934 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:54,934 INFO  [_] Outcome: Success
2020-03-29 20:14:54,934 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:54,934 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:54,934 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:54,935 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:54,935 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:54,935 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:54,935 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:54,935 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 54, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 935425118 })) )
2020-03-29 20:14:54,935 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:54 GMT
, }]
2020-03-29 20:14:54,935 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:54,935 TRACE [hyper::server::response] ending
2020-03-29 20:14:54,936 INFO  [_] Response succeeded.
2020-03-29 20:14:54,936 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:54,936 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46904
2020-03-29 20:14:54,936 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:54,936 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:54,936 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:54,936 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:54,936 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:54,936 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:54,936 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46904
2020-03-29 20:14:54,959 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:55,194 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:55,195 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:55,195 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:55,195 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:55,195 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:55,195 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:55,195 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:55,195 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:55,195 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:55,196 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:55,196 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:55,196 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:55,196 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:55,196 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:55,196 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:55,196 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:55,196 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:55,196 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:55,197 TRACE [_] NetStream::read()
2020-03-29 20:14:55,197 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:55,197 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:55,197 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:55,197 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:55,197 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:55,197 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:55,197 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:55,197 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:55,197 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:55,197 TRACE [_] DataStream::read()
2020-03-29 20:14:55,197 TRACE [_] DataStream::read()
2020-03-29 20:14:55,197 TRACE [_] DataStream::read()
2020-03-29 20:14:55,197 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:55,198 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46906 and port 5002
2020-03-29 20:14:55,198 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:55,198 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:55,198 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:55,198 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:55,198 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:55,198 INFO  [_] Outcome: Success
2020-03-29 20:14:55,198 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:55,198 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:55,198 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:55,199 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:55,199 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:55,199 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:55,199 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:55,199 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 55, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 199336643 })) )
2020-03-29 20:14:55,199 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:55 GMT
, }]
2020-03-29 20:14:55,199 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:55,199 TRACE [hyper::server::response] ending
2020-03-29 20:14:55,199 INFO  [_] Response succeeded.
2020-03-29 20:14:55,199 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:55,200 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46906
2020-03-29 20:14:55,200 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:55,200 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:55,200 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:55,200 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:55,200 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:55,200 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:55,200 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46906
2020-03-29 20:14:55,457 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:55,457 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:55,457 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:55,459 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:55,459 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:55,459 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:55,459 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:55,459 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:55,459 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:55,459 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:55,459 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:55,459 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:55,460 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:55,460 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:55,460 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:55,460 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:55,460 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:55,460 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:55,460 TRACE [_] NetStream::read()
2020-03-29 20:14:55,460 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:55,460 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:55,461 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:55,461 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:55,461 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:55,461 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:55,461 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:55,461 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:55,461 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:55,461 TRACE [_] DataStream::read()
2020-03-29 20:14:55,461 TRACE [_] DataStream::read()
2020-03-29 20:14:55,461 TRACE [_] DataStream::read()
2020-03-29 20:14:55,461 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:55,461 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46908 and port 5002
2020-03-29 20:14:55,461 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:55,462 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:55,462 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:55,462 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:55,462 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:55,462 INFO  [_] Outcome: Success
2020-03-29 20:14:55,462 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:55,462 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:55,462 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:55,463 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:55,463 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:55,463 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:55,463 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:55,463 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 55, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 463389452 })) )
2020-03-29 20:14:55,463 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:55 GMT
, }]
2020-03-29 20:14:55,463 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:55,463 TRACE [hyper::server::response] ending
2020-03-29 20:14:55,463 INFO  [_] Response succeeded.
2020-03-29 20:14:55,463 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:55,464 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46908
2020-03-29 20:14:55,464 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:55,464 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:55,464 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:55,464 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:55,464 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:55,464 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:55,464 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46908
2020-03-29 20:14:55,717 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:55,717 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:55,717 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:55,718 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:55,718 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:55,718 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:55,718 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:55,718 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:55,718 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:55,718 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:55,719 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:55,719 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:55,719 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:55,719 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:55,719 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:55,719 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:55,720 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:55,720 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:55,720 TRACE [_] NetStream::read()
2020-03-29 20:14:55,720 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:55,720 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:55,720 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:55,720 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:55,720 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:55,720 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:55,720 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:55,720 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:55,721 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:55,721 TRACE [_] DataStream::read()
2020-03-29 20:14:55,721 TRACE [_] DataStream::read()
2020-03-29 20:14:55,721 TRACE [_] DataStream::read()
2020-03-29 20:14:55,721 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:55,721 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46910 and port 5002
2020-03-29 20:14:55,721 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:55,721 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:55,721 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:55,722 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:55,722 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:55,722 INFO  [_] Outcome: Success
2020-03-29 20:14:55,722 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:55,722 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:55,722 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:55,722 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:55,723 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:55,723 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:55,723 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:55,723 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 55, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 723281807 })) )
2020-03-29 20:14:55,723 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:55 GMT
, }]
2020-03-29 20:14:55,723 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:55,723 TRACE [hyper::server::response] ending
2020-03-29 20:14:55,723 INFO  [_] Response succeeded.
2020-03-29 20:14:55,724 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:55,724 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46910
2020-03-29 20:14:55,724 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:55,724 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:55,724 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:55,724 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:55,724 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:55,724 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:55,724 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46910
2020-03-29 20:14:55,982 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:55,982 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:55,982 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:55,983 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:55,983 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:55,983 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:55,983 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:55,983 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:55,983 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:55,983 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:55,983 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:55,983 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:55,983 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:55,983 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:55,983 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:55,983 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:55,983 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:55,983 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:55,983 TRACE [_] NetStream::read()
2020-03-29 20:14:55,983 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:55,983 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:55,983 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:55,983 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:55,983 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:55,983 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:55,984 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:55,984 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:55,984 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:55,984 TRACE [_] DataStream::read()
2020-03-29 20:14:55,984 TRACE [_] DataStream::read()
2020-03-29 20:14:55,984 TRACE [_] DataStream::read()
2020-03-29 20:14:55,984 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:55,984 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46912 and port 5002
2020-03-29 20:14:55,984 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:55,984 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:55,984 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:55,984 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:55,984 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:55,985 INFO  [_] Outcome: Success
2020-03-29 20:14:55,985 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:55,985 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:55,985 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:55,985 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:55,985 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:55,985 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:55,985 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:55,985 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 55, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 985361464 })) )
2020-03-29 20:14:55,985 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:55 GMT
, }]
2020-03-29 20:14:55,985 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:55,985 TRACE [hyper::server::response] ending
2020-03-29 20:14:55,985 INFO  [_] Response succeeded.
2020-03-29 20:14:55,985 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:55,985 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46912
2020-03-29 20:14:55,985 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:55,985 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:55,985 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:55,985 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:55,985 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:55,985 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:55,985 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46912
2020-03-29 20:14:56,246 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:56,246 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:56,246 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:56,247 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:56,247 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:56,247 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:56,248 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:56,248 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:56,248 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:56,248 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:56,248 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:56,248 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:56,248 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:56,248 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:56,248 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:56,248 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:56,249 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:56,249 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:56,249 TRACE [_] NetStream::read()
2020-03-29 20:14:56,249 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:56,249 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:56,249 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:56,249 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:56,249 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:56,249 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:56,249 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:56,249 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:56,250 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:56,250 TRACE [_] DataStream::read()
2020-03-29 20:14:56,250 TRACE [_] DataStream::read()
2020-03-29 20:14:56,250 TRACE [_] DataStream::read()
2020-03-29 20:14:56,250 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:56,250 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46914 and port 5002
2020-03-29 20:14:56,250 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:56,250 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:56,250 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:56,251 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:56,251 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:56,251 INFO  [_] Outcome: Success
2020-03-29 20:14:56,251 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:56,251 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:56,251 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:56,251 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:56,251 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:56,251 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:56,252 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:56,252 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 56, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 252111967 })) )
2020-03-29 20:14:56,252 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:56 GMT
, }]
2020-03-29 20:14:56,252 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:56,252 TRACE [hyper::server::response] ending
2020-03-29 20:14:56,252 INFO  [_] Response succeeded.
2020-03-29 20:14:56,252 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:56,252 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46914
2020-03-29 20:14:56,252 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:56,252 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:56,252 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:56,253 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:56,253 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:56,253 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:56,253 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46914
2020-03-29 20:14:56,509 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:56,509 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:56,509 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:56,510 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:56,510 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:56,510 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:56,510 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:56,510 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:56,510 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:56,510 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:56,510 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:56,510 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:56,510 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:56,510 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:56,510 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:56,510 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:56,510 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:56,510 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:56,511 TRACE [_] NetStream::read()
2020-03-29 20:14:56,511 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:56,511 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:56,511 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:56,511 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:56,511 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:56,511 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:56,511 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:56,511 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:56,511 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:56,511 TRACE [_] DataStream::read()
2020-03-29 20:14:56,511 TRACE [_] DataStream::read()
2020-03-29 20:14:56,511 TRACE [_] DataStream::read()
2020-03-29 20:14:56,511 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:56,511 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46916 and port 5002
2020-03-29 20:14:56,511 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:56,511 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:56,512 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:56,512 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:56,512 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:56,512 INFO  [_] Outcome: Success
2020-03-29 20:14:56,512 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:56,512 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:56,512 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:56,512 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:56,512 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:56,512 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:56,512 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:56,512 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 56, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 512771515 })) )
2020-03-29 20:14:56,512 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:56 GMT
, }]
2020-03-29 20:14:56,512 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:56,512 TRACE [hyper::server::response] ending
2020-03-29 20:14:56,513 INFO  [_] Response succeeded.
2020-03-29 20:14:56,513 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:56,513 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46916
2020-03-29 20:14:56,513 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:56,513 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:56,513 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:56,513 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:56,513 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:56,513 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:56,513 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46916
2020-03-29 20:14:56,771 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:56,771 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:56,771 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:56,771 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:56,771 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:56,771 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:56,771 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:56,771 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:56,772 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:56,772 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:56,772 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:56,772 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:56,772 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:56,772 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:56,772 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:56,772 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:56,772 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:56,773 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:56,773 TRACE [_] NetStream::read()
2020-03-29 20:14:56,773 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:56,773 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:56,773 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:56,773 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:56,773 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:56,773 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:56,773 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:56,773 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:56,773 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:56,773 TRACE [_] DataStream::read()
2020-03-29 20:14:56,773 TRACE [_] DataStream::read()
2020-03-29 20:14:56,774 TRACE [_] DataStream::read()
2020-03-29 20:14:56,774 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:56,774 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46918 and port 5002
2020-03-29 20:14:56,774 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:56,774 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:56,774 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:56,774 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:56,774 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:56,774 INFO  [_] Outcome: Success
2020-03-29 20:14:56,775 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:56,775 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:56,775 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:56,775 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:56,775 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:56,775 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:56,775 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:56,775 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 56, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 775656575 })) )
2020-03-29 20:14:56,775 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:56 GMT
, }]
2020-03-29 20:14:56,775 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:56,775 TRACE [hyper::server::response] ending
2020-03-29 20:14:56,775 INFO  [_] Response succeeded.
2020-03-29 20:14:56,776 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:56,776 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46918
2020-03-29 20:14:56,776 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:56,776 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:56,776 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:56,776 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:56,776 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:56,776 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:56,776 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46918
2020-03-29 20:14:57,034 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:57,034 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:57,034 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:57,034 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:57,035 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:57,035 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:57,035 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:57,035 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:57,035 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:57,035 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:57,035 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:57,035 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:57,035 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:57,035 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:57,035 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:57,036 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:57,036 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:57,036 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:57,036 TRACE [_] NetStream::read()
2020-03-29 20:14:57,036 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:57,036 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:57,036 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:57,036 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:57,036 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:57,036 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:57,036 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:57,037 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:57,037 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:57,037 TRACE [_] DataStream::read()
2020-03-29 20:14:57,037 TRACE [_] DataStream::read()
2020-03-29 20:14:57,037 TRACE [_] DataStream::read()
2020-03-29 20:14:57,037 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:57,037 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46920 and port 5002
2020-03-29 20:14:57,037 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:57,037 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:57,038 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:57,038 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:57,038 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:57,038 INFO  [_] Outcome: Success
2020-03-29 20:14:57,038 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:57,038 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:57,038 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:57,038 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:57,038 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:57,039 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:57,039 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:57,039 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 57, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 39216935 })) )
2020-03-29 20:14:57,039 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:57 GMT
, }]
2020-03-29 20:14:57,039 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:57,039 TRACE [hyper::server::response] ending
2020-03-29 20:14:57,039 INFO  [_] Response succeeded.
2020-03-29 20:14:57,039 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:57,039 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46920
2020-03-29 20:14:57,039 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:57,040 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:57,040 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:57,040 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:57,040 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:57,040 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:57,040 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46920
2020-03-29 20:14:57,294 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:57,294 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:57,295 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:57,295 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:57,295 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:57,295 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:57,295 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:57,295 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:57,295 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:57,295 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:57,296 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:57,296 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:57,296 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:57,296 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:57,296 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:57,296 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:57,296 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:57,296 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:57,296 TRACE [_] NetStream::read()
2020-03-29 20:14:57,297 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:57,297 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:57,297 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:57,297 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:57,297 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:57,297 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:57,297 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:57,297 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:57,297 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:57,297 TRACE [_] DataStream::read()
2020-03-29 20:14:57,297 TRACE [_] DataStream::read()
2020-03-29 20:14:57,297 TRACE [_] DataStream::read()
2020-03-29 20:14:57,297 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:57,298 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46922 and port 5002
2020-03-29 20:14:57,298 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:57,298 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:57,298 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:57,298 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:57,298 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:57,298 INFO  [_] Outcome: Success
2020-03-29 20:14:57,298 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:57,299 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:57,299 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:57,299 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:57,299 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:57,299 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:57,299 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:57,299 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 57, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 299505451 })) )
2020-03-29 20:14:57,299 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:57 GMT
, }]
2020-03-29 20:14:57,299 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:57,299 TRACE [hyper::server::response] ending
2020-03-29 20:14:57,299 INFO  [_] Response succeeded.
2020-03-29 20:14:57,300 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:57,300 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46922
2020-03-29 20:14:57,300 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:57,300 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:57,300 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:57,300 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:57,300 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:57,300 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:57,300 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46922
2020-03-29 20:14:57,559 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:57,559 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:57,559 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:57,560 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:57,560 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:57,560 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:57,560 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:57,560 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:57,560 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:57,560 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:57,560 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:57,560 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:57,560 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:57,560 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:57,560 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:57,560 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:57,560 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:57,561 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:57,561 TRACE [_] NetStream::read()
2020-03-29 20:14:57,561 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:57,561 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:57,561 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:57,561 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:57,561 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:57,561 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:57,561 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:57,561 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:57,561 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:57,561 TRACE [_] DataStream::read()
2020-03-29 20:14:57,561 TRACE [_] DataStream::read()
2020-03-29 20:14:57,561 TRACE [_] DataStream::read()
2020-03-29 20:14:57,561 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:57,561 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46924 and port 5002
2020-03-29 20:14:57,561 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:57,561 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:57,562 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:57,562 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:57,562 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:57,562 INFO  [_] Outcome: Success
2020-03-29 20:14:57,562 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:57,562 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:57,562 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:57,562 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:57,562 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:57,563 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:57,563 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:57,563 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 57, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 563172521 })) )
2020-03-29 20:14:57,563 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:57 GMT
, }]
2020-03-29 20:14:57,563 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:57,563 TRACE [hyper::server::response] ending
2020-03-29 20:14:57,563 INFO  [_] Response succeeded.
2020-03-29 20:14:57,563 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:57,563 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46924
2020-03-29 20:14:57,563 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:57,563 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:57,564 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:57,564 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:57,564 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:57,564 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:57,564 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46924
2020-03-29 20:14:57,818 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:57,818 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:57,818 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:57,819 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:57,819 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:57,819 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:57,819 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:57,819 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:57,819 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:57,820 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:57,820 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:57,820 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:57,820 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:57,820 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:57,820 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:57,820 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:57,821 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:57,821 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:57,821 TRACE [_] NetStream::read()
2020-03-29 20:14:57,821 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:57,821 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:57,821 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:57,821 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:57,821 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:57,821 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:57,821 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:57,821 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:57,822 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:57,822 TRACE [_] DataStream::read()
2020-03-29 20:14:57,822 TRACE [_] DataStream::read()
2020-03-29 20:14:57,822 TRACE [_] DataStream::read()
2020-03-29 20:14:57,822 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:57,822 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46926 and port 5002
2020-03-29 20:14:57,822 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:57,823 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:57,823 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:57,823 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:57,823 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:57,823 INFO  [_] Outcome: Success
2020-03-29 20:14:57,823 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:57,823 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:57,823 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:57,824 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:57,824 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:57,824 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:57,824 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:57,824 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 57, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 824422369 })) )
2020-03-29 20:14:57,824 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:57 GMT
, }]
2020-03-29 20:14:57,824 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:57,824 TRACE [hyper::server::response] ending
2020-03-29 20:14:57,825 INFO  [_] Response succeeded.
2020-03-29 20:14:57,825 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:57,825 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46926
2020-03-29 20:14:57,825 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:57,825 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:57,825 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:57,825 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:57,825 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:57,825 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:57,825 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46926
2020-03-29 20:14:58,081 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:58,082 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:58,082 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:58,083 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:58,083 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:58,083 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:58,083 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:58,084 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:58,084 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:58,084 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:58,084 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:58,084 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:58,084 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:58,084 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:58,084 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:58,084 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:58,085 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:58,085 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:58,085 TRACE [_] NetStream::read()
2020-03-29 20:14:58,085 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:58,085 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:58,085 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:58,085 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:58,085 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:58,085 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:58,085 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:58,085 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:58,085 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:58,085 TRACE [_] DataStream::read()
2020-03-29 20:14:58,085 TRACE [_] DataStream::read()
2020-03-29 20:14:58,085 TRACE [_] DataStream::read()
2020-03-29 20:14:58,085 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:58,085 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46928 and port 5002
2020-03-29 20:14:58,085 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:58,085 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:58,086 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:58,086 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:58,086 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:58,086 INFO  [_] Outcome: Success
2020-03-29 20:14:58,086 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:58,086 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:58,086 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:58,086 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:58,086 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:58,086 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:58,086 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:58,086 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 58, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 86741093 })) )
2020-03-29 20:14:58,086 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:58 GMT
, }]
2020-03-29 20:14:58,086 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:58,086 TRACE [hyper::server::response] ending
2020-03-29 20:14:58,086 INFO  [_] Response succeeded.
2020-03-29 20:14:58,087 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:58,087 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46928
2020-03-29 20:14:58,087 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:58,087 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:58,087 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:58,087 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:58,087 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:58,087 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:58,087 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46928
2020-03-29 20:14:58,344 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:58,344 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:58,344 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:58,344 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:58,344 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:58,344 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:58,344 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:58,344 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:58,345 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:58,345 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:58,345 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:58,345 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:58,345 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:58,345 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:58,345 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:58,345 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:58,345 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:58,346 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:58,346 TRACE [_] NetStream::read()
2020-03-29 20:14:58,346 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:58,346 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:58,346 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:58,346 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:58,346 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:58,346 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:58,346 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:58,346 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:58,346 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:58,346 TRACE [_] DataStream::read()
2020-03-29 20:14:58,346 TRACE [_] DataStream::read()
2020-03-29 20:14:58,347 TRACE [_] DataStream::read()
2020-03-29 20:14:58,347 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:58,347 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46930 and port 5002
2020-03-29 20:14:58,347 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:58,347 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:58,347 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:58,347 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:58,347 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:58,347 INFO  [_] Outcome: Success
2020-03-29 20:14:58,348 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:58,348 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:58,348 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:58,348 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:58,348 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:58,348 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:58,348 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:58,348 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 58, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 348720445 })) )
2020-03-29 20:14:58,348 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:58 GMT
, }]
2020-03-29 20:14:58,349 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:58,349 TRACE [hyper::server::response] ending
2020-03-29 20:14:58,349 INFO  [_] Response succeeded.
2020-03-29 20:14:58,349 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:58,349 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46930
2020-03-29 20:14:58,349 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:58,349 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:58,349 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:58,349 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:58,349 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:58,349 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:58,349 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46930
2020-03-29 20:14:58,543 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:58,577 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:58,577 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:58,577 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:58,578 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:58,607 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:58,607 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:58,607 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:58,608 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:58,608 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:58,608 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:58,608 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:58,608 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:58,608 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:58,608 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:58,608 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:58,608 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:58,608 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:58,608 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:58,608 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:58,609 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:58,609 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:58,609 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:58,609 TRACE [_] NetStream::read()
2020-03-29 20:14:58,609 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:58,609 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:58,609 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:58,609 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:58,609 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:58,609 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:58,610 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:58,610 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:58,610 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:58,610 TRACE [_] DataStream::read()
2020-03-29 20:14:58,610 TRACE [_] DataStream::read()
2020-03-29 20:14:58,610 TRACE [_] DataStream::read()
2020-03-29 20:14:58,610 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:58,610 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46932 and port 5002
2020-03-29 20:14:58,610 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:58,611 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:58,611 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:58,611 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:58,611 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:58,611 INFO  [_] Outcome: Success
2020-03-29 20:14:58,611 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:58,611 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:58,611 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:58,612 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:58,612 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:58,612 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:58,612 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:58,612 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 58, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 612338503 })) )
2020-03-29 20:14:58,612 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:58 GMT
, }]
2020-03-29 20:14:58,612 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:58,612 TRACE [hyper::server::response] ending
2020-03-29 20:14:58,612 INFO  [_] Response succeeded.
2020-03-29 20:14:58,612 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:58,612 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46932
2020-03-29 20:14:58,613 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:58,613 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:58,613 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:58,613 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:58,613 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:58,613 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:58,613 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46932
2020-03-29 20:14:58,870 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:58,870 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:58,870 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:58,871 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:58,871 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:58,871 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:58,871 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:58,872 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:58,872 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:58,872 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:58,872 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:58,872 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:58,872 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:58,872 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:58,872 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:58,872 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:58,873 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:58,873 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:58,873 TRACE [_] NetStream::read()
2020-03-29 20:14:58,873 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:58,873 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:58,873 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:58,873 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:58,873 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:58,873 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:58,873 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:58,873 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:58,873 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:58,873 TRACE [_] DataStream::read()
2020-03-29 20:14:58,873 TRACE [_] DataStream::read()
2020-03-29 20:14:58,874 TRACE [_] DataStream::read()
2020-03-29 20:14:58,874 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:58,874 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46934 and port 5002
2020-03-29 20:14:58,874 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:58,874 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:58,874 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:58,874 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:58,874 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:58,874 INFO  [_] Outcome: Success
2020-03-29 20:14:58,875 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:58,875 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:58,875 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:58,875 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:58,875 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:58,875 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:58,875 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:58,875 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 58, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 875565863 })) )
2020-03-29 20:14:58,875 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:58 GMT
, }]
2020-03-29 20:14:58,875 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:58,875 TRACE [hyper::server::response] ending
2020-03-29 20:14:58,876 INFO  [_] Response succeeded.
2020-03-29 20:14:58,876 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:58,876 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46934
2020-03-29 20:14:58,876 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:58,876 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:58,876 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:58,876 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:58,876 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:58,876 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:58,876 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46934
2020-03-29 20:14:59,133 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:59,134 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:59,134 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:59,135 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:59,135 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:59,135 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:59,135 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:59,135 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:59,135 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:59,135 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:59,136 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:59,136 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:59,136 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:59,136 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:59,136 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:59,136 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:59,136 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:59,136 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:59,136 TRACE [_] NetStream::read()
2020-03-29 20:14:59,136 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:59,136 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:59,137 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:59,137 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:59,137 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:59,137 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:59,137 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:59,137 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:59,137 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:59,137 TRACE [_] DataStream::read()
2020-03-29 20:14:59,137 TRACE [_] DataStream::read()
2020-03-29 20:14:59,137 TRACE [_] DataStream::read()
2020-03-29 20:14:59,137 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:59,137 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46936 and port 5002
2020-03-29 20:14:59,137 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:59,138 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:59,138 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:59,138 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:59,138 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:59,138 INFO  [_] Outcome: Success
2020-03-29 20:14:59,138 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:59,138 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:59,138 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:59,138 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:59,138 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:59,138 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:59,138 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:59,139 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 59, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 139020056 })) )
2020-03-29 20:14:59,139 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:59 GMT
, }]
2020-03-29 20:14:59,139 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:59,139 TRACE [hyper::server::response] ending
2020-03-29 20:14:59,139 INFO  [_] Response succeeded.
2020-03-29 20:14:59,139 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:59,139 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46936
2020-03-29 20:14:59,139 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:59,139 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:59,139 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:59,139 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:59,139 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:59,139 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:59,140 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46936
2020-03-29 20:14:59,395 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:59,395 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:59,395 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:59,396 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:59,396 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:59,396 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:59,396 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:59,396 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:59,396 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:59,396 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:59,396 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:59,396 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:59,396 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:59,397 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:59,397 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:59,397 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:59,397 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:59,397 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:59,397 TRACE [_] NetStream::read()
2020-03-29 20:14:59,397 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:59,397 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:59,397 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:59,398 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:59,398 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:59,398 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:59,398 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:59,398 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:59,398 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:59,398 TRACE [_] DataStream::read()
2020-03-29 20:14:59,398 TRACE [_] DataStream::read()
2020-03-29 20:14:59,398 TRACE [_] DataStream::read()
2020-03-29 20:14:59,398 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:59,398 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46938 and port 5002
2020-03-29 20:14:59,398 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:59,399 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:59,399 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:59,399 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:59,399 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:59,399 INFO  [_] Outcome: Success
2020-03-29 20:14:59,399 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:59,400 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:59,400 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:59,400 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:59,400 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:59,400 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:59,400 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:59,400 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 59, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 400519321 })) )
2020-03-29 20:14:59,400 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:59 GMT
, }]
2020-03-29 20:14:59,400 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:59,400 TRACE [hyper::server::response] ending
2020-03-29 20:14:59,401 INFO  [_] Response succeeded.
2020-03-29 20:14:59,401 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:59,401 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46938
2020-03-29 20:14:59,401 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:59,401 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:59,401 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:59,401 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:59,401 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:59,401 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:59,401 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46938
2020-03-29 20:14:59,661 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:59,661 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:59,661 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:59,661 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:59,661 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:59,661 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:59,661 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:59,661 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:59,662 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:59,662 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:59,662 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:59,662 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:59,662 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:59,662 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:59,662 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:59,662 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:59,663 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:59,663 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:59,663 TRACE [_] NetStream::read()
2020-03-29 20:14:59,663 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:59,663 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:59,663 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:59,663 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:59,663 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:59,663 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:59,663 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:59,663 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:59,663 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:59,663 TRACE [_] DataStream::read()
2020-03-29 20:14:59,663 TRACE [_] DataStream::read()
2020-03-29 20:14:59,664 TRACE [_] DataStream::read()
2020-03-29 20:14:59,664 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:59,664 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46940 and port 5002
2020-03-29 20:14:59,664 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:59,664 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:59,664 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:59,664 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:59,664 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:59,664 INFO  [_] Outcome: Success
2020-03-29 20:14:59,664 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:59,665 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:59,665 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:59,665 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:59,665 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:59,665 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:59,665 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:59,665 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 59, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 665522875 })) )
2020-03-29 20:14:59,665 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:59 GMT
, }]
2020-03-29 20:14:59,665 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:59,665 TRACE [hyper::server::response] ending
2020-03-29 20:14:59,666 INFO  [_] Response succeeded.
2020-03-29 20:14:59,666 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:59,666 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46940
2020-03-29 20:14:59,666 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:59,666 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:59,666 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:59,666 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:59,666 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:59,666 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:59,666 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46940
2020-03-29 20:14:59,921 DEBUG [hyper::server] Incoming stream
2020-03-29 20:14:59,922 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:59,922 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:14:59,923 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:14:59,923 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:14:59,923 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:14:59,923 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:14:59,923 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:14:59,923 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:14:59,923 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:14:59,924 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:14:59,924 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:14:59,924 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:14:59,924 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:14:59,924 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:14:59,924 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:59,924 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:14:59,924 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:14:59,924 TRACE [_] NetStream::read()
2020-03-29 20:14:59,925 TRACE [_] NetStream::read() -- complete
2020-03-29 20:14:59,925 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:14:59,925 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:59,925 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:14:59,925 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:14:59,925 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:14:59,925 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:14:59,925 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:14:59,925 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:14:59,925 TRACE [_] DataStream::read()
2020-03-29 20:14:59,925 TRACE [_] DataStream::read()
2020-03-29 20:14:59,925 TRACE [_] DataStream::read()
2020-03-29 20:14:59,925 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:14:59,925 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46942 and port 5002
2020-03-29 20:14:59,926 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:14:59,926 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:14:59,926 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:14:59,926 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:14:59,926 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:14:59,926 INFO  [_] Outcome: Success
2020-03-29 20:14:59,926 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:14:59,927 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:59,927 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:14:59,927 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:14:59,927 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:14:59,927 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:14:59,927 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:14:59,927 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 59, tm_min: 14, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 927464486 })) )
2020-03-29 20:14:59,927 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:14:59 GMT
, }]
2020-03-29 20:14:59,927 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:14:59,927 TRACE [hyper::server::response] ending
2020-03-29 20:14:59,927 INFO  [_] Response succeeded.
2020-03-29 20:14:59,927 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:14:59,928 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46942
2020-03-29 20:14:59,928 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:59,928 TRACE [hyper::buffer] reserved 0
2020-03-29 20:14:59,928 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:14:59,928 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:14:59,928 TRACE [hyper::buffer] get_buf []
2020-03-29 20:14:59,928 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:14:59,928 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46942
2020-03-29 20:15:00,184 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:00,184 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:00,184 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:00,185 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:00,185 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:00,185 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:00,185 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:00,186 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:00,186 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:00,186 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:00,186 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:00,186 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:00,186 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:00,186 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:00,186 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:00,186 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:00,187 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:00,187 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:00,187 TRACE [_] NetStream::read()
2020-03-29 20:15:00,187 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:00,187 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:00,187 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:00,187 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:00,187 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:00,187 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:00,187 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:00,187 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:00,187 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:00,187 TRACE [_] DataStream::read()
2020-03-29 20:15:00,188 TRACE [_] DataStream::read()
2020-03-29 20:15:00,188 TRACE [_] DataStream::read()
2020-03-29 20:15:00,188 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:00,188 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46944 and port 5002
2020-03-29 20:15:00,188 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:00,188 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:00,188 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:00,188 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:00,188 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:00,189 INFO  [_] Outcome: Success
2020-03-29 20:15:00,189 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:00,189 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:00,189 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:00,189 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:00,189 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:00,189 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:00,189 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:00,189 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 0, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 189786837 })) )
2020-03-29 20:15:00,189 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:00 GMT
, }]
2020-03-29 20:15:00,190 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:00,190 TRACE [hyper::server::response] ending
2020-03-29 20:15:00,190 INFO  [_] Response succeeded.
2020-03-29 20:15:00,190 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:00,190 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46944
2020-03-29 20:15:00,190 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:00,190 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:00,190 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:00,190 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:00,190 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:00,190 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:00,190 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46944
2020-03-29 20:15:00,447 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:00,447 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:00,447 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:00,448 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:00,448 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:00,448 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:00,448 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:00,448 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:00,448 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:00,448 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:00,448 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:00,448 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:00,449 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:00,449 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:00,449 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:00,449 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:00,449 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:00,449 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:00,449 TRACE [_] NetStream::read()
2020-03-29 20:15:00,449 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:00,449 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:00,449 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:00,450 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:00,450 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:00,450 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:00,450 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:00,450 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:00,450 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:00,450 TRACE [_] DataStream::read()
2020-03-29 20:15:00,450 TRACE [_] DataStream::read()
2020-03-29 20:15:00,450 TRACE [_] DataStream::read()
2020-03-29 20:15:00,450 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:00,450 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46946 and port 5002
2020-03-29 20:15:00,450 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:00,451 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:00,451 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:00,451 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:00,451 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:00,451 INFO  [_] Outcome: Success
2020-03-29 20:15:00,451 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:00,451 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:00,451 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:00,452 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:00,452 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:00,452 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:00,452 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:00,452 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 0, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 452373422 })) )
2020-03-29 20:15:00,452 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:00 GMT
, }]
2020-03-29 20:15:00,452 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:00,452 TRACE [hyper::server::response] ending
2020-03-29 20:15:00,452 INFO  [_] Response succeeded.
2020-03-29 20:15:00,452 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:00,453 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46946
2020-03-29 20:15:00,453 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:00,453 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:00,453 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:00,453 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:00,453 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:00,453 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:00,453 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46946
2020-03-29 20:15:00,708 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:00,708 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:00,708 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:00,709 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:00,710 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:00,710 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:00,710 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:00,710 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:00,710 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:00,710 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:00,710 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:00,710 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:00,711 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:00,711 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:00,711 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:00,711 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:00,711 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:00,711 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:00,711 TRACE [_] NetStream::read()
2020-03-29 20:15:00,712 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:00,712 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:00,712 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:00,712 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:00,712 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:00,712 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:00,712 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:00,712 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:00,712 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:00,712 TRACE [_] DataStream::read()
2020-03-29 20:15:00,712 TRACE [_] DataStream::read()
2020-03-29 20:15:00,712 TRACE [_] DataStream::read()
2020-03-29 20:15:00,713 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:00,713 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46948 and port 5002
2020-03-29 20:15:00,713 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:00,713 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:00,713 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:00,713 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:00,713 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:00,714 INFO  [_] Outcome: Success
2020-03-29 20:15:00,714 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:00,714 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:00,714 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:00,714 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:00,714 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:00,714 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:00,714 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:00,715 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 0, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 715009409 })) )
2020-03-29 20:15:00,715 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:00 GMT
, }]
2020-03-29 20:15:00,715 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:00,715 TRACE [hyper::server::response] ending
2020-03-29 20:15:00,715 INFO  [_] Response succeeded.
2020-03-29 20:15:00,715 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:00,715 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46948
2020-03-29 20:15:00,715 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:00,716 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:00,716 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:00,716 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:00,716 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:00,716 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:00,716 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46948
2020-03-29 20:15:00,973 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:00,973 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:00,973 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:00,974 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:00,974 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:00,974 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:00,974 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:00,975 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:00,975 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:00,975 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:00,975 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:00,975 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:00,975 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:00,975 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:00,975 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:00,975 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:00,976 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:00,976 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:00,976 TRACE [_] NetStream::read()
2020-03-29 20:15:00,976 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:00,976 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:00,976 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:00,976 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:00,976 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:00,976 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:00,976 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:00,976 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:00,976 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:00,976 TRACE [_] DataStream::read()
2020-03-29 20:15:00,977 TRACE [_] DataStream::read()
2020-03-29 20:15:00,977 TRACE [_] DataStream::read()
2020-03-29 20:15:00,977 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:00,977 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46950 and port 5002
2020-03-29 20:15:00,977 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:00,977 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:00,977 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:00,977 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:00,977 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:00,977 INFO  [_] Outcome: Success
2020-03-29 20:15:00,977 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:00,978 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:00,978 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:00,978 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:00,978 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:00,978 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:00,978 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:00,978 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 0, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 978515318 })) )
2020-03-29 20:15:00,978 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:00 GMT
, }]
2020-03-29 20:15:00,978 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:00,978 TRACE [hyper::server::response] ending
2020-03-29 20:15:00,979 INFO  [_] Response succeeded.
2020-03-29 20:15:00,979 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:00,979 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46950
2020-03-29 20:15:00,979 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:00,979 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:00,979 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:00,979 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:00,979 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:00,979 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:00,979 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46950
2020-03-29 20:15:01,235 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:01,235 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:01,235 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:01,235 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:01,235 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:01,236 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:01,236 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:01,236 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:01,236 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:01,236 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:01,236 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:01,236 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:01,236 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:01,236 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:01,236 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:01,237 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:01,237 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:01,237 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:01,237 TRACE [_] NetStream::read()
2020-03-29 20:15:01,237 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:01,237 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:01,237 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:01,237 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:01,237 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:01,237 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:01,237 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:01,238 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:01,238 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:01,238 TRACE [_] DataStream::read()
2020-03-29 20:15:01,238 TRACE [_] DataStream::read()
2020-03-29 20:15:01,238 TRACE [_] DataStream::read()
2020-03-29 20:15:01,238 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:01,238 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46952 and port 5002
2020-03-29 20:15:01,238 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:01,238 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:01,238 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:01,239 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:01,239 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:01,239 INFO  [_] Outcome: Success
2020-03-29 20:15:01,239 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:01,239 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:01,239 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:01,239 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:01,239 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:01,239 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:01,240 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:01,240 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 1, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 240104231 })) )
2020-03-29 20:15:01,240 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:01 GMT
, }]
2020-03-29 20:15:01,240 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:01,240 TRACE [hyper::server::response] ending
2020-03-29 20:15:01,240 INFO  [_] Response succeeded.
2020-03-29 20:15:01,240 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:01,240 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46952
2020-03-29 20:15:01,240 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:01,240 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:01,240 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:01,241 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:01,241 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:01,241 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:01,241 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46952
2020-03-29 20:15:01,496 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:01,496 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:01,496 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:01,496 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:01,496 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:01,496 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:01,496 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:01,497 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:01,497 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:01,497 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:01,497 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:01,497 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:01,497 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:01,497 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:01,497 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:01,497 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:01,498 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:01,498 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:01,498 TRACE [_] NetStream::read()
2020-03-29 20:15:01,498 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:01,498 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:01,498 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:01,498 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:01,498 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:01,498 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:01,498 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:01,498 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:01,498 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:01,499 TRACE [_] DataStream::read()
2020-03-29 20:15:01,499 TRACE [_] DataStream::read()
2020-03-29 20:15:01,499 TRACE [_] DataStream::read()
2020-03-29 20:15:01,499 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:01,499 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46954 and port 5002
2020-03-29 20:15:01,499 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:01,499 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:01,499 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:01,499 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:01,499 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:01,499 INFO  [_] Outcome: Success
2020-03-29 20:15:01,499 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:01,500 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:01,500 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:01,500 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:01,500 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:01,500 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:01,500 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:01,500 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 1, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 500572824 })) )
2020-03-29 20:15:01,500 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:01 GMT
, }]
2020-03-29 20:15:01,500 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:01,500 TRACE [hyper::server::response] ending
2020-03-29 20:15:01,501 INFO  [_] Response succeeded.
2020-03-29 20:15:01,501 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:01,501 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46954
2020-03-29 20:15:01,501 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:01,501 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:01,501 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:01,501 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:01,501 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:01,501 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:01,501 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46954
2020-03-29 20:15:01,760 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:01,760 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:01,760 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:01,760 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:01,760 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:01,760 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:01,760 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:01,760 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:01,761 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:01,761 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:01,761 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:01,761 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:01,761 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:01,761 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:01,761 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:01,761 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:01,762 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:01,762 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:01,762 TRACE [_] NetStream::read()
2020-03-29 20:15:01,762 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:01,762 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:01,762 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:01,762 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:01,762 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:01,762 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:01,762 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:01,762 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:01,762 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:01,762 TRACE [_] DataStream::read()
2020-03-29 20:15:01,763 TRACE [_] DataStream::read()
2020-03-29 20:15:01,763 TRACE [_] DataStream::read()
2020-03-29 20:15:01,763 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:01,763 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46956 and port 5002
2020-03-29 20:15:01,763 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:01,763 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:01,763 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:01,763 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:01,763 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:01,764 INFO  [_] Outcome: Success
2020-03-29 20:15:01,764 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:01,764 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:01,764 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:01,764 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:01,764 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:01,764 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:01,764 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:01,764 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 1, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 764743375 })) )
2020-03-29 20:15:01,764 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:01 GMT
, }]
2020-03-29 20:15:01,765 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:01,765 TRACE [hyper::server::response] ending
2020-03-29 20:15:01,765 INFO  [_] Response succeeded.
2020-03-29 20:15:01,765 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:01,765 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46956
2020-03-29 20:15:01,765 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:01,765 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:01,765 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:01,765 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:01,765 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:01,765 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:01,765 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46956
2020-03-29 20:15:02,022 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:02,022 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:02,022 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:02,023 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:02,023 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:02,023 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:02,023 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:02,023 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:02,023 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:02,023 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:02,023 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:02,023 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:02,023 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:02,023 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:02,023 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:02,024 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:02,024 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:02,024 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:02,024 TRACE [_] NetStream::read()
2020-03-29 20:15:02,024 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:02,024 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:02,024 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:02,024 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:02,024 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:02,024 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:02,024 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:02,025 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:02,025 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:02,025 TRACE [_] DataStream::read()
2020-03-29 20:15:02,025 TRACE [_] DataStream::read()
2020-03-29 20:15:02,025 TRACE [_] DataStream::read()
2020-03-29 20:15:02,025 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:02,025 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46958 and port 5002
2020-03-29 20:15:02,025 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:02,025 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:02,025 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:02,026 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:02,026 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:02,026 INFO  [_] Outcome: Success
2020-03-29 20:15:02,026 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:02,026 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:02,026 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:02,026 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:02,026 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:02,026 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:02,026 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:02,026 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 2, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 26825759 })) )
2020-03-29 20:15:02,026 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:02 GMT
, }]
2020-03-29 20:15:02,027 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:02,027 TRACE [hyper::server::response] ending
2020-03-29 20:15:02,027 INFO  [_] Response succeeded.
2020-03-29 20:15:02,027 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:02,027 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46958
2020-03-29 20:15:02,027 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:02,027 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:02,027 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:02,027 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:02,027 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:02,027 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:02,027 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46958
2020-03-29 20:15:02,282 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:02,282 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:02,282 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:02,282 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:02,282 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:02,283 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:02,283 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:02,283 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:02,283 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:02,283 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:02,283 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:02,283 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:02,283 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:02,284 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:02,284 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:02,284 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:02,284 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:02,284 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:02,284 TRACE [_] NetStream::read()
2020-03-29 20:15:02,284 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:02,284 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:02,285 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:02,285 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:02,285 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:02,285 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:02,285 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:02,285 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:02,285 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:02,285 TRACE [_] DataStream::read()
2020-03-29 20:15:02,285 TRACE [_] DataStream::read()
2020-03-29 20:15:02,285 TRACE [_] DataStream::read()
2020-03-29 20:15:02,285 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:02,286 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46960 and port 5002
2020-03-29 20:15:02,286 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:02,286 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:02,286 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:02,286 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:02,286 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:02,286 INFO  [_] Outcome: Success
2020-03-29 20:15:02,287 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:02,287 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:02,287 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:02,287 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:02,287 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:02,287 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:02,287 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:02,287 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 2, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 287852944 })) )
2020-03-29 20:15:02,287 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:02 GMT
, }]
2020-03-29 20:15:02,288 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:02,288 TRACE [hyper::server::response] ending
2020-03-29 20:15:02,288 INFO  [_] Response succeeded.
2020-03-29 20:15:02,288 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:02,288 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46960
2020-03-29 20:15:02,288 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:02,288 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:02,288 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:02,288 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:02,289 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:02,289 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:02,289 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46960
2020-03-29 20:15:02,547 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:02,547 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:02,547 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:02,548 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:02,548 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:02,548 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:02,548 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:02,548 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:02,549 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:02,549 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:02,549 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:02,549 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:02,549 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:02,549 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:02,549 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:02,549 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:02,549 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:02,550 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:02,550 TRACE [_] NetStream::read()
2020-03-29 20:15:02,550 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:02,550 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:02,550 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:02,550 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:02,550 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:02,550 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:02,550 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:02,550 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:02,550 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:02,550 TRACE [_] DataStream::read()
2020-03-29 20:15:02,550 TRACE [_] DataStream::read()
2020-03-29 20:15:02,550 TRACE [_] DataStream::read()
2020-03-29 20:15:02,550 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:02,551 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46962 and port 5002
2020-03-29 20:15:02,551 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:02,551 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:02,551 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:02,551 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:02,551 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:02,551 INFO  [_] Outcome: Success
2020-03-29 20:15:02,551 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:02,551 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:02,551 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:02,552 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:02,552 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:02,552 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:02,552 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:02,552 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 2, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 552372046 })) )
2020-03-29 20:15:02,552 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:02 GMT
, }]
2020-03-29 20:15:02,552 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:02,552 TRACE [hyper::server::response] ending
2020-03-29 20:15:02,552 INFO  [_] Response succeeded.
2020-03-29 20:15:02,552 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:02,552 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46962
2020-03-29 20:15:02,553 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:02,553 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:02,553 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:02,553 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:02,553 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:02,553 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:02,553 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46962
2020-03-29 20:15:02,809 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:02,809 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:02,809 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:02,811 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:02,811 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:02,811 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:02,811 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:02,811 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:02,811 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:02,811 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:02,811 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:02,811 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:02,811 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:02,811 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:02,811 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:02,812 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:02,812 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:02,812 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:02,812 TRACE [_] NetStream::read()
2020-03-29 20:15:02,812 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:02,812 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:02,812 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:02,812 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:02,812 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:02,812 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:02,812 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:02,813 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:02,813 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:02,813 TRACE [_] DataStream::read()
2020-03-29 20:15:02,813 TRACE [_] DataStream::read()
2020-03-29 20:15:02,813 TRACE [_] DataStream::read()
2020-03-29 20:15:02,813 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:02,813 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46964 and port 5002
2020-03-29 20:15:02,813 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:02,813 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:02,813 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:02,814 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:02,814 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:02,814 INFO  [_] Outcome: Success
2020-03-29 20:15:02,814 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:02,814 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:02,814 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:02,814 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:02,814 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:02,814 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:02,814 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:02,814 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 2, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 814845449 })) )
2020-03-29 20:15:02,814 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:02 GMT
, }]
2020-03-29 20:15:02,815 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:02,815 TRACE [hyper::server::response] ending
2020-03-29 20:15:02,815 INFO  [_] Response succeeded.
2020-03-29 20:15:02,815 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:02,815 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46964
2020-03-29 20:15:02,815 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:02,815 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:02,815 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:02,815 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:02,815 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:02,815 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:02,815 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46964
2020-03-29 20:15:03,071 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:03,071 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:03,071 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:03,072 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:03,072 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:03,072 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:03,072 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:03,072 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:03,072 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:03,072 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:03,072 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:03,072 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:03,073 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:03,073 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:03,073 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:03,073 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:03,073 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:03,073 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:03,073 TRACE [_] NetStream::read()
2020-03-29 20:15:03,073 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:03,073 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:03,074 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:03,074 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:03,074 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:03,074 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:03,074 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:03,074 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:03,074 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:03,074 TRACE [_] DataStream::read()
2020-03-29 20:15:03,074 TRACE [_] DataStream::read()
2020-03-29 20:15:03,074 TRACE [_] DataStream::read()
2020-03-29 20:15:03,074 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:03,074 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46966 and port 5002
2020-03-29 20:15:03,074 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:03,075 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:03,075 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:03,075 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:03,075 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:03,075 INFO  [_] Outcome: Success
2020-03-29 20:15:03,075 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:03,075 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:03,076 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:03,076 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:03,076 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:03,076 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:03,076 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:03,076 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 3, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 76467064 })) )
2020-03-29 20:15:03,076 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:03 GMT
, }]
2020-03-29 20:15:03,076 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:03,076 TRACE [hyper::server::response] ending
2020-03-29 20:15:03,076 INFO  [_] Response succeeded.
2020-03-29 20:15:03,077 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:03,077 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46966
2020-03-29 20:15:03,077 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:03,077 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:03,077 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:03,077 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:03,077 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:03,077 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:03,077 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46966
2020-03-29 20:15:03,151 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:03,332 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:03,332 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:03,332 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:03,332 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:03,332 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:03,332 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:03,332 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:03,332 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:03,332 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:03,332 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:03,333 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:03,333 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:03,333 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:03,333 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:03,333 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:03,333 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:03,333 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:03,333 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:03,333 TRACE [_] NetStream::read()
2020-03-29 20:15:03,334 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:03,334 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:03,334 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:03,334 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:03,334 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:03,334 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:03,334 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:03,334 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:03,334 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:03,334 TRACE [_] DataStream::read()
2020-03-29 20:15:03,334 TRACE [_] DataStream::read()
2020-03-29 20:15:03,334 TRACE [_] DataStream::read()
2020-03-29 20:15:03,334 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:03,335 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46968 and port 5002
2020-03-29 20:15:03,335 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:03,335 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:03,335 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:03,335 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:03,335 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:03,335 INFO  [_] Outcome: Success
2020-03-29 20:15:03,335 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:03,335 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:03,336 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:03,336 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:03,336 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:03,336 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:03,336 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:03,336 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 3, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 336489114 })) )
2020-03-29 20:15:03,336 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:03 GMT
, }]
2020-03-29 20:15:03,336 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:03,336 TRACE [hyper::server::response] ending
2020-03-29 20:15:03,336 INFO  [_] Response succeeded.
2020-03-29 20:15:03,337 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:03,337 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46968
2020-03-29 20:15:03,337 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:03,337 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:03,337 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:03,337 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:03,337 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:03,337 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:03,337 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46968
2020-03-29 20:15:03,535 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:03,577 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:03,577 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:03,577 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:03,577 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:03,595 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:03,595 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:03,595 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:03,596 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:03,596 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:03,596 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:03,596 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:03,596 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:03,596 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:03,596 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:03,596 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:03,596 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:03,596 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:03,596 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:03,597 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:03,597 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:03,597 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:03,597 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:03,597 TRACE [_] NetStream::read()
2020-03-29 20:15:03,597 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:03,597 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:03,597 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:03,597 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:03,597 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:03,598 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:03,598 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:03,598 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:03,598 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:03,598 TRACE [_] DataStream::read()
2020-03-29 20:15:03,598 TRACE [_] DataStream::read()
2020-03-29 20:15:03,598 TRACE [_] DataStream::read()
2020-03-29 20:15:03,598 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:03,598 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46970 and port 5002
2020-03-29 20:15:03,598 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:03,598 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:03,599 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:03,599 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:03,599 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:03,599 INFO  [_] Outcome: Success
2020-03-29 20:15:03,599 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:03,599 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:03,599 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:03,599 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:03,599 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:03,599 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:03,600 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:03,600 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 3, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 600073843 })) )
2020-03-29 20:15:03,600 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:03 GMT
, }]
2020-03-29 20:15:03,600 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:03,600 TRACE [hyper::server::response] ending
2020-03-29 20:15:03,600 INFO  [_] Response succeeded.
2020-03-29 20:15:03,600 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:03,600 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46970
2020-03-29 20:15:03,600 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:03,600 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:03,600 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:03,600 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:03,600 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:03,601 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:03,601 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46970
2020-03-29 20:15:03,858 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:03,858 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:03,858 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:03,859 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:03,860 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:03,860 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:03,860 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:03,860 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:03,860 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:03,860 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:03,860 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:03,860 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:03,860 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:03,860 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:03,860 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:03,861 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:03,861 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:03,861 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:03,861 TRACE [_] NetStream::read()
2020-03-29 20:15:03,861 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:03,861 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:03,861 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:03,861 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:03,861 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:03,861 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:03,861 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:03,862 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:03,862 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:03,862 TRACE [_] DataStream::read()
2020-03-29 20:15:03,862 TRACE [_] DataStream::read()
2020-03-29 20:15:03,862 TRACE [_] DataStream::read()
2020-03-29 20:15:03,862 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:03,862 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46972 and port 5002
2020-03-29 20:15:03,862 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:03,862 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:03,862 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:03,863 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:03,863 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:03,863 INFO  [_] Outcome: Success
2020-03-29 20:15:03,863 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:03,863 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:03,863 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:03,863 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:03,863 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:03,863 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:03,863 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:03,863 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 3, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 863897326 })) )
2020-03-29 20:15:03,863 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:03 GMT
, }]
2020-03-29 20:15:03,864 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:03,864 TRACE [hyper::server::response] ending
2020-03-29 20:15:03,864 INFO  [_] Response succeeded.
2020-03-29 20:15:03,864 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:03,864 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46972
2020-03-29 20:15:03,864 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:03,864 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:03,864 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:03,864 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:03,864 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:03,864 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:03,864 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46972
2020-03-29 20:15:04,119 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:04,119 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:04,119 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:04,120 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:04,120 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:04,120 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:04,120 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:04,120 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:04,120 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:04,120 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:04,120 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:04,120 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:04,120 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:04,121 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:04,121 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:04,121 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:04,121 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:04,121 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:04,121 TRACE [_] NetStream::read()
2020-03-29 20:15:04,121 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:04,121 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:04,121 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:04,121 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:04,121 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:04,122 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:04,122 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:04,122 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:04,122 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:04,122 TRACE [_] DataStream::read()
2020-03-29 20:15:04,122 TRACE [_] DataStream::read()
2020-03-29 20:15:04,122 TRACE [_] DataStream::read()
2020-03-29 20:15:04,122 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:04,122 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46974 and port 5002
2020-03-29 20:15:04,122 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:04,122 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:04,122 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:04,122 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:04,122 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:04,123 INFO  [_] Outcome: Success
2020-03-29 20:15:04,123 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:04,123 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:04,123 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:04,123 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:04,123 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:04,123 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:04,123 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:04,123 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 4, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 123789083 })) )
2020-03-29 20:15:04,123 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:04 GMT
, }]
2020-03-29 20:15:04,124 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:04,124 TRACE [hyper::server::response] ending
2020-03-29 20:15:04,124 INFO  [_] Response succeeded.
2020-03-29 20:15:04,124 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:04,124 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46974
2020-03-29 20:15:04,124 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:04,124 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:04,124 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:04,124 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:04,124 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:04,124 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:04,124 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46974
2020-03-29 20:15:04,382 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:04,382 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:04,382 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:04,383 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:04,383 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:04,383 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:04,383 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:04,384 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:04,384 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:04,384 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:04,384 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:04,384 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:04,384 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:04,384 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:04,384 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:04,384 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:04,384 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:04,385 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:04,385 TRACE [_] NetStream::read()
2020-03-29 20:15:04,385 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:04,385 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:04,385 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:04,385 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:04,385 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:04,385 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:04,385 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:04,385 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:04,385 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:04,385 TRACE [_] DataStream::read()
2020-03-29 20:15:04,385 TRACE [_] DataStream::read()
2020-03-29 20:15:04,385 TRACE [_] DataStream::read()
2020-03-29 20:15:04,386 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:04,386 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46976 and port 5002
2020-03-29 20:15:04,386 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:04,386 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:04,386 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:04,386 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:04,386 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:04,386 INFO  [_] Outcome: Success
2020-03-29 20:15:04,386 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:04,387 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:04,387 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:04,387 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:04,387 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:04,387 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:04,387 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:04,387 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 4, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 387496090 })) )
2020-03-29 20:15:04,387 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:04 GMT
, }]
2020-03-29 20:15:04,387 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:04,387 TRACE [hyper::server::response] ending
2020-03-29 20:15:04,387 INFO  [_] Response succeeded.
2020-03-29 20:15:04,388 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:04,388 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46976
2020-03-29 20:15:04,388 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:04,388 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:04,388 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:04,388 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:04,388 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:04,388 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:04,388 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46976
2020-03-29 20:15:04,643 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:04,643 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:04,644 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:04,644 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:04,644 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:04,644 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:04,644 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:04,644 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:04,644 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:04,644 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:04,644 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:04,644 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:04,645 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:04,645 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:04,645 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:04,645 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:04,645 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:04,645 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:04,645 TRACE [_] NetStream::read()
2020-03-29 20:15:04,645 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:04,645 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:04,646 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:04,646 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:04,646 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:04,646 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:04,646 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:04,646 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:04,646 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:04,646 TRACE [_] DataStream::read()
2020-03-29 20:15:04,646 TRACE [_] DataStream::read()
2020-03-29 20:15:04,646 TRACE [_] DataStream::read()
2020-03-29 20:15:04,646 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:04,646 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46978 and port 5002
2020-03-29 20:15:04,646 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:04,647 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:04,647 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:04,647 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:04,647 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:04,647 INFO  [_] Outcome: Success
2020-03-29 20:15:04,647 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:04,647 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:04,647 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:04,648 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:04,648 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:04,648 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:04,648 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:04,648 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 4, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 648381672 })) )
2020-03-29 20:15:04,648 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:04 GMT
, }]
2020-03-29 20:15:04,648 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:04,648 TRACE [hyper::server::response] ending
2020-03-29 20:15:04,648 INFO  [_] Response succeeded.
2020-03-29 20:15:04,648 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:04,649 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46978
2020-03-29 20:15:04,649 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:04,649 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:04,649 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:04,649 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:04,649 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:04,649 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:04,649 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46978
2020-03-29 20:15:04,906 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:04,906 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:04,906 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:04,907 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:04,907 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:04,907 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:04,907 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:04,907 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:04,908 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:04,908 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:04,908 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:04,908 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:04,908 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:04,908 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:04,908 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:04,908 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:04,908 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:04,909 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:04,909 TRACE [_] NetStream::read()
2020-03-29 20:15:04,909 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:04,909 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:04,909 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:04,909 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:04,909 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:04,909 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:04,909 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:04,909 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:04,909 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:04,909 TRACE [_] DataStream::read()
2020-03-29 20:15:04,909 TRACE [_] DataStream::read()
2020-03-29 20:15:04,909 TRACE [_] DataStream::read()
2020-03-29 20:15:04,910 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:04,910 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46980 and port 5002
2020-03-29 20:15:04,910 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:04,910 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:04,910 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:04,910 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:04,910 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:04,910 INFO  [_] Outcome: Success
2020-03-29 20:15:04,910 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:04,911 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:04,911 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:04,911 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:04,911 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:04,911 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:04,911 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:04,911 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 4, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 911498357 })) )
2020-03-29 20:15:04,911 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:04 GMT
, }]
2020-03-29 20:15:04,911 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:04,911 TRACE [hyper::server::response] ending
2020-03-29 20:15:04,911 INFO  [_] Response succeeded.
2020-03-29 20:15:04,912 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:04,912 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46980
2020-03-29 20:15:04,912 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:04,912 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:04,912 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:04,912 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:04,912 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:04,912 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:04,912 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46980
2020-03-29 20:15:05,167 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:05,167 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:05,167 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:05,168 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:05,168 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:05,168 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:05,168 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:05,168 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:05,168 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:05,168 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:05,168 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:05,168 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:05,168 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:05,168 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:05,168 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:05,168 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:05,169 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:05,169 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:05,169 TRACE [_] NetStream::read()
2020-03-29 20:15:05,169 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:05,169 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:05,169 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:05,169 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:05,169 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:05,169 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:05,169 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:05,169 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:05,169 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:05,169 TRACE [_] DataStream::read()
2020-03-29 20:15:05,169 TRACE [_] DataStream::read()
2020-03-29 20:15:05,169 TRACE [_] DataStream::read()
2020-03-29 20:15:05,169 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:05,169 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46982 and port 5002
2020-03-29 20:15:05,169 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:05,169 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:05,169 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:05,169 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:05,169 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:05,170 INFO  [_] Outcome: Success
2020-03-29 20:15:05,170 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:05,170 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:05,170 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:05,170 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:05,170 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:05,170 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:05,170 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:05,170 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 5, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 170332480 })) )
2020-03-29 20:15:05,170 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:05 GMT
, }]
2020-03-29 20:15:05,170 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:05,170 TRACE [hyper::server::response] ending
2020-03-29 20:15:05,170 INFO  [_] Response succeeded.
2020-03-29 20:15:05,170 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:05,170 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46982
2020-03-29 20:15:05,170 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:05,170 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:05,170 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:05,170 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:05,170 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:05,170 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:05,170 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46982
2020-03-29 20:15:05,430 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:05,430 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:05,430 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:05,431 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:05,431 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:05,431 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:05,431 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:05,431 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:05,432 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:05,432 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:05,432 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:05,432 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:05,432 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:05,432 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:05,432 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:05,432 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:05,432 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:05,432 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:05,433 TRACE [_] NetStream::read()
2020-03-29 20:15:05,433 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:05,433 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:05,433 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:05,433 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:05,433 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:05,433 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:05,433 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:05,433 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:05,433 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:05,433 TRACE [_] DataStream::read()
2020-03-29 20:15:05,433 TRACE [_] DataStream::read()
2020-03-29 20:15:05,433 TRACE [_] DataStream::read()
2020-03-29 20:15:05,433 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:05,434 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46984 and port 5002
2020-03-29 20:15:05,434 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:05,434 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:05,434 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:05,434 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:05,434 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:05,434 INFO  [_] Outcome: Success
2020-03-29 20:15:05,434 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:05,434 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:05,435 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:05,435 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:05,435 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:05,435 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:05,435 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:05,435 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 5, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 435443979 })) )
2020-03-29 20:15:05,435 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:05 GMT
, }]
2020-03-29 20:15:05,435 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:05,435 TRACE [hyper::server::response] ending
2020-03-29 20:15:05,435 INFO  [_] Response succeeded.
2020-03-29 20:15:05,435 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:05,436 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46984
2020-03-29 20:15:05,436 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:05,436 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:05,436 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:05,436 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:05,436 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:05,436 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:05,436 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46984
2020-03-29 20:15:05,693 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:05,693 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:05,693 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:05,694 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:05,694 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:05,694 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:05,694 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:05,694 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:05,694 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:05,694 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:05,694 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:05,695 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:05,695 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:05,695 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:05,695 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:05,695 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:05,695 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:05,695 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:05,695 TRACE [_] NetStream::read()
2020-03-29 20:15:05,695 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:05,695 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:05,696 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:05,696 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:05,696 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:05,696 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:05,696 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:05,696 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:05,696 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:05,696 TRACE [_] DataStream::read()
2020-03-29 20:15:05,696 TRACE [_] DataStream::read()
2020-03-29 20:15:05,696 TRACE [_] DataStream::read()
2020-03-29 20:15:05,696 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:05,696 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46986 and port 5002
2020-03-29 20:15:05,696 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:05,697 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:05,697 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:05,697 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:05,697 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:05,697 INFO  [_] Outcome: Success
2020-03-29 20:15:05,697 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:05,697 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:05,697 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:05,697 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:05,697 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:05,698 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:05,698 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:05,698 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 5, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 698179633 })) )
2020-03-29 20:15:05,698 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:05 GMT
, }]
2020-03-29 20:15:05,698 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:05,698 TRACE [hyper::server::response] ending
2020-03-29 20:15:05,698 INFO  [_] Response succeeded.
2020-03-29 20:15:05,698 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:05,698 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46986
2020-03-29 20:15:05,698 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:05,698 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:05,699 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:05,699 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:05,699 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:05,699 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:05,699 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46986
2020-03-29 20:15:05,955 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:05,955 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:05,955 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:05,955 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:05,955 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:05,955 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:05,956 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:05,956 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:05,956 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:05,956 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:05,956 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:05,956 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:05,956 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:05,956 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:05,956 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:05,956 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:05,957 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:05,957 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:05,957 TRACE [_] NetStream::read()
2020-03-29 20:15:05,957 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:05,957 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:05,957 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:05,957 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:05,957 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:05,957 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:05,957 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:05,957 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:05,957 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:05,958 TRACE [_] DataStream::read()
2020-03-29 20:15:05,958 TRACE [_] DataStream::read()
2020-03-29 20:15:05,958 TRACE [_] DataStream::read()
2020-03-29 20:15:05,958 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:05,958 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46988 and port 5002
2020-03-29 20:15:05,958 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:05,958 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:05,958 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:05,958 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:05,958 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:05,959 INFO  [_] Outcome: Success
2020-03-29 20:15:05,959 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:05,959 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:05,959 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:05,959 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:05,959 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:05,959 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:05,959 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:05,959 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 5, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 959861571 })) )
2020-03-29 20:15:05,959 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:05 GMT
, }]
2020-03-29 20:15:05,960 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:05,960 TRACE [hyper::server::response] ending
2020-03-29 20:15:05,960 INFO  [_] Response succeeded.
2020-03-29 20:15:05,960 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:05,960 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46988
2020-03-29 20:15:05,960 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:05,960 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:05,960 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:05,960 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:05,960 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:05,960 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:05,960 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46988
2020-03-29 20:15:06,218 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:06,218 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:06,218 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:06,218 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:06,219 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:06,219 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:06,219 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:06,219 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:06,219 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:06,219 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:06,219 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:06,219 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:06,219 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:06,219 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:06,219 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:06,220 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:06,220 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:06,220 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:06,220 TRACE [_] NetStream::read()
2020-03-29 20:15:06,220 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:06,220 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:06,220 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:06,220 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:06,220 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:06,220 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:06,221 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:06,221 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:06,221 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:06,221 TRACE [_] DataStream::read()
2020-03-29 20:15:06,221 TRACE [_] DataStream::read()
2020-03-29 20:15:06,221 TRACE [_] DataStream::read()
2020-03-29 20:15:06,221 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:06,221 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46990 and port 5002
2020-03-29 20:15:06,221 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:06,221 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:06,222 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:06,222 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:06,222 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:06,222 INFO  [_] Outcome: Success
2020-03-29 20:15:06,222 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:06,222 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:06,222 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:06,222 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:06,222 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:06,223 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:06,223 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:06,223 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 6, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 223176116 })) )
2020-03-29 20:15:06,223 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:06 GMT
, }]
2020-03-29 20:15:06,223 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:06,223 TRACE [hyper::server::response] ending
2020-03-29 20:15:06,223 INFO  [_] Response succeeded.
2020-03-29 20:15:06,223 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:06,223 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46990
2020-03-29 20:15:06,223 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:06,223 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:06,224 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:06,224 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:06,224 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:06,224 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:06,224 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46990
2020-03-29 20:15:06,480 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:06,480 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:06,480 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:06,481 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:06,481 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:06,481 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:06,481 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:06,481 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:06,481 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:06,481 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:06,481 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:06,482 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:06,482 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:06,482 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:06,482 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:06,482 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:06,482 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:06,482 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:06,482 TRACE [_] NetStream::read()
2020-03-29 20:15:06,482 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:06,483 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:06,483 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:06,483 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:06,483 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:06,483 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:06,483 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:06,483 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:06,483 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:06,483 TRACE [_] DataStream::read()
2020-03-29 20:15:06,483 TRACE [_] DataStream::read()
2020-03-29 20:15:06,483 TRACE [_] DataStream::read()
2020-03-29 20:15:06,483 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:06,483 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46992 and port 5002
2020-03-29 20:15:06,484 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:06,484 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:06,484 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:06,484 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:06,484 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:06,484 INFO  [_] Outcome: Success
2020-03-29 20:15:06,484 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:06,485 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:06,485 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:06,485 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:06,485 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:06,485 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:06,485 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:06,485 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 6, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 485544224 })) )
2020-03-29 20:15:06,485 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:06 GMT
, }]
2020-03-29 20:15:06,485 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:06,485 TRACE [hyper::server::response] ending
2020-03-29 20:15:06,486 INFO  [_] Response succeeded.
2020-03-29 20:15:06,486 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:06,486 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46992
2020-03-29 20:15:06,486 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:06,486 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:06,486 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:06,486 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:06,486 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:06,486 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:06,486 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46992
2020-03-29 20:15:06,743 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:06,743 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:06,743 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:06,744 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:06,744 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:06,744 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:06,744 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:06,744 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:06,744 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:06,744 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:06,744 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:06,744 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:06,744 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:06,745 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:06,745 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:06,745 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:06,745 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:06,745 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:06,745 TRACE [_] NetStream::read()
2020-03-29 20:15:06,745 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:06,745 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:06,745 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:06,745 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:06,746 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:06,746 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:06,746 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:06,746 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:06,746 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:06,746 TRACE [_] DataStream::read()
2020-03-29 20:15:06,746 TRACE [_] DataStream::read()
2020-03-29 20:15:06,746 TRACE [_] DataStream::read()
2020-03-29 20:15:06,746 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:06,746 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46994 and port 5002
2020-03-29 20:15:06,746 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:06,747 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:06,747 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:06,747 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:06,747 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:06,747 INFO  [_] Outcome: Success
2020-03-29 20:15:06,747 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:06,748 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:06,748 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:06,748 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:06,748 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:06,748 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:06,748 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:06,748 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 6, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 748514998 })) )
2020-03-29 20:15:06,748 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:06 GMT
, }]
2020-03-29 20:15:06,748 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:06,748 TRACE [hyper::server::response] ending
2020-03-29 20:15:06,749 INFO  [_] Response succeeded.
2020-03-29 20:15:06,749 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:06,749 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46994
2020-03-29 20:15:06,749 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:06,749 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:06,749 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:06,749 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:06,749 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:06,749 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:06,749 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46994
2020-03-29 20:15:07,004 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:07,004 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:07,004 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:07,004 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:07,004 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:07,005 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:07,005 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:07,005 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:07,005 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:07,005 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:07,005 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:07,005 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:07,005 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:07,005 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:07,006 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:07,006 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:07,006 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:07,006 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:07,006 TRACE [_] NetStream::read()
2020-03-29 20:15:07,006 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:07,006 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:07,007 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:07,007 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:07,007 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:07,007 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:07,007 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:07,007 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:07,007 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:07,007 TRACE [_] DataStream::read()
2020-03-29 20:15:07,007 TRACE [_] DataStream::read()
2020-03-29 20:15:07,007 TRACE [_] DataStream::read()
2020-03-29 20:15:07,007 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:07,008 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46996 and port 5002
2020-03-29 20:15:07,008 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:07,008 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:07,008 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:07,008 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:07,008 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:07,008 INFO  [_] Outcome: Success
2020-03-29 20:15:07,009 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:07,009 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:07,009 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:07,009 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:07,009 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:07,009 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:07,009 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:07,009 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 7, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 9890294 })) )
2020-03-29 20:15:07,010 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:07 GMT
, }]
2020-03-29 20:15:07,010 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:07,010 TRACE [hyper::server::response] ending
2020-03-29 20:15:07,010 INFO  [_] Response succeeded.
2020-03-29 20:15:07,010 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:07,010 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46996
2020-03-29 20:15:07,010 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:07,010 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:07,010 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:07,011 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:07,011 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:07,011 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:07,011 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46996
2020-03-29 20:15:07,247 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:07,267 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:07,268 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:07,268 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:07,268 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:07,268 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:07,268 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:07,268 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:07,268 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:07,268 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:07,269 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:07,269 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:07,269 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:07,269 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:07,269 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:07,269 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:07,269 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:07,269 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:07,269 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:07,270 TRACE [_] NetStream::read()
2020-03-29 20:15:07,270 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:07,270 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:07,270 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:07,270 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:07,270 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:07,270 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:07,270 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:07,270 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:07,270 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:07,270 TRACE [_] DataStream::read()
2020-03-29 20:15:07,270 TRACE [_] DataStream::read()
2020-03-29 20:15:07,270 TRACE [_] DataStream::read()
2020-03-29 20:15:07,271 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:07,271 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:46998 and port 5002
2020-03-29 20:15:07,271 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:07,271 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:07,271 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:07,271 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:07,271 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:07,271 INFO  [_] Outcome: Success
2020-03-29 20:15:07,271 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:07,272 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:07,272 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:07,272 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:07,272 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:07,272 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:07,272 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:07,272 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 7, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 272549607 })) )
2020-03-29 20:15:07,272 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:07 GMT
, }]
2020-03-29 20:15:07,272 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:07,272 TRACE [hyper::server::response] ending
2020-03-29 20:15:07,273 INFO  [_] Response succeeded.
2020-03-29 20:15:07,273 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:07,273 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:46998
2020-03-29 20:15:07,273 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:07,273 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:07,273 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:07,273 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:07,273 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:07,273 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:07,273 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:46998
2020-03-29 20:15:07,530 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:07,531 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:07,531 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:07,532 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:07,532 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:07,532 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:07,532 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:07,533 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:07,533 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:07,533 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:07,533 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:07,533 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:07,533 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:07,533 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:07,533 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:07,533 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:07,534 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:07,534 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:07,534 TRACE [_] NetStream::read()
2020-03-29 20:15:07,534 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:07,534 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:07,534 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:07,534 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:07,534 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:07,534 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:07,534 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:07,534 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:07,534 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:07,534 TRACE [_] DataStream::read()
2020-03-29 20:15:07,534 TRACE [_] DataStream::read()
2020-03-29 20:15:07,534 TRACE [_] DataStream::read()
2020-03-29 20:15:07,534 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:07,534 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47000 and port 5002
2020-03-29 20:15:07,534 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:07,534 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:07,534 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:07,534 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:07,535 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:07,535 INFO  [_] Outcome: Success
2020-03-29 20:15:07,535 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:07,535 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:07,535 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:07,535 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:07,535 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:07,535 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:07,535 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:07,535 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 7, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 535389456 })) )
2020-03-29 20:15:07,535 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:07 GMT
, }]
2020-03-29 20:15:07,535 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:07,535 TRACE [hyper::server::response] ending
2020-03-29 20:15:07,535 INFO  [_] Response succeeded.
2020-03-29 20:15:07,535 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:07,535 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47000
2020-03-29 20:15:07,535 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:07,535 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:07,535 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:07,535 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:07,535 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:07,535 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:07,536 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47000
2020-03-29 20:15:07,793 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:07,793 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:07,793 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:07,794 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:07,794 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:07,794 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:07,795 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:07,795 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:07,795 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:07,795 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:07,795 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:07,795 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:07,795 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:07,795 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:07,795 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:07,795 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:07,796 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:07,796 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:07,796 TRACE [_] NetStream::read()
2020-03-29 20:15:07,796 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:07,796 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:07,796 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:07,796 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:07,796 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:07,796 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:07,796 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:07,796 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:07,796 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:07,796 TRACE [_] DataStream::read()
2020-03-29 20:15:07,797 TRACE [_] DataStream::read()
2020-03-29 20:15:07,797 TRACE [_] DataStream::read()
2020-03-29 20:15:07,797 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:07,797 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47002 and port 5002
2020-03-29 20:15:07,797 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:07,797 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:07,797 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:07,797 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:07,797 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:07,798 INFO  [_] Outcome: Success
2020-03-29 20:15:07,798 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:07,798 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:07,798 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:07,798 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:07,798 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:07,798 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:07,798 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:07,798 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 7, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 798755908 })) )
2020-03-29 20:15:07,798 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:07 GMT
, }]
2020-03-29 20:15:07,799 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:07,799 TRACE [hyper::server::response] ending
2020-03-29 20:15:07,799 INFO  [_] Response succeeded.
2020-03-29 20:15:07,799 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:07,799 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47002
2020-03-29 20:15:07,799 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:07,799 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:07,799 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:07,799 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:07,799 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:07,799 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:07,799 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47002
2020-03-29 20:15:08,056 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:08,056 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:08,056 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:08,056 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:08,057 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:08,057 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:08,057 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:08,057 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:08,057 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:08,057 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:08,057 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:08,057 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:08,057 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:08,057 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:08,057 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:08,058 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:08,058 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:08,058 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:08,058 TRACE [_] NetStream::read()
2020-03-29 20:15:08,058 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:08,058 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:08,058 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:08,058 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:08,058 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:08,058 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:08,059 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:08,059 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:08,059 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:08,059 TRACE [_] DataStream::read()
2020-03-29 20:15:08,059 TRACE [_] DataStream::read()
2020-03-29 20:15:08,059 TRACE [_] DataStream::read()
2020-03-29 20:15:08,059 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:08,059 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47004 and port 5002
2020-03-29 20:15:08,059 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:08,059 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:08,059 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:08,060 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:08,060 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:08,060 INFO  [_] Outcome: Success
2020-03-29 20:15:08,060 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:08,060 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:08,060 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:08,060 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:08,060 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:08,060 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:08,060 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:08,061 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 8, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 61024431 })) )
2020-03-29 20:15:08,061 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:08 GMT
, }]
2020-03-29 20:15:08,061 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:08,061 TRACE [hyper::server::response] ending
2020-03-29 20:15:08,061 INFO  [_] Response succeeded.
2020-03-29 20:15:08,061 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:08,061 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47004
2020-03-29 20:15:08,061 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:08,061 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:08,061 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:08,061 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:08,062 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:08,062 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:08,062 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47004
2020-03-29 20:15:08,318 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:08,319 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:08,319 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:08,319 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:08,319 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:08,319 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:08,320 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:08,320 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:08,320 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:08,320 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:08,320 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:08,320 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:08,320 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:08,320 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:08,320 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:08,320 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:08,321 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:08,321 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:08,321 TRACE [_] NetStream::read()
2020-03-29 20:15:08,321 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:08,321 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:08,321 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:08,321 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:08,321 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:08,321 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:08,321 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:08,321 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:08,321 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:08,321 TRACE [_] DataStream::read()
2020-03-29 20:15:08,321 TRACE [_] DataStream::read()
2020-03-29 20:15:08,322 TRACE [_] DataStream::read()
2020-03-29 20:15:08,322 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:08,322 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47006 and port 5002
2020-03-29 20:15:08,322 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:08,322 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:08,322 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:08,322 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:08,322 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:08,322 INFO  [_] Outcome: Success
2020-03-29 20:15:08,323 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:08,323 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:08,323 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:08,323 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:08,323 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:08,323 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:08,323 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:08,323 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 8, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 323648469 })) )
2020-03-29 20:15:08,323 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:08 GMT
, }]
2020-03-29 20:15:08,323 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:08,323 TRACE [hyper::server::response] ending
2020-03-29 20:15:08,324 INFO  [_] Response succeeded.
2020-03-29 20:15:08,324 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:08,324 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47006
2020-03-29 20:15:08,324 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:08,324 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:08,324 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:08,324 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:08,324 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:08,324 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:08,324 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47006
2020-03-29 20:15:08,527 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:08,576 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:08,576 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:08,577 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:08,577 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:08,581 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:08,581 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:08,581 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:08,581 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:08,581 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:08,581 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:08,581 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:08,581 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:08,581 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:08,581 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:08,582 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:08,582 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:08,582 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:08,582 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:08,582 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:08,582 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:08,582 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:08,582 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:08,582 TRACE [_] NetStream::read()
2020-03-29 20:15:08,583 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:08,583 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:08,583 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:08,583 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:08,583 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:08,583 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:08,583 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:08,583 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:08,583 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:08,583 TRACE [_] DataStream::read()
2020-03-29 20:15:08,583 TRACE [_] DataStream::read()
2020-03-29 20:15:08,583 TRACE [_] DataStream::read()
2020-03-29 20:15:08,583 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:08,584 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47008 and port 5002
2020-03-29 20:15:08,584 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:08,584 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:08,584 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:08,584 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:08,584 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:08,584 INFO  [_] Outcome: Success
2020-03-29 20:15:08,584 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:08,584 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:08,585 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:08,585 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:08,585 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:08,585 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:08,585 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:08,585 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 8, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 585514471 })) )
2020-03-29 20:15:08,585 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:08 GMT
, }]
2020-03-29 20:15:08,585 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:08,585 TRACE [hyper::server::response] ending
2020-03-29 20:15:08,586 INFO  [_] Response succeeded.
2020-03-29 20:15:08,586 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:08,586 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47008
2020-03-29 20:15:08,586 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:08,586 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:08,586 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:08,586 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:08,586 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:08,586 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:08,586 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47008
2020-03-29 20:15:08,843 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:08,843 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:08,843 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:08,844 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:08,844 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:08,844 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:08,844 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:08,844 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:08,844 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:08,844 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:08,844 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:08,844 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:08,844 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:08,845 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:08,845 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:08,845 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:08,845 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:08,845 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:08,845 TRACE [_] NetStream::read()
2020-03-29 20:15:08,845 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:08,845 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:08,845 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:08,845 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:08,846 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:08,846 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:08,846 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:08,846 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:08,846 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:08,846 TRACE [_] DataStream::read()
2020-03-29 20:15:08,846 TRACE [_] DataStream::read()
2020-03-29 20:15:08,846 TRACE [_] DataStream::read()
2020-03-29 20:15:08,846 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:08,846 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47010 and port 5002
2020-03-29 20:15:08,846 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:08,846 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:08,847 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:08,847 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:08,847 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:08,847 INFO  [_] Outcome: Success
2020-03-29 20:15:08,847 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:08,847 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:08,847 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:08,847 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:08,847 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:08,847 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:08,847 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:08,848 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 8, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 848035496 })) )
2020-03-29 20:15:08,848 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:08 GMT
, }]
2020-03-29 20:15:08,848 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:08,848 TRACE [hyper::server::response] ending
2020-03-29 20:15:08,848 INFO  [_] Response succeeded.
2020-03-29 20:15:08,848 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:08,848 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47010
2020-03-29 20:15:08,848 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:08,848 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:08,848 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:08,848 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:08,849 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:08,849 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:08,849 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47010
2020-03-29 20:15:09,106 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:09,106 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:09,106 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:09,108 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:09,108 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:09,108 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:09,108 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:09,108 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:09,108 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:09,108 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:09,108 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:09,108 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:09,108 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:09,108 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:09,109 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:09,109 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:09,109 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:09,109 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:09,109 TRACE [_] NetStream::read()
2020-03-29 20:15:09,109 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:09,109 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:09,109 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:09,109 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:09,109 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:09,109 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:09,110 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:09,110 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:09,110 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:09,110 TRACE [_] DataStream::read()
2020-03-29 20:15:09,110 TRACE [_] DataStream::read()
2020-03-29 20:15:09,110 TRACE [_] DataStream::read()
2020-03-29 20:15:09,110 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:09,110 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47012 and port 5002
2020-03-29 20:15:09,110 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:09,110 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:09,110 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:09,110 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:09,110 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:09,111 INFO  [_] Outcome: Success
2020-03-29 20:15:09,111 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:09,111 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:09,111 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:09,111 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:09,111 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:09,111 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:09,111 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:09,111 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 9, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 111790093 })) )
2020-03-29 20:15:09,111 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:09 GMT
, }]
2020-03-29 20:15:09,112 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:09,112 TRACE [hyper::server::response] ending
2020-03-29 20:15:09,112 INFO  [_] Response succeeded.
2020-03-29 20:15:09,112 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:09,112 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47012
2020-03-29 20:15:09,112 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:09,112 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:09,112 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:09,112 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:09,112 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:09,112 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:09,112 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47012
2020-03-29 20:15:09,368 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:09,368 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:09,368 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:09,369 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:09,369 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:09,369 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:09,369 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:09,369 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:09,369 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:09,369 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:09,369 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:09,369 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:09,370 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:09,370 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:09,370 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:09,370 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:09,370 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:09,370 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:09,370 TRACE [_] NetStream::read()
2020-03-29 20:15:09,370 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:09,370 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:09,370 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:09,371 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:09,371 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:09,371 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:09,371 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:09,371 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:09,371 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:09,371 TRACE [_] DataStream::read()
2020-03-29 20:15:09,371 TRACE [_] DataStream::read()
2020-03-29 20:15:09,371 TRACE [_] DataStream::read()
2020-03-29 20:15:09,371 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:09,371 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47014 and port 5002
2020-03-29 20:15:09,371 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:09,372 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:09,372 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:09,372 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:09,372 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:09,372 INFO  [_] Outcome: Success
2020-03-29 20:15:09,372 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:09,373 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:09,373 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:09,373 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:09,373 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:09,373 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:09,373 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:09,373 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 9, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 373531413 })) )
2020-03-29 20:15:09,373 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:09 GMT
, }]
2020-03-29 20:15:09,373 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:09,373 TRACE [hyper::server::response] ending
2020-03-29 20:15:09,374 INFO  [_] Response succeeded.
2020-03-29 20:15:09,374 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:09,374 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47014
2020-03-29 20:15:09,374 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:09,374 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:09,374 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:09,374 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:09,374 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:09,374 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:09,374 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47014
2020-03-29 20:15:09,631 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:09,631 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:09,631 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:09,631 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:09,631 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:09,632 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:09,632 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:09,632 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:09,632 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:09,632 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:09,632 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:09,632 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:09,632 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:09,632 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:09,632 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:09,632 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:09,633 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:09,633 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:09,633 TRACE [_] NetStream::read()
2020-03-29 20:15:09,633 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:09,633 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:09,633 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:09,633 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:09,633 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:09,633 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:09,633 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:09,634 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:09,634 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:09,634 TRACE [_] DataStream::read()
2020-03-29 20:15:09,634 TRACE [_] DataStream::read()
2020-03-29 20:15:09,634 TRACE [_] DataStream::read()
2020-03-29 20:15:09,634 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:09,634 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47016 and port 5002
2020-03-29 20:15:09,634 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:09,634 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:09,634 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:09,635 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:09,635 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:09,635 INFO  [_] Outcome: Success
2020-03-29 20:15:09,635 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:09,635 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:09,635 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:09,635 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:09,635 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:09,635 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:09,635 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:09,636 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 9, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 635922055 })) )
2020-03-29 20:15:09,636 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:09 GMT
, }]
2020-03-29 20:15:09,636 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:09,636 TRACE [hyper::server::response] ending
2020-03-29 20:15:09,636 INFO  [_] Response succeeded.
2020-03-29 20:15:09,636 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:09,636 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47016
2020-03-29 20:15:09,636 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:09,636 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:09,636 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:09,636 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:09,636 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:09,636 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:09,636 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47016
2020-03-29 20:15:09,894 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:09,894 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:09,894 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:09,895 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:09,895 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:09,895 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:09,896 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:09,896 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:09,896 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:09,896 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:09,896 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:09,896 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:09,896 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:09,896 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:09,896 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:09,896 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:09,897 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:09,897 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:09,897 TRACE [_] NetStream::read()
2020-03-29 20:15:09,897 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:09,897 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:09,897 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:09,897 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:09,897 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:09,897 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:09,897 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:09,897 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:09,897 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:09,898 TRACE [_] DataStream::read()
2020-03-29 20:15:09,898 TRACE [_] DataStream::read()
2020-03-29 20:15:09,898 TRACE [_] DataStream::read()
2020-03-29 20:15:09,898 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:09,898 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47018 and port 5002
2020-03-29 20:15:09,898 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:09,898 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:09,898 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:09,898 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:09,898 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:09,899 INFO  [_] Outcome: Success
2020-03-29 20:15:09,899 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:09,899 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:09,899 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:09,899 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:09,899 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:09,899 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:09,899 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:09,899 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 9, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 899689927 })) )
2020-03-29 20:15:09,899 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:09 GMT
, }]
2020-03-29 20:15:09,899 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:09,900 TRACE [hyper::server::response] ending
2020-03-29 20:15:09,900 INFO  [_] Response succeeded.
2020-03-29 20:15:09,900 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:09,900 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47018
2020-03-29 20:15:09,900 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:09,900 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:09,900 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:09,900 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:09,900 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:09,900 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:09,900 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47018
2020-03-29 20:15:10,157 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:10,157 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:10,157 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:10,157 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:10,157 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:10,158 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:10,158 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:10,158 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:10,158 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:10,158 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:10,158 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:10,158 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:10,158 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:10,158 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:10,158 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:10,158 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:10,159 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:10,159 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:10,159 TRACE [_] NetStream::read()
2020-03-29 20:15:10,159 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:10,159 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:10,159 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:10,159 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:10,159 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:10,159 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:10,159 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:10,159 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:10,160 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:10,160 TRACE [_] DataStream::read()
2020-03-29 20:15:10,160 TRACE [_] DataStream::read()
2020-03-29 20:15:10,160 TRACE [_] DataStream::read()
2020-03-29 20:15:10,160 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:10,160 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47020 and port 5002
2020-03-29 20:15:10,160 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:10,160 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:10,161 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:10,161 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:10,161 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:10,161 INFO  [_] Outcome: Success
2020-03-29 20:15:10,161 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:10,161 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:10,161 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:10,161 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:10,161 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:10,162 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:10,162 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:10,162 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 10, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 162162712 })) )
2020-03-29 20:15:10,162 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:10 GMT
, }]
2020-03-29 20:15:10,162 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:10,162 TRACE [hyper::server::response] ending
2020-03-29 20:15:10,162 INFO  [_] Response succeeded.
2020-03-29 20:15:10,162 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:10,162 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47020
2020-03-29 20:15:10,162 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:10,162 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:10,163 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:10,163 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:10,163 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:10,163 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:10,163 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47020
2020-03-29 20:15:10,419 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:10,419 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:10,419 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:10,419 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:10,419 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:10,419 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:10,419 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:10,419 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:10,420 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:10,420 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:10,420 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:10,420 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:10,420 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:10,420 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:10,420 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:10,420 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:10,420 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:10,420 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:10,420 TRACE [_] NetStream::read()
2020-03-29 20:15:10,420 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:10,420 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:10,420 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:10,420 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:10,420 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:10,420 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:10,420 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:10,420 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:10,420 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:10,420 TRACE [_] DataStream::read()
2020-03-29 20:15:10,420 TRACE [_] DataStream::read()
2020-03-29 20:15:10,420 TRACE [_] DataStream::read()
2020-03-29 20:15:10,420 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:10,420 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47022 and port 5002
2020-03-29 20:15:10,421 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:10,421 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:10,421 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:10,421 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:10,421 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:10,421 INFO  [_] Outcome: Success
2020-03-29 20:15:10,421 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:10,421 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:10,421 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:10,421 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:10,421 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:10,421 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:10,421 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:10,421 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 10, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 421789447 })) )
2020-03-29 20:15:10,421 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:10 GMT
, }]
2020-03-29 20:15:10,421 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:10,421 TRACE [hyper::server::response] ending
2020-03-29 20:15:10,422 INFO  [_] Response succeeded.
2020-03-29 20:15:10,422 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:10,422 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47022
2020-03-29 20:15:10,422 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:10,422 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:10,422 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:10,422 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:10,422 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:10,422 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:10,422 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47022
2020-03-29 20:15:10,682 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:10,682 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:10,682 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:10,684 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:10,684 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:10,684 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:10,684 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:10,684 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:10,684 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:10,685 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:10,685 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:10,685 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:10,685 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:10,685 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:10,685 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:10,685 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:10,685 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:10,685 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:10,685 TRACE [_] NetStream::read()
2020-03-29 20:15:10,685 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:10,685 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:10,685 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:10,685 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:10,685 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:10,685 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:10,685 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:10,685 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:10,685 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:10,685 TRACE [_] DataStream::read()
2020-03-29 20:15:10,685 TRACE [_] DataStream::read()
2020-03-29 20:15:10,685 TRACE [_] DataStream::read()
2020-03-29 20:15:10,685 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:10,686 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47024 and port 5002
2020-03-29 20:15:10,686 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:10,686 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:10,686 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:10,686 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:10,686 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:10,686 INFO  [_] Outcome: Success
2020-03-29 20:15:10,686 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:10,686 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:10,686 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:10,686 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:10,686 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:10,686 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:10,686 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:10,686 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 10, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 686682088 })) )
2020-03-29 20:15:10,686 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:10 GMT
, }]
2020-03-29 20:15:10,686 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:10,686 TRACE [hyper::server::response] ending
2020-03-29 20:15:10,686 INFO  [_] Response succeeded.
2020-03-29 20:15:10,686 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:10,686 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47024
2020-03-29 20:15:10,687 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:10,687 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:10,687 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:10,687 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:10,687 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:10,687 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:10,687 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47024
2020-03-29 20:15:10,944 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:10,944 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:10,944 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:10,944 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:10,945 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:10,945 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:10,945 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:10,945 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:10,945 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:10,945 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:10,945 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:10,945 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:10,945 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:10,945 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:10,945 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:10,946 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:10,946 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:10,946 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:10,946 TRACE [_] NetStream::read()
2020-03-29 20:15:10,946 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:10,946 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:10,946 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:10,946 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:10,946 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:10,946 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:10,947 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:10,947 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:10,947 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:10,947 TRACE [_] DataStream::read()
2020-03-29 20:15:10,947 TRACE [_] DataStream::read()
2020-03-29 20:15:10,947 TRACE [_] DataStream::read()
2020-03-29 20:15:10,947 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:10,947 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47026 and port 5002
2020-03-29 20:15:10,947 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:10,947 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:10,947 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:10,948 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:10,948 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:10,948 INFO  [_] Outcome: Success
2020-03-29 20:15:10,948 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:10,948 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:10,948 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:10,948 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:10,948 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:10,948 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:10,948 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:10,949 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 10, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 949062070 })) )
2020-03-29 20:15:10,949 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:10 GMT
, }]
2020-03-29 20:15:10,949 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:10,949 TRACE [hyper::server::response] ending
2020-03-29 20:15:10,949 INFO  [_] Response succeeded.
2020-03-29 20:15:10,949 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:10,949 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47026
2020-03-29 20:15:10,949 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:10,949 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:10,949 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:10,950 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:10,950 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:10,950 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:10,950 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47026
2020-03-29 20:15:11,206 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:11,206 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:11,206 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:11,207 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:11,207 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:11,207 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:11,207 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:11,207 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:11,207 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:11,207 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:11,208 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:11,208 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:11,208 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:11,208 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:11,208 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:11,208 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:11,208 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:11,208 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:11,208 TRACE [_] NetStream::read()
2020-03-29 20:15:11,208 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:11,209 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:11,209 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:11,209 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:11,209 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:11,209 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:11,209 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:11,209 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:11,209 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:11,209 TRACE [_] DataStream::read()
2020-03-29 20:15:11,209 TRACE [_] DataStream::read()
2020-03-29 20:15:11,209 TRACE [_] DataStream::read()
2020-03-29 20:15:11,209 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:11,209 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47028 and port 5002
2020-03-29 20:15:11,210 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:11,210 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:11,210 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:11,210 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:11,210 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:11,210 INFO  [_] Outcome: Success
2020-03-29 20:15:11,210 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:11,210 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:11,210 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:11,211 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:11,211 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:11,211 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:11,211 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:11,211 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 11, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 211384415 })) )
2020-03-29 20:15:11,211 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:11 GMT
, }]
2020-03-29 20:15:11,211 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:11,211 TRACE [hyper::server::response] ending
2020-03-29 20:15:11,211 INFO  [_] Response succeeded.
2020-03-29 20:15:11,211 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:11,212 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47028
2020-03-29 20:15:11,212 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:11,212 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:11,212 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:11,212 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:11,212 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:11,212 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:11,212 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47028
2020-03-29 20:15:11,342 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:11,466 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:11,466 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:11,466 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:11,467 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:11,467 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:11,467 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:11,467 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:11,467 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:11,467 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:11,467 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:11,467 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:11,467 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:11,468 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:11,468 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:11,468 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:11,468 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:11,468 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:11,468 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:11,468 TRACE [_] NetStream::read()
2020-03-29 20:15:11,468 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:11,469 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:11,469 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:11,469 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:11,469 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:11,469 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:11,469 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:11,469 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:11,469 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:11,469 TRACE [_] DataStream::read()
2020-03-29 20:15:11,469 TRACE [_] DataStream::read()
2020-03-29 20:15:11,469 TRACE [_] DataStream::read()
2020-03-29 20:15:11,470 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:11,470 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47030 and port 5002
2020-03-29 20:15:11,470 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:11,470 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:11,470 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:11,471 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:11,471 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:11,471 INFO  [_] Outcome: Success
2020-03-29 20:15:11,471 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:11,471 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:11,471 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:11,471 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:11,471 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:11,471 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:11,471 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:11,471 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 11, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 471628893 })) )
2020-03-29 20:15:11,471 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:11 GMT
, }]
2020-03-29 20:15:11,471 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:11,471 TRACE [hyper::server::response] ending
2020-03-29 20:15:11,471 INFO  [_] Response succeeded.
2020-03-29 20:15:11,471 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:11,472 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47030
2020-03-29 20:15:11,472 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:11,472 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:11,472 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:11,472 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:11,472 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:11,472 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:11,472 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47030
2020-03-29 20:15:11,731 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:11,731 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:11,731 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:11,732 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:11,733 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:11,733 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:11,733 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:11,733 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:11,733 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:11,733 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:11,733 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:11,733 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:11,733 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:11,733 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:11,733 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:11,734 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:11,734 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:11,734 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:11,734 TRACE [_] NetStream::read()
2020-03-29 20:15:11,734 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:11,734 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:11,734 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:11,734 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:11,734 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:11,734 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:11,735 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:11,735 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:11,735 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:11,735 TRACE [_] DataStream::read()
2020-03-29 20:15:11,735 TRACE [_] DataStream::read()
2020-03-29 20:15:11,735 TRACE [_] DataStream::read()
2020-03-29 20:15:11,735 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:11,735 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47032 and port 5002
2020-03-29 20:15:11,735 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:11,735 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:11,735 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:11,736 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:11,736 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:11,736 INFO  [_] Outcome: Success
2020-03-29 20:15:11,736 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:11,736 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:11,736 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:11,736 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:11,736 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:11,736 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:11,736 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:11,737 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 11, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 737064317 })) )
2020-03-29 20:15:11,737 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:11 GMT
, }]
2020-03-29 20:15:11,737 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:11,737 TRACE [hyper::server::response] ending
2020-03-29 20:15:11,737 INFO  [_] Response succeeded.
2020-03-29 20:15:11,737 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:11,737 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47032
2020-03-29 20:15:11,737 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:11,737 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:11,737 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:11,738 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:11,738 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:11,738 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:11,738 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47032
2020-03-29 20:15:11,994 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:11,994 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:11,994 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:11,994 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:11,995 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:11,995 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:11,995 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:11,995 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:11,995 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:11,995 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:11,995 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:11,995 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:11,995 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:11,995 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:11,995 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:11,995 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:11,996 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:11,996 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:11,996 TRACE [_] NetStream::read()
2020-03-29 20:15:11,996 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:11,996 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:11,996 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:11,996 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:11,996 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:11,996 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:11,996 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:11,996 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:11,996 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:11,996 TRACE [_] DataStream::read()
2020-03-29 20:15:11,997 TRACE [_] DataStream::read()
2020-03-29 20:15:11,997 TRACE [_] DataStream::read()
2020-03-29 20:15:11,997 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:11,997 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47034 and port 5002
2020-03-29 20:15:11,997 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:11,997 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:11,997 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:11,997 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:11,997 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:11,998 INFO  [_] Outcome: Success
2020-03-29 20:15:11,998 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:11,998 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:11,998 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:11,998 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:11,998 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:11,998 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:11,998 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:11,998 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 11, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 998769040 })) )
2020-03-29 20:15:11,998 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:11 GMT
, }]
2020-03-29 20:15:11,999 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:11,999 TRACE [hyper::server::response] ending
2020-03-29 20:15:11,999 INFO  [_] Response succeeded.
2020-03-29 20:15:11,999 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:11,999 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47034
2020-03-29 20:15:11,999 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:11,999 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:11,999 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:11,999 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:11,999 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:11,999 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:11,999 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47034
2020-03-29 20:15:12,256 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:12,256 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:12,256 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:12,257 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:12,258 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:12,258 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:12,258 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:12,258 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:12,258 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:12,258 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:12,258 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:12,258 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:12,258 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:12,258 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:12,258 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:12,258 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:12,259 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:12,259 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:12,259 TRACE [_] NetStream::read()
2020-03-29 20:15:12,259 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:12,259 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:12,259 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:12,259 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:12,259 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:12,259 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:12,259 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:12,259 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:12,259 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:12,259 TRACE [_] DataStream::read()
2020-03-29 20:15:12,260 TRACE [_] DataStream::read()
2020-03-29 20:15:12,260 TRACE [_] DataStream::read()
2020-03-29 20:15:12,260 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:12,260 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47036 and port 5002
2020-03-29 20:15:12,260 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:12,260 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:12,260 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:12,260 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:12,260 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:12,261 INFO  [_] Outcome: Success
2020-03-29 20:15:12,261 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:12,261 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:12,261 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:12,261 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:12,261 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:12,261 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:12,262 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:12,262 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 12, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 262118502 })) )
2020-03-29 20:15:12,262 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:12 GMT
, }]
2020-03-29 20:15:12,262 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:12,262 TRACE [hyper::server::response] ending
2020-03-29 20:15:12,262 INFO  [_] Response succeeded.
2020-03-29 20:15:12,262 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:12,262 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47036
2020-03-29 20:15:12,263 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:12,263 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:12,263 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:12,263 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:12,263 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:12,263 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:12,263 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47036
2020-03-29 20:15:12,519 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:12,519 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:12,519 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:12,520 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:12,520 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:12,520 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:12,520 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:12,520 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:12,521 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:12,521 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:12,521 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:12,521 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:12,521 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:12,521 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:12,521 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:12,521 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:12,522 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:12,522 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:12,522 TRACE [_] NetStream::read()
2020-03-29 20:15:12,522 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:12,522 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:12,522 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:12,522 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:12,522 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:12,522 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:12,522 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:12,522 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:12,522 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:12,523 TRACE [_] DataStream::read()
2020-03-29 20:15:12,523 TRACE [_] DataStream::read()
2020-03-29 20:15:12,523 TRACE [_] DataStream::read()
2020-03-29 20:15:12,523 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:12,523 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47038 and port 5002
2020-03-29 20:15:12,523 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:12,523 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:12,523 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:12,523 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:12,523 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:12,523 INFO  [_] Outcome: Success
2020-03-29 20:15:12,524 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:12,524 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:12,524 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:12,524 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:12,524 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:12,524 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:12,524 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:12,524 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 12, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 524660507 })) )
2020-03-29 20:15:12,524 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:12 GMT
, }]
2020-03-29 20:15:12,524 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:12,525 TRACE [hyper::server::response] ending
2020-03-29 20:15:12,525 INFO  [_] Response succeeded.
2020-03-29 20:15:12,525 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:12,525 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47038
2020-03-29 20:15:12,525 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:12,525 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:12,525 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:12,525 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:12,525 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:12,525 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:12,525 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47038
2020-03-29 20:15:12,781 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:12,781 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:12,781 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:12,782 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:12,782 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:12,782 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:12,782 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:12,782 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:12,782 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:12,782 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:12,782 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:12,782 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:12,782 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:12,782 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:12,782 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:12,782 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:12,783 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:12,783 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:12,783 TRACE [_] NetStream::read()
2020-03-29 20:15:12,783 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:12,783 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:12,783 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:12,783 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:12,783 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:12,783 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:12,783 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:12,783 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:12,783 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:12,783 TRACE [_] DataStream::read()
2020-03-29 20:15:12,783 TRACE [_] DataStream::read()
2020-03-29 20:15:12,783 TRACE [_] DataStream::read()
2020-03-29 20:15:12,783 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:12,783 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47040 and port 5002
2020-03-29 20:15:12,783 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:12,783 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:12,783 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:12,784 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:12,784 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:12,784 INFO  [_] Outcome: Success
2020-03-29 20:15:12,784 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:12,784 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:12,784 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:12,784 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:12,785 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:12,785 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:12,785 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:12,785 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 12, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 785407292 })) )
2020-03-29 20:15:12,785 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:12 GMT
, }]
2020-03-29 20:15:12,785 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:12,785 TRACE [hyper::server::response] ending
2020-03-29 20:15:12,785 INFO  [_] Response succeeded.
2020-03-29 20:15:12,786 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:12,786 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47040
2020-03-29 20:15:12,786 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:12,786 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:12,786 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:12,786 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:12,786 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:12,786 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:12,786 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47040
2020-03-29 20:15:13,044 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:13,044 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:13,044 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:13,044 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:13,044 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:13,045 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:13,045 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:13,045 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:13,045 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:13,045 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:13,045 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:13,045 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:13,045 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:13,045 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:13,045 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:13,045 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:13,046 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:13,046 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:13,046 TRACE [_] NetStream::read()
2020-03-29 20:15:13,046 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:13,046 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:13,046 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:13,046 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:13,046 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:13,046 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:13,046 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:13,046 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:13,046 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:13,047 TRACE [_] DataStream::read()
2020-03-29 20:15:13,047 TRACE [_] DataStream::read()
2020-03-29 20:15:13,047 TRACE [_] DataStream::read()
2020-03-29 20:15:13,047 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:13,047 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47042 and port 5002
2020-03-29 20:15:13,047 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:13,047 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:13,047 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:13,047 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:13,047 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:13,048 INFO  [_] Outcome: Success
2020-03-29 20:15:13,048 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:13,048 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:13,048 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:13,048 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:13,048 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:13,048 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:13,048 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:13,048 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 13, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 48647020 })) )
2020-03-29 20:15:13,048 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:13 GMT
, }]
2020-03-29 20:15:13,048 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:13,048 TRACE [hyper::server::response] ending
2020-03-29 20:15:13,049 INFO  [_] Response succeeded.
2020-03-29 20:15:13,049 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:13,049 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47042
2020-03-29 20:15:13,049 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:13,049 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:13,049 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:13,049 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:13,049 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:13,049 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:13,049 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47042
2020-03-29 20:15:13,306 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:13,306 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:13,306 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:13,307 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:13,307 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:13,308 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:13,308 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:13,308 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:13,308 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:13,308 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:13,308 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:13,308 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:13,308 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:13,308 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:13,308 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:13,308 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:13,309 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:13,309 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:13,309 TRACE [_] NetStream::read()
2020-03-29 20:15:13,309 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:13,309 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:13,309 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:13,309 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:13,309 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:13,309 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:13,309 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:13,309 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:13,309 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:13,310 TRACE [_] DataStream::read()
2020-03-29 20:15:13,310 TRACE [_] DataStream::read()
2020-03-29 20:15:13,310 TRACE [_] DataStream::read()
2020-03-29 20:15:13,310 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:13,310 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47044 and port 5002
2020-03-29 20:15:13,310 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:13,310 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:13,310 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:13,310 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:13,310 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:13,311 INFO  [_] Outcome: Success
2020-03-29 20:15:13,311 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:13,311 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:13,311 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:13,311 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:13,311 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:13,311 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:13,311 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:13,311 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 13, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 311690972 })) )
2020-03-29 20:15:13,311 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:13 GMT
, }]
2020-03-29 20:15:13,311 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:13,312 TRACE [hyper::server::response] ending
2020-03-29 20:15:13,312 INFO  [_] Response succeeded.
2020-03-29 20:15:13,312 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:13,312 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47044
2020-03-29 20:15:13,312 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:13,312 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:13,312 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:13,312 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:13,312 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:13,312 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:13,312 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47044
2020-03-29 20:15:13,519 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:13,568 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:13,569 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:13,569 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:13,570 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:13,570 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:13,570 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:13,570 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:13,570 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:13,570 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:13,570 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:13,570 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:13,571 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:13,571 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:13,571 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:13,571 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:13,571 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:13,571 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:13,571 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:13,571 TRACE [_] NetStream::read()
2020-03-29 20:15:13,571 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:13,571 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:13,572 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:13,572 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:13,572 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:13,572 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:13,572 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:13,572 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:13,572 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:13,572 TRACE [_] DataStream::read()
2020-03-29 20:15:13,572 TRACE [_] DataStream::read()
2020-03-29 20:15:13,572 TRACE [_] DataStream::read()
2020-03-29 20:15:13,572 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:13,572 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47046 and port 5002
2020-03-29 20:15:13,572 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:13,573 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:13,573 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:13,573 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:13,573 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:13,573 INFO  [_] Outcome: Success
2020-03-29 20:15:13,573 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:13,573 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:13,574 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:13,574 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:13,574 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:13,574 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:13,574 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:13,574 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 13, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 574427731 })) )
2020-03-29 20:15:13,574 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:13 GMT
, }]
2020-03-29 20:15:13,574 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:13,574 TRACE [hyper::server::response] ending
2020-03-29 20:15:13,574 INFO  [_] Response succeeded.
2020-03-29 20:15:13,575 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:13,575 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47046
2020-03-29 20:15:13,575 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:13,575 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:13,575 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:13,575 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:13,575 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:13,575 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:13,575 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47046
2020-03-29 20:15:13,576 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:13,577 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:13,577 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:13,577 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:13,830 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:13,831 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:13,831 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:13,831 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:13,831 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:13,831 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:13,831 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:13,831 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:13,831 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:13,832 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:13,832 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:13,832 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:13,832 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:13,832 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:13,832 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:13,832 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:13,832 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:13,832 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:13,833 TRACE [_] NetStream::read()
2020-03-29 20:15:13,833 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:13,833 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:13,833 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:13,833 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:13,833 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:13,833 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:13,833 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:13,833 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:13,833 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:13,833 TRACE [_] DataStream::read()
2020-03-29 20:15:13,833 TRACE [_] DataStream::read()
2020-03-29 20:15:13,833 TRACE [_] DataStream::read()
2020-03-29 20:15:13,833 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:13,834 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47048 and port 5002
2020-03-29 20:15:13,834 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:13,834 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:13,834 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:13,834 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:13,834 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:13,834 INFO  [_] Outcome: Success
2020-03-29 20:15:13,834 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:13,834 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:13,834 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:13,835 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:13,835 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:13,835 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:13,835 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:13,835 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 13, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 835397493 })) )
2020-03-29 20:15:13,835 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:13 GMT
, }]
2020-03-29 20:15:13,835 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:13,835 TRACE [hyper::server::response] ending
2020-03-29 20:15:13,835 INFO  [_] Response succeeded.
2020-03-29 20:15:13,835 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:13,836 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47048
2020-03-29 20:15:13,836 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:13,836 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:13,836 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:13,836 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:13,836 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:13,836 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:13,836 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47048
2020-03-29 20:15:14,094 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:14,094 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:14,094 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:14,094 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:14,094 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:14,094 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:14,095 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:14,095 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:14,095 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:14,095 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:14,095 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:14,095 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:14,095 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:14,095 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:14,095 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:14,095 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:14,096 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:14,096 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:14,096 TRACE [_] NetStream::read()
2020-03-29 20:15:14,096 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:14,096 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:14,096 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:14,096 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:14,096 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:14,096 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:14,096 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:14,096 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:14,096 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:14,096 TRACE [_] DataStream::read()
2020-03-29 20:15:14,096 TRACE [_] DataStream::read()
2020-03-29 20:15:14,096 TRACE [_] DataStream::read()
2020-03-29 20:15:14,097 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:14,097 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47050 and port 5002
2020-03-29 20:15:14,097 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:14,097 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:14,097 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:14,097 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:14,097 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:14,097 INFO  [_] Outcome: Success
2020-03-29 20:15:14,097 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:14,098 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:14,098 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:14,098 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:14,098 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:14,098 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:14,098 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:14,098 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 14, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 98535951 })) )
2020-03-29 20:15:14,098 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:14 GMT
, }]
2020-03-29 20:15:14,098 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:14,098 TRACE [hyper::server::response] ending
2020-03-29 20:15:14,098 INFO  [_] Response succeeded.
2020-03-29 20:15:14,099 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:14,099 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47050
2020-03-29 20:15:14,099 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:14,099 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:14,099 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:14,099 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:14,099 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:14,099 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:14,099 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47050
2020-03-29 20:15:14,355 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:14,355 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:14,355 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:14,356 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:14,356 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:14,356 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:14,356 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:14,356 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:14,356 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:14,357 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:14,357 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:14,357 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:14,357 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:14,357 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:14,357 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:14,357 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:14,357 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:14,357 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:14,358 TRACE [_] NetStream::read()
2020-03-29 20:15:14,358 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:14,358 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:14,358 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:14,358 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:14,358 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:14,358 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:14,358 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:14,358 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:14,358 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:14,358 TRACE [_] DataStream::read()
2020-03-29 20:15:14,358 TRACE [_] DataStream::read()
2020-03-29 20:15:14,358 TRACE [_] DataStream::read()
2020-03-29 20:15:14,358 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:14,358 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47052 and port 5002
2020-03-29 20:15:14,359 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:14,359 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:14,359 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:14,359 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:14,359 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:14,359 INFO  [_] Outcome: Success
2020-03-29 20:15:14,359 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:14,359 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:14,359 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:14,360 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:14,360 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:14,360 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:14,360 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:14,360 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 14, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 360330974 })) )
2020-03-29 20:15:14,360 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:14 GMT
, }]
2020-03-29 20:15:14,360 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:14,360 TRACE [hyper::server::response] ending
2020-03-29 20:15:14,360 INFO  [_] Response succeeded.
2020-03-29 20:15:14,360 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:14,361 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47052
2020-03-29 20:15:14,361 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:14,361 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:14,361 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:14,361 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:14,361 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:14,361 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:14,361 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47052
2020-03-29 20:15:14,617 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:14,617 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:14,617 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:14,617 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:14,617 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:14,618 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:14,618 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:14,618 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:14,618 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:14,618 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:14,618 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:14,618 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:14,618 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:14,618 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:14,618 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:14,618 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:14,619 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:14,619 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:14,619 TRACE [_] NetStream::read()
2020-03-29 20:15:14,619 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:14,619 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:14,619 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:14,619 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:14,619 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:14,619 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:14,619 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:14,620 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:14,620 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:14,620 TRACE [_] DataStream::read()
2020-03-29 20:15:14,620 TRACE [_] DataStream::read()
2020-03-29 20:15:14,620 TRACE [_] DataStream::read()
2020-03-29 20:15:14,620 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:14,620 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47054 and port 5002
2020-03-29 20:15:14,620 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:14,620 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:14,620 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:14,620 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:14,620 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:14,621 INFO  [_] Outcome: Success
2020-03-29 20:15:14,621 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:14,621 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:14,621 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:14,621 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:14,621 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:14,621 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:14,621 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:14,621 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 14, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 621813282 })) )
2020-03-29 20:15:14,621 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:14 GMT
, }]
2020-03-29 20:15:14,622 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:14,622 TRACE [hyper::server::response] ending
2020-03-29 20:15:14,622 INFO  [_] Response succeeded.
2020-03-29 20:15:14,622 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:14,622 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47054
2020-03-29 20:15:14,622 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:14,622 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:14,622 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:14,622 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:14,622 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:14,622 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:14,622 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47054
2020-03-29 20:15:14,880 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:14,880 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:14,880 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:14,880 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:14,880 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:14,880 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:14,880 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:14,880 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:14,881 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:14,881 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:14,881 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:14,881 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:14,881 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:14,881 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:14,881 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:14,881 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:14,881 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:14,882 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:14,882 TRACE [_] NetStream::read()
2020-03-29 20:15:14,882 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:14,882 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:14,882 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:14,882 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:14,882 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:14,882 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:14,882 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:14,882 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:14,882 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:14,882 TRACE [_] DataStream::read()
2020-03-29 20:15:14,882 TRACE [_] DataStream::read()
2020-03-29 20:15:14,883 TRACE [_] DataStream::read()
2020-03-29 20:15:14,883 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:14,883 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47056 and port 5002
2020-03-29 20:15:14,883 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:14,883 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:14,883 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:14,883 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:14,883 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:14,883 INFO  [_] Outcome: Success
2020-03-29 20:15:14,883 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:14,883 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:14,884 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:14,884 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:14,884 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:14,884 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:14,884 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:14,884 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 14, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 884484309 })) )
2020-03-29 20:15:14,884 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:14 GMT
, }]
2020-03-29 20:15:14,884 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:14,884 TRACE [hyper::server::response] ending
2020-03-29 20:15:14,884 INFO  [_] Response succeeded.
2020-03-29 20:15:14,885 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:14,885 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47056
2020-03-29 20:15:14,885 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:14,885 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:14,885 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:14,885 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:14,885 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:14,885 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:14,885 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47056
2020-03-29 20:15:15,143 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:15,145 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:15,145 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:15,145 TRACE [hyper::buffer] get_buf [u8; 4096][0..210]
2020-03-29 20:15:15,145 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10, 1, 0, 0, 0, 0, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 11, 217, 207, 180, 0, 64, 91, 140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
2020-03-29 20:15:15,145 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 210])
2020-03-29 20:15:15,145 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:15,145 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:15,145 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:15,145 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:15,146 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:15,146 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:15,146 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:15,146 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:15,146 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:15,146 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:15,146 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:15,147 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:15,147 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:15,147 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:15,147 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:15,147 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:15,147 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:15,147 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:15,147 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:15,147 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:15,147 TRACE [_] DataStream::read()
2020-03-29 20:15:15,147 TRACE [_] DataStream::read()
2020-03-29 20:15:15,147 TRACE [_] DataStream::read()
2020-03-29 20:15:15,148 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:15,148 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47058 and port 5002
2020-03-29 20:15:15,148 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:15,148 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:15,148 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:15,148 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:15,148 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:15,148 INFO  [_] Outcome: Success
2020-03-29 20:15:15,148 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:15,149 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:15,149 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:15,149 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:15,149 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:15,149 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:15,149 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:15,149 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 15, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 149665440 })) )
2020-03-29 20:15:15,149 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:15 GMT
, }]
2020-03-29 20:15:15,149 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:15,150 TRACE [hyper::server::response] ending
2020-03-29 20:15:15,150 INFO  [_] Response succeeded.
2020-03-29 20:15:15,150 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:15,150 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47058
2020-03-29 20:15:15,150 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:15,150 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:15,150 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:15,150 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:15,150 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:15,150 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:15,150 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47058
2020-03-29 20:15:15,406 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:15,406 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:15,406 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:15,407 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:15,407 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:15,407 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:15,407 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:15,407 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:15,408 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:15,408 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:15,408 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:15,408 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:15,408 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:15,408 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:15,408 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:15,408 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:15,408 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:15,409 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:15,409 TRACE [_] NetStream::read()
2020-03-29 20:15:15,409 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:15,409 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:15,409 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:15,409 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:15,409 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:15,409 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:15,409 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:15,409 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:15,409 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:15,409 TRACE [_] DataStream::read()
2020-03-29 20:15:15,409 TRACE [_] DataStream::read()
2020-03-29 20:15:15,409 TRACE [_] DataStream::read()
2020-03-29 20:15:15,409 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:15,410 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47060 and port 5002
2020-03-29 20:15:15,410 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:15,410 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:15,410 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:15,410 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:15,410 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:15,410 INFO  [_] Outcome: Success
2020-03-29 20:15:15,410 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:15,410 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:15,411 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:15,411 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:15,411 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:15,411 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:15,411 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:15,411 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 15, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 411420838 })) )
2020-03-29 20:15:15,411 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:15 GMT
, }]
2020-03-29 20:15:15,411 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:15,411 TRACE [hyper::server::response] ending
2020-03-29 20:15:15,411 INFO  [_] Response succeeded.
2020-03-29 20:15:15,412 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:15,412 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47060
2020-03-29 20:15:15,412 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:15,412 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:15,412 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:15,412 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:15,412 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:15,412 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:15,412 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47060
2020-03-29 20:15:15,438 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:15,668 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:15,668 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:15,668 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:15,668 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:15,669 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:15,669 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:15,669 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:15,669 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:15,669 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:15,669 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:15,669 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:15,669 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:15,669 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:15,669 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:15,669 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:15,669 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:15,670 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:15,670 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:15,670 TRACE [_] NetStream::read()
2020-03-29 20:15:15,670 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:15,670 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:15,670 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:15,670 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:15,670 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:15,670 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:15,670 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:15,670 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:15,670 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:15,671 TRACE [_] DataStream::read()
2020-03-29 20:15:15,671 TRACE [_] DataStream::read()
2020-03-29 20:15:15,671 TRACE [_] DataStream::read()
2020-03-29 20:15:15,671 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:15,671 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47062 and port 5002
2020-03-29 20:15:15,671 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:15,671 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:15,671 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:15,671 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:15,672 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:15,672 INFO  [_] Outcome: Success
2020-03-29 20:15:15,672 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:15,672 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:15,672 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:15,672 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:15,672 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:15,672 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:15,672 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:15,672 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 15, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 672799604 })) )
2020-03-29 20:15:15,672 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:15 GMT
, }]
2020-03-29 20:15:15,673 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:15,673 TRACE [hyper::server::response] ending
2020-03-29 20:15:15,673 INFO  [_] Response succeeded.
2020-03-29 20:15:15,673 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:15,673 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47062
2020-03-29 20:15:15,673 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:15,673 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:15,673 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:15,673 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:15,673 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:15,673 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:15,673 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47062
2020-03-29 20:15:15,930 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:15,931 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:15,931 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:15,931 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:15,931 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:15,931 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:15,931 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:15,931 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:15,931 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:15,932 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:15,932 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:15,932 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:15,932 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:15,932 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:15,932 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:15,932 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:15,932 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:15,932 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:15,933 TRACE [_] NetStream::read()
2020-03-29 20:15:15,933 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:15,933 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:15,933 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:15,933 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:15,933 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:15,933 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:15,933 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:15,933 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:15,933 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:15,933 TRACE [_] DataStream::read()
2020-03-29 20:15:15,933 TRACE [_] DataStream::read()
2020-03-29 20:15:15,933 TRACE [_] DataStream::read()
2020-03-29 20:15:15,934 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:15,934 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47064 and port 5002
2020-03-29 20:15:15,934 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:15,934 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:15,934 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:15,934 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:15,934 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:15,934 INFO  [_] Outcome: Success
2020-03-29 20:15:15,934 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:15,935 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:15,935 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:15,935 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:15,935 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:15,935 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:15,935 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:15,935 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 15, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 935587960 })) )
2020-03-29 20:15:15,935 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:15 GMT
, }]
2020-03-29 20:15:15,935 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:15,935 TRACE [hyper::server::response] ending
2020-03-29 20:15:15,936 INFO  [_] Response succeeded.
2020-03-29 20:15:15,936 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:15,936 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47064
2020-03-29 20:15:15,936 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:15,936 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:15,936 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:15,936 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:15,936 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:15,936 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:15,936 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47064
2020-03-29 20:15:16,194 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:16,194 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:16,194 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:16,194 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:16,195 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:16,195 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:16,195 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:16,195 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:16,195 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:16,195 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:16,195 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:16,195 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:16,195 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:16,195 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:16,195 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:16,196 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:16,196 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:16,196 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:16,196 TRACE [_] NetStream::read()
2020-03-29 20:15:16,196 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:16,196 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:16,196 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:16,196 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:16,196 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:16,196 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:16,196 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:16,197 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:16,197 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:16,197 TRACE [_] DataStream::read()
2020-03-29 20:15:16,197 TRACE [_] DataStream::read()
2020-03-29 20:15:16,197 TRACE [_] DataStream::read()
2020-03-29 20:15:16,197 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:16,197 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47066 and port 5002
2020-03-29 20:15:16,197 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:16,197 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:16,197 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:16,197 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:16,197 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:16,198 INFO  [_] Outcome: Success
2020-03-29 20:15:16,198 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:16,198 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:16,198 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:16,198 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:16,198 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:16,198 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:16,198 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:16,198 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 16, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 198835793 })) )
2020-03-29 20:15:16,198 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:16 GMT
, }]
2020-03-29 20:15:16,199 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:16,199 TRACE [hyper::server::response] ending
2020-03-29 20:15:16,199 INFO  [_] Response succeeded.
2020-03-29 20:15:16,199 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:16,199 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47066
2020-03-29 20:15:16,199 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:16,199 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:16,199 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:16,199 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:16,199 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:16,199 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:16,199 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47066
2020-03-29 20:15:16,457 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:16,457 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:16,457 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:16,457 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:16,457 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:16,457 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:16,457 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:16,457 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:16,457 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:16,458 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:16,458 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:16,458 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:16,458 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:16,458 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:16,458 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:16,458 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:16,458 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:16,458 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:16,459 TRACE [_] NetStream::read()
2020-03-29 20:15:16,459 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:16,459 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:16,459 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:16,459 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:16,459 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:16,459 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:16,459 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:16,459 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:16,459 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:16,459 TRACE [_] DataStream::read()
2020-03-29 20:15:16,459 TRACE [_] DataStream::read()
2020-03-29 20:15:16,459 TRACE [_] DataStream::read()
2020-03-29 20:15:16,459 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:16,460 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47068 and port 5002
2020-03-29 20:15:16,460 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:16,460 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:16,460 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:16,460 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:16,460 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:16,460 INFO  [_] Outcome: Success
2020-03-29 20:15:16,460 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:16,461 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:16,461 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:16,461 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:16,461 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:16,461 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:16,461 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:16,461 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 16, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 461219083 })) )
2020-03-29 20:15:16,461 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:16 GMT
, }]
2020-03-29 20:15:16,461 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:16,461 TRACE [hyper::server::response] ending
2020-03-29 20:15:16,461 INFO  [_] Response succeeded.
2020-03-29 20:15:16,461 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:16,461 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47068
2020-03-29 20:15:16,461 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:16,461 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:16,461 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:16,461 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:16,461 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:16,461 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:16,461 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47068
2020-03-29 20:15:16,720 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:16,720 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:16,720 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:16,720 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:16,720 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:16,720 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:16,720 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:16,721 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:16,721 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:16,721 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:16,721 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:16,721 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:16,721 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:16,721 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:16,721 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:16,721 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:16,721 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:16,722 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:16,722 TRACE [_] NetStream::read()
2020-03-29 20:15:16,722 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:16,722 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:16,722 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:16,722 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:16,722 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:16,722 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:16,722 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:16,722 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:16,722 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:16,722 TRACE [_] DataStream::read()
2020-03-29 20:15:16,722 TRACE [_] DataStream::read()
2020-03-29 20:15:16,722 TRACE [_] DataStream::read()
2020-03-29 20:15:16,722 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:16,723 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47072 and port 5002
2020-03-29 20:15:16,723 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:16,723 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:16,723 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:16,723 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:16,723 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:16,723 INFO  [_] Outcome: Success
2020-03-29 20:15:16,723 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:16,723 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:16,724 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:16,724 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:16,724 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:16,724 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:16,724 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:16,724 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 16, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 724406895 })) )
2020-03-29 20:15:16,724 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:16 GMT
, }]
2020-03-29 20:15:16,724 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:16,724 TRACE [hyper::server::response] ending
2020-03-29 20:15:16,724 INFO  [_] Response succeeded.
2020-03-29 20:15:16,724 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:16,725 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47072
2020-03-29 20:15:16,725 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:16,725 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:16,725 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:16,725 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:16,725 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:16,725 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:16,725 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47072
2020-03-29 20:15:16,983 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:16,983 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:16,983 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:16,984 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:16,984 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:16,984 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:16,984 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:16,984 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:16,984 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:16,985 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:16,985 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:16,985 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:16,985 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:16,985 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:16,985 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:16,985 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:16,985 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:16,985 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:16,986 TRACE [_] NetStream::read()
2020-03-29 20:15:16,986 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:16,986 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:16,986 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:16,986 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:16,986 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:16,986 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:16,986 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:16,986 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:16,986 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:16,986 TRACE [_] DataStream::read()
2020-03-29 20:15:16,986 TRACE [_] DataStream::read()
2020-03-29 20:15:16,986 TRACE [_] DataStream::read()
2020-03-29 20:15:16,986 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:16,986 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47074 and port 5002
2020-03-29 20:15:16,987 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:16,987 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:16,987 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:16,987 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:16,987 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:16,987 INFO  [_] Outcome: Success
2020-03-29 20:15:16,987 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:16,987 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:16,987 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:16,987 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:16,987 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:16,987 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:16,988 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:16,988 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 16, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 988108285 })) )
2020-03-29 20:15:16,988 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:16 GMT
, }]
2020-03-29 20:15:16,988 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:16,988 TRACE [hyper::server::response] ending
2020-03-29 20:15:16,988 INFO  [_] Response succeeded.
2020-03-29 20:15:16,988 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:16,988 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47074
2020-03-29 20:15:16,988 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:16,988 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:16,988 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:16,988 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:16,989 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:16,989 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:16,989 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47074
2020-03-29 20:15:17,246 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:17,246 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:17,246 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:17,246 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:17,246 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:17,247 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:17,247 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:17,247 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:17,247 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:17,247 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:17,247 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:17,247 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:17,247 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:17,247 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:17,247 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:17,247 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:17,248 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:17,248 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:17,248 TRACE [_] NetStream::read()
2020-03-29 20:15:17,248 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:17,248 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:17,248 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:17,248 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:17,248 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:17,248 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:17,248 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:17,248 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:17,248 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:17,248 TRACE [_] DataStream::read()
2020-03-29 20:15:17,249 TRACE [_] DataStream::read()
2020-03-29 20:15:17,249 TRACE [_] DataStream::read()
2020-03-29 20:15:17,249 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:17,249 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47076 and port 5002
2020-03-29 20:15:17,249 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:17,249 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:17,249 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:17,249 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:17,249 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:17,250 INFO  [_] Outcome: Success
2020-03-29 20:15:17,250 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:17,250 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:17,250 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:17,250 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:17,250 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:17,250 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:17,250 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:17,250 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 17, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 250980539 })) )
2020-03-29 20:15:17,251 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:17 GMT
, }]
2020-03-29 20:15:17,251 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:17,251 TRACE [hyper::server::response] ending
2020-03-29 20:15:17,251 INFO  [_] Response succeeded.
2020-03-29 20:15:17,251 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:17,251 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47076
2020-03-29 20:15:17,251 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:17,251 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:17,252 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:17,252 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:17,252 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:17,252 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:17,252 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47076
2020-03-29 20:15:17,510 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:17,510 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:17,510 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:17,511 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:17,511 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:17,511 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:17,511 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:17,511 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:17,512 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:17,512 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:17,512 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:17,512 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:17,512 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:17,512 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:17,512 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:17,512 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:17,512 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:17,513 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:17,513 TRACE [_] NetStream::read()
2020-03-29 20:15:17,513 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:17,513 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:17,513 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:17,513 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:17,513 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:17,513 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:17,513 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:17,513 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:17,513 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:17,513 TRACE [_] DataStream::read()
2020-03-29 20:15:17,513 TRACE [_] DataStream::read()
2020-03-29 20:15:17,513 TRACE [_] DataStream::read()
2020-03-29 20:15:17,514 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:17,514 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47078 and port 5002
2020-03-29 20:15:17,514 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:17,514 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:17,514 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:17,514 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:17,514 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:17,514 INFO  [_] Outcome: Success
2020-03-29 20:15:17,514 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:17,514 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:17,514 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:17,514 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:17,515 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:17,515 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:17,515 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:17,515 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 17, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 515273162 })) )
2020-03-29 20:15:17,515 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:17 GMT
, }]
2020-03-29 20:15:17,515 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:17,515 TRACE [hyper::server::response] ending
2020-03-29 20:15:17,515 INFO  [_] Response succeeded.
2020-03-29 20:15:17,515 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:17,515 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47078
2020-03-29 20:15:17,515 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:17,515 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:17,516 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:17,516 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:17,516 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:17,516 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:17,516 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47078
2020-03-29 20:15:17,771 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:17,771 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:17,771 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:17,771 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:17,772 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:17,772 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:17,772 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:17,772 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:17,772 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:17,772 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:17,772 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:17,772 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:17,772 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:17,772 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:17,772 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:17,773 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:17,773 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:17,773 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:17,773 TRACE [_] NetStream::read()
2020-03-29 20:15:17,773 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:17,773 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:17,773 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:17,773 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:17,773 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:17,773 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:17,774 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:17,774 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:17,774 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:17,774 TRACE [_] DataStream::read()
2020-03-29 20:15:17,774 TRACE [_] DataStream::read()
2020-03-29 20:15:17,774 TRACE [_] DataStream::read()
2020-03-29 20:15:17,774 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:17,774 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47080 and port 5002
2020-03-29 20:15:17,774 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:17,774 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:17,774 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:17,775 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:17,775 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:17,775 INFO  [_] Outcome: Success
2020-03-29 20:15:17,775 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:17,775 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:17,775 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:17,775 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:17,775 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:17,775 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:17,775 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:17,776 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 17, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 776039205 })) )
2020-03-29 20:15:17,776 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:17 GMT
, }]
2020-03-29 20:15:17,776 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:17,776 TRACE [hyper::server::response] ending
2020-03-29 20:15:17,776 INFO  [_] Response succeeded.
2020-03-29 20:15:17,776 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:17,776 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47080
2020-03-29 20:15:17,776 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:17,776 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:17,776 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:17,776 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:17,777 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:17,777 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:17,777 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47080
2020-03-29 20:15:18,034 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:18,034 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:18,034 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:18,035 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:18,035 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:18,035 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:18,035 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:18,035 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:18,035 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:18,035 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:18,035 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:18,036 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:18,036 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:18,036 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:18,036 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:18,036 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:18,036 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:18,036 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:18,036 TRACE [_] NetStream::read()
2020-03-29 20:15:18,036 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:18,037 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:18,037 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:18,037 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:18,037 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:18,037 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:18,037 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:18,037 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:18,037 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:18,037 TRACE [_] DataStream::read()
2020-03-29 20:15:18,037 TRACE [_] DataStream::read()
2020-03-29 20:15:18,037 TRACE [_] DataStream::read()
2020-03-29 20:15:18,037 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:18,037 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47082 and port 5002
2020-03-29 20:15:18,038 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:18,038 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:18,038 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:18,038 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:18,038 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:18,038 INFO  [_] Outcome: Success
2020-03-29 20:15:18,039 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:18,039 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:18,039 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:18,039 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:18,039 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:18,039 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:18,039 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:18,039 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 18, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 39567532 })) )
2020-03-29 20:15:18,039 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:18 GMT
, }]
2020-03-29 20:15:18,039 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:18,039 TRACE [hyper::server::response] ending
2020-03-29 20:15:18,039 INFO  [_] Response succeeded.
2020-03-29 20:15:18,039 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:18,039 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47082
2020-03-29 20:15:18,040 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:18,040 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:18,040 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:18,040 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:18,040 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:18,040 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:18,040 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47082
2020-03-29 20:15:18,299 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:18,299 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:18,299 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:18,300 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:18,300 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:18,300 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:18,300 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:18,300 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:18,301 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:18,301 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:18,301 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:18,301 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:18,301 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:18,301 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:18,301 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:18,301 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:18,302 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:18,302 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:18,302 TRACE [_] NetStream::read()
2020-03-29 20:15:18,302 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:18,302 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:18,302 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:18,302 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:18,302 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:18,302 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:18,302 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:18,302 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:18,302 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:18,302 TRACE [_] DataStream::read()
2020-03-29 20:15:18,302 TRACE [_] DataStream::read()
2020-03-29 20:15:18,302 TRACE [_] DataStream::read()
2020-03-29 20:15:18,302 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:18,303 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47084 and port 5002
2020-03-29 20:15:18,303 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:18,303 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:18,303 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:18,303 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:18,303 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:18,303 INFO  [_] Outcome: Success
2020-03-29 20:15:18,303 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:18,304 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:18,304 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:18,304 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:18,304 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:18,304 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:18,304 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:18,304 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 18, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 304540386 })) )
2020-03-29 20:15:18,304 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:18 GMT
, }]
2020-03-29 20:15:18,304 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:18,304 TRACE [hyper::server::response] ending
2020-03-29 20:15:18,304 INFO  [_] Response succeeded.
2020-03-29 20:15:18,305 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:18,305 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47084
2020-03-29 20:15:18,305 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:18,305 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:18,305 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:18,305 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:18,305 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:18,305 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:18,305 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47084
2020-03-29 20:15:18,559 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:18,559 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:18,559 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:18,560 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:18,560 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:18,560 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:18,560 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:18,560 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:18,560 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:18,560 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:18,560 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:18,560 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:18,560 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:18,560 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:18,560 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:18,560 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:18,561 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:18,561 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:18,561 TRACE [_] NetStream::read()
2020-03-29 20:15:18,561 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:18,561 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:18,561 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:18,561 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:18,561 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:18,561 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:18,561 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:18,561 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:18,561 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:18,561 TRACE [_] DataStream::read()
2020-03-29 20:15:18,561 TRACE [_] DataStream::read()
2020-03-29 20:15:18,561 TRACE [_] DataStream::read()
2020-03-29 20:15:18,561 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:18,561 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47086 and port 5002
2020-03-29 20:15:18,561 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:18,561 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:18,561 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:18,561 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:18,562 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:18,562 INFO  [_] Outcome: Success
2020-03-29 20:15:18,562 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:18,562 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:18,562 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:18,562 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:18,562 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:18,562 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:18,562 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:18,562 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 18, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 562389586 })) )
2020-03-29 20:15:18,562 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:18 GMT
, }]
2020-03-29 20:15:18,562 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:18,562 TRACE [hyper::server::response] ending
2020-03-29 20:15:18,562 INFO  [_] Response succeeded.
2020-03-29 20:15:18,562 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:18,562 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47086
2020-03-29 20:15:18,562 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:18,562 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:18,562 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:18,562 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:18,562 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:18,562 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:18,563 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47086
2020-03-29 20:15:18,575 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:18,577 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:18,577 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:18,577 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:18,577 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:18,822 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:18,822 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:18,822 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:18,823 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:18,823 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:18,823 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:18,823 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:18,823 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:18,823 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:18,823 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:18,823 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:18,823 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:18,823 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:18,823 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:18,823 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:18,823 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:18,823 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:18,823 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:18,823 TRACE [_] NetStream::read()
2020-03-29 20:15:18,823 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:18,823 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:18,823 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:18,823 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:18,823 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:18,824 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:18,824 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:18,824 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:18,824 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:18,824 TRACE [_] DataStream::read()
2020-03-29 20:15:18,824 TRACE [_] DataStream::read()
2020-03-29 20:15:18,824 TRACE [_] DataStream::read()
2020-03-29 20:15:18,824 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:18,824 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47088 and port 5002
2020-03-29 20:15:18,824 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:18,824 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:18,824 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:18,824 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:18,824 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:18,824 INFO  [_] Outcome: Success
2020-03-29 20:15:18,824 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:18,824 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:18,824 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:18,824 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:18,824 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:18,824 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:18,825 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:18,825 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 18, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 825037571 })) )
2020-03-29 20:15:18,825 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:18 GMT
, }]
2020-03-29 20:15:18,825 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:18,825 TRACE [hyper::server::response] ending
2020-03-29 20:15:18,825 INFO  [_] Response succeeded.
2020-03-29 20:15:18,825 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:18,825 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47088
2020-03-29 20:15:18,825 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:18,825 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:18,825 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:18,825 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:18,825 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:18,825 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:18,825 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47088
2020-03-29 20:15:19,083 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:19,084 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:19,084 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:19,084 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:19,084 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:19,084 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:19,084 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:19,084 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:19,084 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:19,084 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:19,084 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:19,085 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:19,085 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:19,085 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:19,085 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:19,085 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:19,085 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:19,085 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:19,085 TRACE [_] NetStream::read()
2020-03-29 20:15:19,085 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:19,085 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:19,086 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:19,086 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:19,086 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:19,086 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:19,086 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:19,086 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:19,086 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:19,086 TRACE [_] DataStream::read()
2020-03-29 20:15:19,086 TRACE [_] DataStream::read()
2020-03-29 20:15:19,086 TRACE [_] DataStream::read()
2020-03-29 20:15:19,086 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:19,086 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47090 and port 5002
2020-03-29 20:15:19,086 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:19,087 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:19,087 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:19,087 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:19,087 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:19,087 INFO  [_] Outcome: Success
2020-03-29 20:15:19,087 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:19,087 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:19,087 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:19,088 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:19,088 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:19,088 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:19,088 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:19,088 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 19, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 88330189 })) )
2020-03-29 20:15:19,088 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:19 GMT
, }]
2020-03-29 20:15:19,088 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:19,088 TRACE [hyper::server::response] ending
2020-03-29 20:15:19,088 INFO  [_] Response succeeded.
2020-03-29 20:15:19,088 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:19,088 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47090
2020-03-29 20:15:19,089 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:19,089 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:19,089 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:19,089 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:19,089 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:19,089 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:19,089 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47090
2020-03-29 20:15:19,346 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:19,346 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:19,346 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:19,346 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:19,346 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:19,347 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:19,347 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:19,347 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:19,347 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:19,347 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:19,347 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:19,347 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:19,347 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:19,347 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:19,347 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:19,347 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:19,348 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:19,348 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:19,348 TRACE [_] NetStream::read()
2020-03-29 20:15:19,348 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:19,348 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:19,348 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:19,348 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:19,348 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:19,348 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:19,348 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:19,349 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:19,349 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:19,349 TRACE [_] DataStream::read()
2020-03-29 20:15:19,349 TRACE [_] DataStream::read()
2020-03-29 20:15:19,349 TRACE [_] DataStream::read()
2020-03-29 20:15:19,349 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:19,349 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47092 and port 5002
2020-03-29 20:15:19,349 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:19,349 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:19,349 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:19,349 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:19,349 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:19,350 INFO  [_] Outcome: Success
2020-03-29 20:15:19,350 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:19,350 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:19,350 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:19,350 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:19,350 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:19,350 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:19,350 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:19,350 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 19, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 350774975 })) )
2020-03-29 20:15:19,350 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:19 GMT
, }]
2020-03-29 20:15:19,351 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:19,351 TRACE [hyper::server::response] ending
2020-03-29 20:15:19,351 INFO  [_] Response succeeded.
2020-03-29 20:15:19,351 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:19,351 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47092
2020-03-29 20:15:19,351 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:19,351 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:19,351 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:19,351 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:19,351 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:19,351 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:19,351 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47092
2020-03-29 20:15:19,535 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:19,608 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:19,608 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:19,608 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:19,608 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:19,608 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:19,608 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:19,609 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:19,609 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:19,609 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:19,609 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:19,609 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:19,609 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:19,609 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:19,609 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:19,609 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:19,609 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:19,609 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:19,609 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:19,609 TRACE [_] NetStream::read()
2020-03-29 20:15:19,609 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:19,609 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:19,609 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:19,609 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:19,609 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:19,609 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:19,609 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:19,609 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:19,609 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:19,610 TRACE [_] DataStream::read()
2020-03-29 20:15:19,610 TRACE [_] DataStream::read()
2020-03-29 20:15:19,610 TRACE [_] DataStream::read()
2020-03-29 20:15:19,610 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:19,610 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47094 and port 5002
2020-03-29 20:15:19,610 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:19,610 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:19,610 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:19,610 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:19,610 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:19,610 INFO  [_] Outcome: Success
2020-03-29 20:15:19,610 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:19,610 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:19,610 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:19,610 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:19,610 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:19,610 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:19,610 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:19,611 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 19, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 611019405 })) )
2020-03-29 20:15:19,611 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:19 GMT
, }]
2020-03-29 20:15:19,611 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:19,611 TRACE [hyper::server::response] ending
2020-03-29 20:15:19,611 INFO  [_] Response succeeded.
2020-03-29 20:15:19,611 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:19,611 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47094
2020-03-29 20:15:19,611 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:19,611 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:19,611 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:19,611 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:19,611 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:19,611 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:19,611 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47094
2020-03-29 20:15:19,872 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:19,872 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:19,872 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:19,872 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:19,872 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:19,872 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:19,872 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:19,872 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:19,873 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:19,873 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:19,873 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:19,873 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:19,873 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:19,873 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:19,873 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:19,873 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:19,873 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:19,874 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:19,874 TRACE [_] NetStream::read()
2020-03-29 20:15:19,874 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:19,874 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:19,874 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:19,874 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:19,874 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:19,874 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:19,874 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:19,874 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:19,874 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:19,874 TRACE [_] DataStream::read()
2020-03-29 20:15:19,874 TRACE [_] DataStream::read()
2020-03-29 20:15:19,874 TRACE [_] DataStream::read()
2020-03-29 20:15:19,874 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:19,875 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47096 and port 5002
2020-03-29 20:15:19,875 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:19,875 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:19,875 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:19,875 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:19,875 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:19,875 INFO  [_] Outcome: Success
2020-03-29 20:15:19,875 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:19,875 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:19,875 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:19,876 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:19,876 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:19,876 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:19,876 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:19,876 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 19, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 876360246 })) )
2020-03-29 20:15:19,876 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:19 GMT
, }]
2020-03-29 20:15:19,876 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:19,876 TRACE [hyper::server::response] ending
2020-03-29 20:15:19,876 INFO  [_] Response succeeded.
2020-03-29 20:15:19,876 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:19,876 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47096
2020-03-29 20:15:19,877 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:19,877 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:19,877 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:19,877 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:19,877 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:19,877 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:19,877 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47096
2020-03-29 20:15:20,134 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:20,134 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:20,134 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:20,136 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:20,136 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:20,136 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:20,136 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:20,136 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:20,136 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:20,136 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:20,136 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:20,136 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:20,137 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:20,137 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:20,137 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:20,137 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:20,137 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:20,137 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:20,137 TRACE [_] NetStream::read()
2020-03-29 20:15:20,137 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:20,137 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:20,137 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:20,138 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:20,138 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:20,138 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:20,138 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:20,138 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:20,138 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:20,138 TRACE [_] DataStream::read()
2020-03-29 20:15:20,138 TRACE [_] DataStream::read()
2020-03-29 20:15:20,138 TRACE [_] DataStream::read()
2020-03-29 20:15:20,138 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:20,138 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47098 and port 5002
2020-03-29 20:15:20,138 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:20,138 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:20,139 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:20,139 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:20,139 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:20,139 INFO  [_] Outcome: Success
2020-03-29 20:15:20,139 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:20,139 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:20,139 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:20,139 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:20,139 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:20,139 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:20,139 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:20,140 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 20, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 140048372 })) )
2020-03-29 20:15:20,140 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:20 GMT
, }]
2020-03-29 20:15:20,140 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:20,140 TRACE [hyper::server::response] ending
2020-03-29 20:15:20,140 INFO  [_] Response succeeded.
2020-03-29 20:15:20,140 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:20,140 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47098
2020-03-29 20:15:20,140 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:20,140 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:20,140 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:20,140 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:20,140 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:20,141 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:20,141 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47098
2020-03-29 20:15:20,393 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:20,394 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:20,394 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:20,394 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:20,394 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:20,394 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:20,394 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:20,394 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:20,394 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:20,395 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:20,395 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:20,395 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:20,395 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:20,395 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:20,395 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:20,395 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:20,395 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:20,395 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:20,396 TRACE [_] NetStream::read()
2020-03-29 20:15:20,396 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:20,396 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:20,396 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:20,396 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:20,396 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:20,396 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:20,396 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:20,396 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:20,396 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:20,396 TRACE [_] DataStream::read()
2020-03-29 20:15:20,396 TRACE [_] DataStream::read()
2020-03-29 20:15:20,396 TRACE [_] DataStream::read()
2020-03-29 20:15:20,396 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:20,397 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47100 and port 5002
2020-03-29 20:15:20,397 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:20,397 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:20,397 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:20,397 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:20,397 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:20,397 INFO  [_] Outcome: Success
2020-03-29 20:15:20,398 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:20,398 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:20,398 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:20,398 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:20,398 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:20,398 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:20,398 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:20,398 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 20, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 398623417 })) )
2020-03-29 20:15:20,398 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:20 GMT
, }]
2020-03-29 20:15:20,398 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:20,398 TRACE [hyper::server::response] ending
2020-03-29 20:15:20,399 INFO  [_] Response succeeded.
2020-03-29 20:15:20,399 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:20,399 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47100
2020-03-29 20:15:20,399 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:20,399 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:20,399 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:20,399 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:20,399 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:20,399 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:20,399 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47100
2020-03-29 20:15:20,658 DEBUG [hyper::server] Incoming stream
2020-03-29 20:15:20,658 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:20,658 TRACE [hyper::buffer] read_into_buf buf[0..4096]
2020-03-29 20:15:20,659 TRACE [hyper::buffer] get_buf [u8; 4096][0..170]
2020-03-29 20:15:20,659 TRACE [hyper::http::h1] try_parse([80, 79, 83, 84, 32, 47, 114, 112, 99, 47, 118, 111, 116, 101, 82, 101, 113, 117, 101, 115, 116, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 117, 115, 101, 114, 45, 97, 103, 101, 110, 116, 58, 32, 77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116, 13, 10, 120, 45, 110, 111, 100, 101, 45, 105, 100, 58, 32, 49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53, 13, 10, 120, 45, 110, 111, 100, 101, 45, 112, 111, 114, 116, 58, 32, 53, 48, 48, 50, 13, 10, 99, 111, 110, 116, 101, 110, 116, 45, 108, 101, 110, 103, 116, 104, 58, 32, 52, 48, 13, 10, 97, 99, 99, 101, 112, 116, 58, 32, 42, 47, 42, 13, 10, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49, 13, 10, 13, 10])
2020-03-29 20:15:20,659 TRACE [hyper::http::h1] Request.try_parse([Header; 100], [u8; 170])
2020-03-29 20:15:20,659 TRACE [hyper::http::h1] Request.try_parse Complete(170)
2020-03-29 20:15:20,659 TRACE [hyper::header] raw header: "user-agent"=[77, 101, 109, 98, 101, 114, 115, 104, 105, 112, 45, 82, 97, 102, 116]
2020-03-29 20:15:20,659 TRACE [hyper::header] raw header: "x-node-id"=[49, 48, 49, 49, 51, 55, 52, 55, 55, 53, 57, 57, 54, 56, 50, 55, 56, 55, 57, 53]
2020-03-29 20:15:20,659 TRACE [hyper::header] raw header: "x-node-port"=[53, 48, 48, 50]
2020-03-29 20:15:20,659 TRACE [hyper::header] raw header: "content-length"=[52, 48]
2020-03-29 20:15:20,659 TRACE [hyper::header] raw header: "accept"=[42, 47, 42]
2020-03-29 20:15:20,659 TRACE [hyper::header] raw header: "host"=[49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 53, 48, 48, 49]
2020-03-29 20:15:20,659 DEBUG [hyper::server::request] Request Line: Post AbsolutePath("/rpc/voteRequest") Http11
2020-03-29 20:15:20,660 DEBUG [hyper::server::request] Headers { user-agent: Membership-Raft
, x-node-id: 10113747759968278795
, x-node-port: 5002
, content-length: 40
, accept: */*
, host: 127.0.0.1:5001
, }
2020-03-29 20:15:20,660 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:20,660 TRACE [_] Data::new(SizedReader(remaining=40))
2020-03-29 20:15:20,660 TRACE [hyper::http::h1] Sized read, remaining=40
2020-03-29 20:15:20,660 TRACE [_] NetStream::read()
2020-03-29 20:15:20,660 TRACE [_] NetStream::read() -- complete
2020-03-29 20:15:20,660 TRACE [hyper::http::h1] Sized read: 40
2020-03-29 20:15:20,660 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:20,660 TRACE [_] Filled peek buf with 40 bytes.
2020-03-29 20:15:20,660 TRACE [_] Peek bytes: 40/512 bytes.
2020-03-29 20:15:20,661 INFO  [rocket::rocket] POST /rpc/voteRequest:
2020-03-29 20:15:20,661 TRACE [_] Routing the request: POST /rpc/voteRequest
2020-03-29 20:15:20,661 TRACE [_] All matches: [Route { name: None, method: Post, base: Origin { source: None, path: "/", query: None, segment_count: [uninitialized storage] }, uri: Origin { source: None, path: "/rpc/voteRequest", query: None, segment_count: [uninitialized storage] }, rank: -4, format: None, metadata: Metadata { path_segments: [RouteSegment { string: "rpc", kind: Static, name: "rpc", index: Some(0), _part: PhantomData }, RouteSegment { string: "voteRequest", kind: Static, name: "voteRequest", index: Some(1), _part: PhantomData }], query_segments: None, fully_dynamic_query: true } }]
2020-03-29 20:15:20,661 INFO  [_] Matched: POST /rpc/voteRequest
2020-03-29 20:15:20,661 TRACE [_] DataStream::read()
2020-03-29 20:15:20,661 TRACE [_] DataStream::read()
2020-03-29 20:15:20,661 TRACE [_] DataStream::read()
2020-03-29 20:15:20,661 TRACE [hyper::http::h1] Sized read, remaining=0
2020-03-29 20:15:20,661 DEBUG [test::webserver] Register node 10113747759968278795 with IP 127.0.0.1:47102 and port 5002
2020-03-29 20:15:20,661 DEBUG [test::webserver] Handling a vote of 40 bytes
2020-03-29 20:15:20,661 TRACE [tokio_reactor] event Readable Token(4194303)
2020-03-29 20:15:20,662 TRACE [tokio_reactor] loop process - 1 events, 0.000s
2020-03-29 20:15:20,662 DEBUG [test::webserver] VoteResponse: Ok(Ok(VoteResponse { term: 1, vote_granted: false, is_candidate_unknown: true }))
2020-03-29 20:15:20,662 TRACE [tokio_reactor] loop process - 0 events, 0.000s
2020-03-29 20:15:20,662 INFO  [_] Outcome: Success
2020-03-29 20:15:20,662 TRACE [hyper::header] Headers.append_raw( "Content-Type", [97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 111, 99, 116, 101, 116, 45, 115, 116, 114, 101, 97, 109] )
2020-03-29 20:15:20,662 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Make", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:20,662 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [85, 116, 111, 112, 105, 97] )
2020-03-29 20:15:20,662 TRACE [hyper::header] Headers.append_raw( "X-Teapot-Model", [83, 101, 114, 105, 101, 115, 32, 49] )
2020-03-29 20:15:20,663 TRACE [hyper::header] Headers.append_raw( "Server", [82, 111, 99, 107, 101, 116] )
2020-03-29 20:15:20,663 TRACE [hyper::header] Headers.set( "Content-Length", ContentLength(10) )
2020-03-29 20:15:20,663 DEBUG [hyper::server::response] writing head: Http11 Ok
2020-03-29 20:15:20,663 TRACE [hyper::header] Headers.set( "Date", Date(HttpDate(Tm { tm_sec: 20, tm_min: 15, tm_hour: 7, tm_mday: 29, tm_mon: 2, tm_year: 120, tm_wday: 0, tm_yday: 88, tm_isdst: 0, tm_utcoff: 0, tm_nsec: 663236770 })) )
2020-03-29 20:15:20,663 DEBUG [hyper::server::response] headers [
Headers { Content-Type: application/octet-stream
, X-Teapot-Make: Rocket
, X-Teapot-Model: Utopia
X-Teapot-Model: Series 1
, Server: Rocket
, Content-Length: 10
, Date: Sun, 29 Mar 2020 07:15:20 GMT
, }]
2020-03-29 20:15:20,663 DEBUG [hyper::server::response] write 10 bytes
2020-03-29 20:15:20,663 TRACE [hyper::server::response] ending
2020-03-29 20:15:20,663 INFO  [_] Response succeeded.
2020-03-29 20:15:20,663 TRACE [hyper::http] should_keep_alive( Http11, None )
2020-03-29 20:15:20,663 DEBUG [hyper::server] keep_alive = true for 127.0.0.1:47102
2020-03-29 20:15:20,663 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:20,664 TRACE [hyper::buffer] reserved 0
2020-03-29 20:15:20,664 TRACE [hyper::buffer] read_into_buf buf[0..0]
2020-03-29 20:15:20,664 TRACE [hyper::buffer] read_into_buf at full capacity
2020-03-29 20:15:20,664 TRACE [hyper::buffer] get_buf []
2020-03-29 20:15:20,664 DEBUG [hyper::server] ioerror in keepalive loop = Custom { kind: UnexpectedEof, error: "end of stream before headers finished" }
2020-03-29 20:15:20,664 DEBUG [hyper::server] keep_alive loop ending for 127.0.0.1:47102
